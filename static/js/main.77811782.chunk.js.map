{"version":3,"sources":["resource/topics sync /^/.//.*//mm/.json$","views/core/EventEmitter.tsx","views/core/store.ts","views/core/Core.ts","views/core/i18n.ts","views/core/AppBridge.ts","views/fb/fbase.ts","env.ts","views/core/Data.ts","views/component/AudioPlayer.tsx","views/wh/WCourseItem.tsx","views/wh/WCourse.tsx","views/wh/WMain.tsx","views/wh/WCourseMain.tsx","views/fb/FBViewLogin.tsx","views/fb/FBViewLogout.tsx","views/fb/FBState.tsx","views/wh/WHeader.tsx","views/component/Equalizer.tsx","views/component/LoadingDom.tsx","views/PagePlaylist.tsx","views/PageShadowing.tsx","views/wh/WPlayer.tsx","views/component/MDictation.tsx","views/wh/WShadowing.tsx","views/component/AlertBasic.tsx","views/component/AlertNoticeInapp.tsx","views/component/AlertBuyProduct.tsx","views/Alert.tsx","views/component/ToastAlert.tsx","views/component/PrintTable.tsx","views/wh/WHome.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Event","events","event","data","this","forEach","callback","push","ON_AUTH_STATE_CHANGED","FB_START_LOGIN","IS_APP_READY","INSERT_PAGE","REPLACE_PAGE","GOTO_BACK","RESET_PAGE","SHOW_ALERT","HIDE_ALERT","INIT_AUDIO","AUDIO_PLAY_PAUSE","AUDIO_STOP","SENTENSE_PLAYING","SENTENSE_PAUSE","SET_BTN_PLAY_STATE","CHANGE_BTN_PLAY_STATE","SHOW_NOTI_MESSAGE","PURCHASE_COMPLETE","FREETIME_UPDATED","CLICK_HOTCLIP_THUMB","SHOW_LOADING","HIDE_LOADING","AUDIO_PLAY_COUNT","CHANGE_TPID","SHOW_TOAST_MESSAGE","config","isLoadingState","atom","key","default","isCloseDetailPanelState","sentenseRepeatIdxState","btnRepeatModeUpdateState","wbIsOpenNavState","tpidState","cidState","isShowShadowingState","printCourseIDState","scrollingTick","scrollingLazyTime","playHotClip","thumbJSON","topicJSON","playClipIdx","json","inCallback","getTopicData","topicID","makeMoreInfoJSON","initAudio","setTimeout","audioPlayPause","sentense","idx","history","createBrowserHistory","isSentensePressing","addEvent","console","log","changePageForHistory","listen","location","action","paramD","window","href","search","d","substring","decrypt","decryptURL","tpid","cid","EventEmitter","dispatch","substr","alert","text","bytes","CryptoJS","AES","JSON","parse","toString","enc","Utf8","err","pageID","arr","message","moduleName","courseID","options","setData","playThumb","firstY","scrollY","clearInterval","setInterval","posY","selector","isEnterFrame","$target","document","querySelector","requestAnimationFrame","enterFrame","nextY","scrollTo","scrollTop","Math","abs","i18n","use","initReactI18next","init","resources","en","translation","hello","bye","ko","lng","fallbackLng","keySeparator","interpolation","escapeValue","win","param","assetPath","deviceType","buyInappProductID","publishingInfo","webVersion","settingInfo2","savedSentense","settingInfo","settingLang","kuid","settingVersion","repeatMode","lastAlbumID","lastTabIdx","useTime","showClips","keepClips","historyClips","keepSentense","sentenseMode","launchTimeArr","inappInfo","inappStartDate","nextInappInfo","nextInappStartDate","todayFreePlayCnt","appinit","notchHieght","getElementById","offsetHeight","env","screenWidth","screen","width","screenHeight","height","hasNotch","lang","changeLanguage","queryString","toWeb","poststring","consolelog","stringify","regionCode","removeOptionalFormat","currencySymbol","deviceLocale","ga","eventCategory","eventAction","eventLabel","eventValue","initStorageData","storageData","toApp","infoStr","backInappInfo","transactionState","convertProdFullIDToCode","purchaseComplete","utils","getTodayStr","prodID","date","transactionDate","t","msg","postData","postData2","data2","inID","result","entries","value","parseData","includes","data1","webkit","messageHandlers","postMessage","str","startsWith","replace","length","isAllPass","cntSum","todayFreeCntDefault","gt","Date","getTime","saveForPlayCntGaptime","cnt","syncStorageData","inMonthCode","inStartDate","core","gotoBack","storageDataStr","isSameDay","todayISO","newDates","concat","getKUID","slice","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userInfo","initUserInfoMerge","userMoreInfo","uid","buyCourses","doneSentense","authService","onAuthStateChanged","user","docName","makeDocNameWithUserInfo","dbService","collection","doc","get","then","docs","extend","syncMoreInfo","catch","r","isLogin","set","email","split","reg","test","emailPw","auth","sendPasswordResetEmail","error","convertErrorMessage","convertMessage","firestore","courseJSON","storage","require","route","supportLang","currPlayIdx","currPlayBtnState","currPageCourseIdx","gaPageName","gaPageSubName","gaFrame","logCnt","currJSON","currIdx","currTopicID","currPlaysTotal","playAudioCnt","tempGotoSavedSentenseIdx","playerSetting","repeat","interval","speed","leftJSON","pageShadowingParam","sentenseEn","sentenseKo","sentenseIdx","currTopicData","rootPath","numberWithCommas","x","parts","join","today","timezoneOffset","getTimezoneOffset","now","day1","day2","toISOString","getLiftDate","startDate","dateLen","diffDays","getAfterDay","baseDate","addDay","getDateStr","otherDate","ceil","getFullYear","_padStart","getMonth","getDate","getHours","getMinutes","uu","c","random","fullPath","i","tabs","items","j","aid","obj","p","assign","hitType","appBridge","tabsJSON","tabsItems","item","axios","response","finally","inType","inItemIdxStr","inTopicID","clipJSON","filterIdxs","filterSentense","filter","type","convert0","s","sentenseJSON","en_0","ko_0","cleanAudio","fbase","state","desc","timeen","startTime","Number","endTime","nextIdx","setCurrPlayBtnState","type2","type1","newArr","AudioPlayer","props","path","isInitLoadingAudio","isInitLoadingAudioCallback","refAudio","createRef","elAudio","isAudioAttachEvent","currRealStatus","currStartTimeOri","currEndTimeOri","currEndTime","currCallback","subscribe","volume","setState","option","audioPause","current","addEventListener","pause","currTime","currentTime","undefined","currentSoundTime","intervalTime","settingInterval","audioSeek","time","audioPlay","playbackRate","addPlayCnt","playPromise","play","_","className","ref","src","getRootPath","Component","CItem","itemJSON","onClick","setParameter","query","tit","CItemMovie","isAvailableBook","Tits","idxPad","_pad","String","isTrial","classnames","trial","WCourseItem","viewType","Tags","Tag","WCourse","parentName","topics","item2","i2","itemViewType","isShowTitle","useState","isHide","setIsHide","tags","title","uniqCnt","CourseItem","isOwner","css","buyProduct","showToastMessage","mtime","from","WMain","course1","item1","WCourseMain","useRecoilValue","setprintCourseID","useSetRecoilState","useEffect","courseItemListJSON","FBViewLogin","isShowLoginPopup","setisShowLoginPopup","signOut","FBViewLogout","inputEmail","setInputEmail","inputPw","setInputPw","inputPw2","setInputPw2","newAccount","setNewAccount","onChange","target","name","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","FBState","checkedLogin","setCheckedLogin","setUpdate","initLogin","WHeader","useRecoilState","Core","Equalizer","LoadingDom","callModeChange","temprepeatMode","scriptMode","PagePlaylist","isShowPlayerControl","isDataAble","setIsDataAble","getCourceItemToTopicID","setClipHistory","isScrolling","$el","y","offsetTop","animateScrollTo","elementToScroll","remove","TopicCover","info","GotoFullScript","makeCurrJSON","replacePage","PlayLists","setActiveIdx","isCloseDetailPanel","activeIdx","isActive","forceRender","setForceRender","SentenseItem","sentenseRepeatIdx","setSentenseRepeatIdxState","clipID","isGlassMode","setIsGlassMode","isCheckVal","isCheck","setIsCheck","isOpenDesc","setIsOpenDesc","setIsShowShadowing","words","checkClick","tf","makeKey","setSettingKeepClipSentense","setSettingKeepSentenseMoreInfo","playOneItem","onTouchStart","sentensePressing","active","isSupportLang","en_","glasson","WordList","Itm","ItemCnt","PlayerControl","renderCnt","setRenderCnt","isClose","setIsClose","setRepeat","setSpeed","isFreeClip","close","BtnRepeatMode","sta","setIsDisable","update","dataRepeatMode","isPlay","BtnScriptMode","setMode","WPlayer","isReadyJSON","setIsReadyJSON","makeCurrJSONWH","sentenseSplit","correctArr","shuffleWords","MDictation","trim","_shuffle","word","oriIdx","submitIdx","setSubmitIdx","submitArr","setSubmitArr","hintIdx","setHintIdx","setMessage","isComplete","setIsComplete","blanks","submitWord","dpWord","toLowerCase","cloneArr","ControlBtns","setIsPlay","language","PageShadowing","WShadowing","AlertBasic","hideAlert","AlertNoticeInapp","openParam","locale","price","inappInfoArr","printPrice","parseInt","insertPage","AlertBuyProduct","isBrowser","stepCD","setStepCD","courseInfoJSON","qrurl","pricesCode","prices","Alert","setModuleName","AlertModule","ToastAlert","setInfo","printJSON","DaySentenses","SentenseList","rowSpan","data-tableexport-xlsxformatid","PrintTable","printCourseID","selectCourseJSON","find","tr","list","printScript","WHome","setTpID","setCID","isShowShadowing","setupdate","isGetUserInfoComplete","App","setIsAppReady","setIsLoading","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77811782.chunk.js","sourcesContent":["var map = {\n\t\"./a000_basic/mm.json\": 302,\n\t\"./blank/mm.json\": 303\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 301;","\n\n/**\n * use\n * import EventEmitter, {Event} from \"common/events/EventEmitter\";\n *\n * dispatch\n * EventEmitter.dispatch(Event.EVENT_EXAMPLE, {같이 넘길 파라메터 });\n *\n * subscribe\n * EventEmitter.subscribe(Event.EVENT_EXAMPLE, (options:any)=>{\n *  {같이 넘길 파라메터 }\n * });\n */\nexport class Event {\n\n\tpublic static ON_AUTH_STATE_CHANGED: string = \"onAuthStateChanged\";\n\tpublic static FB_START_LOGIN: string = \"fbStartLogin\";\n\tpublic static IS_APP_READY: string = \"isAppReady\";\n\tpublic static INSERT_PAGE: string = \"insertPage\";\n\tpublic static REPLACE_PAGE: string = \"replacePage\";\n\tpublic static GOTO_BACK: string = \"gotoBack\";\n\tpublic static RESET_PAGE: string = \"resetPage\";\n\tpublic static SHOW_ALERT: string = \"showAlert\";\n\tpublic static HIDE_ALERT: string = \"hideAlert\";\n\tpublic static INIT_AUDIO: string = 'initAudio';\n\tpublic static AUDIO_PLAY_PAUSE: string = 'audioPlayPause';\n\tpublic static AUDIO_STOP: string = 'audioStop';\n\tpublic static SENTENSE_PLAYING: string = 'sentensePlaying';\n\tpublic static SENTENSE_PAUSE: string = 'sentensePause';\n\tpublic static SET_BTN_PLAY_STATE: string = 'setBtnPlayState';// 외부에서 버튼 상태를 변경할때 발생 \n\tpublic static CHANGE_BTN_PLAY_STATE: string = \"changeBtnPlayState\";// 버튼 자신이 변경되면 외부에 알리느라 발생  \n\tpublic static SHOW_NOTI_MESSAGE: string = \"showNotiMessage\";\n\tpublic static PURCHASE_COMPLETE: string = \"purchaseComplete\";\n\tpublic static FREETIME_UPDATED: string = \"freetimeUpdated\";\n\tpublic static CLICK_HOTCLIP_THUMB: string = \"clickHotclipThumb\";\n\tpublic static SHOW_LOADING: string = \"showLoading\";\n\tpublic static HIDE_LOADING: string = \"hideLoading\";\n\tpublic static AUDIO_PLAY_COUNT: string = \"audioPlayClunt\";\n\tpublic static CHANGE_TPID: string = \"changeTPID\";\n\tpublic static SHOW_TOAST_MESSAGE: string = \"showToastMessage\";\n\n\n\tconstructor() {\n\t}\n\n\tpublic events: any = {};\n\tpublic dispatch(event: string, data?: any): void {\n\t\tif (!this.events[event]) return;\n\t\tthis.events[event].forEach((callback: (arg0: any) => void) =>\n\t\t\tcallback(data)\n\t\t);\n\t}\n\tpublic subscribe(event: string, callback: any): void {\n\t\tif (!this.events[event]) this.events[event] = [];\n\t\tthis.events[event].push(callback);\n\t}\n\tpublic remove(event: string): void {\n\t\tif (this.events[event]) this.events[event] = null;\n\t}\n}\n\nexport default new Event();\n","import { atom, atomFamily, RecoilState } from \"recoil\";\nimport { isParameter } from \"typescript\";\n\nexport const config = {\n    appid: \"com.kareui.caseteenglish\",\n    inappIDs: {\n        \"unlock01\": \"com.kareui.caseteenglish.unlock01\"\n    }\n}\n\nexport const isLoadingState = atom({\n    key: \"isLoadingState\",\n    default: true,\n})\n\n// playControl detailPanel state\nexport const isCloseDetailPanelState = atom({\n    key: \"isCloseDetailPanelState\",\n    default: true,\n})\n\nexport const sentenseRepeatIdxState: RecoilState<number> = atom({\n    key: \"sentenseRepeatIdxState\",\n    default: 9999,\n})\n\nexport const btnRepeatModeUpdateState: RecoilState<number> = atom({\n    key: \"btnRepeatModeUpdateState\",\n    default: 0,\n})\n\nexport const homeListSortState: RecoilState<string> = atom({\n    key: \"homeListSortState\",\n    default: 'reverse',\n})\nexport const updateCntPlayState: RecoilState<number> = atom({\n    key: \"updateCntPlayState\",\n    default: 0,\n})\n\nexport const wbIsOpenNavState = atom({\n    key: \"wbIsOpenNavState\",\n    default: false,\n});\n\nexport const tpidState = atom({\n    key: \"tpidState\",\n    default: '',\n})\n\nexport const cidState = atom({\n    key: \"cidState\",\n    default: '',\n})\n\nexport const isShowShadowingState = atom({\n    key: \"isShowShadowingState\",\n    default: false,\n})\n\nexport const printCourseIDState = atom({\n    key: \"printCourseIDState\",\n    default: '',\n})\n\n\n// export const updatePagePlaylistState: RecoilState<number> = atom({\n//     key: \"updatePagePlaylistState\",\n//     default: 0,\n// })\n\n\nexport default {};","import CryptoJS from 'crypto-js';\nimport { createBrowserHistory } from \"history\";\nimport data from './Data';\nimport EventEmitter, { Event } from './EventEmitter';\n\nlet scrollingTick: any = null;\nlet scrollingLazyTime: number = 0;\nconst key = \"XDVl1SGxRn\";\nclass PlayHotClip {\n    thumbJSON: any = null;// hotclip json\n    topicJSON: any = null;// 해당ID의 FULL토픽\n    playClipIdx: number = 0;\n\n\n    setData(json: any, inCallback: () => void) {\n        this.playClipIdx = 0;\n        this.thumbJSON = json;\n        data.getTopicData(json.topicID, (topicJSON: any) => {\n            // 숨김문자 생성(여기서 생성 해서 리렌더링시에 다시 하지 않도록 한다)\n            this.topicJSON = data.makeMoreInfoJSON(topicJSON);\n            // console.log('getTopicData sss', currJSON);\n            data.initAudio(this.topicJSON);\n\n            setTimeout(() => {\n                inCallback();\n            });\n\n        });\n        // this.currJSON = data.makeMoreInfoJSON(json);\n        // data.initAudio(json);\n\n    }\n    playThumb(inCallback: (state: string) => void) {\n        if (!this.topicJSON) return;\n        // 1번 문장 플레이\n        data.audioPlayPause(this.thumbJSON.sentense[0].idx, () => {\n            // 2번 문장 플레이\n            inCallback('0');\n            data.audioPlayPause(this.thumbJSON.sentense[1].idx, () => {\n                // 끝\n                inCallback('1');\n            });\n        });\n    }\n}\nconst playHotClip = new PlayHotClip();\n\nclass Core {\n\n    history = createBrowserHistory();\n    isSentensePressing: boolean = false;\n\n    constructor() {\n        this.addEvent();\n        setTimeout(() => {\n            console.log('first check changePageForHistory')\n            this.changePageForHistory();\n        }, 500)\n    }\n\n    addEvent() {\n        this.history.listen(({\n            location,\n            action\n        }: {\n            location: any,\n            action: any,\n        }) => {\n            console.log('location', location, action)\n            if (action === 'POP') {\n                this.changePageForHistory();\n            }\n        });\n    }\n\n\n    setParameter(paramD: string) {\n\n        if (paramD === '') {\n            this.history.push(\"\");\n            window.location.href = '/';\n        } else {\n            // this.history.push(`?d=${paramD}`);\n            window.location.href = `?d=${paramD}`;\n        }\n\n        this.changePageForHistory();\n        // EventEmitter.dispatch(Event.CHANGE_HISTORY, {});\n        // Object.assign(queryStringObj, {param: paramName});\n        // EventEmitter.dispatch(Event.CHANGE_HISTORY, queryStringObj);\n    }\n\n    changePageForHistory() {\n        const search = (window as any).location.search;\n        console.log('decp search: ', search)\n        const d = search.substring(3);// ?d=을 제외한 나머지\n        console.log('decp d: ', d)\n        const decrypt = this.decryptURL(d);\n        if (decrypt && decrypt.tpid) {\n            console.log('decp : ', decrypt)\n            data.tpid = decrypt.tpid;\n            data.cid = decrypt.cid;\n            EventEmitter.dispatch(Event.CHANGE_TPID, {\n                tpid: decrypt.tpid,\n                cid: decrypt.cid,\n            });\n        } else {\n            if (search.substr(0, 3) === '?d=') {\n                alert('wrong url');\n            } else {\n                console.log('correct case');\n            }\n            console.log('decp : undefined tpid')\n\n            EventEmitter.dispatch(Event.CHANGE_TPID, {\n                tpid: ''\n            });\n        }\n        // console.log('ueryString.parse(search)',this.decryptURL(d).tpid);\n        // alert((window as any).history.search);\n    }\n\n    decryptURL(text: string) {\n        try {\n            text = text.substring(7);\n            const bytes = CryptoJS.AES.decrypt(text, key);\n            return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n        } catch (err) {\n            // console.error(err);\n            return;\n        }\n    }\n\n    insertPage(pageID: string) {\n        EventEmitter.dispatch(Event.INSERT_PAGE, {\n            pageID: pageID\n        });\n    }\n    replacePage(pageID: string) {\n        EventEmitter.dispatch(Event.REPLACE_PAGE, {\n            pageID: pageID\n        });\n    }\n    gotoBack(idx: number) {\n        EventEmitter.dispatch(Event.GOTO_BACK, {\n            idx: idx\n        });\n    }\n    resetPage(arr: string[]) {\n        EventEmitter.dispatch(Event.RESET_PAGE, {\n            arr: arr\n        });\n    }\n    showAlert(message: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: 'AlertBasic',\n            message: message,\n        });\n    }\n    showAlertModule(moduleName: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: moduleName\n        });\n    }\n    hideAlert() {\n        EventEmitter.dispatch(Event.HIDE_ALERT, {});\n    }\n    showBuyMessage({\n        courseID\n    }: {\n        courseID: string\n    }) {\n\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: \"AlertNoticeInapp\",\n            courseID: courseID,\n        })\n    }\n    buyProduct({\n        courseID\n    }: {\n        courseID: string\n    }) {\n\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: \"AlertBuyProduct\",\n            courseID: courseID,\n        })\n    }\n    showToastMessage(options: {\n        message: string,\n        mtime: number\n    }) {\n        EventEmitter.dispatch(Event.SHOW_TOAST_MESSAGE, options)\n    }\n    playHotclipThumb(json: any, inCallback: (state: string) => void) {\n        playHotClip.setData(json, () => {\n            playHotClip.playThumb(inCallback);\n        });\n\n    }\n    playHotclipDetail(json: any) {\n\n    }\n    // 현재 화면이 스크롤링 중인가?\n    isScrolling(callback: (result: boolean) => void) {\n        const firstY = window.scrollY;\n        setTimeout(() => {\n            if (firstY === window.scrollY) {\n                callback(false);\n            } else {\n                callback(true);\n            }\n        }, 100);\n    }\n    // sentense클릭동안 스크롤락 실행\n    sentensePressing() {\n        this.isSentensePressing = true;\n        scrollingLazyTime = 2000;// 2초\n        if (scrollingTick) {\n            clearInterval(scrollingTick);\n        }\n        scrollingTick = setInterval(() => {\n            scrollingLazyTime = scrollingLazyTime - 500;\n            if (scrollingLazyTime <= 0) {\n                this.isSentensePressing = false;\n                scrollingLazyTime = 0;\n                clearInterval(scrollingTick);\n            }\n        }, 500);\n    }\n    scrollTo(posY: number, selector?: string) {\n        let isEnterFrame = true;\n        console.log('tmplog_posY', posY)\n        const $target: any = (selector) ? document.querySelector(selector) : window;\n        // $target.scrollTo(0, posY);\n        // return;\n\n        function enterFrame() {\n            // 이동위치 = 현재 위치 + (목표 위치 - 현재 위치) * 속도\n            const nextY = window.scrollY + (posY - window.scrollY) * 0.23;\n            $target.scrollTo(0, nextY);\n\n            const scrollY = (selector) ? $target.scrollTop : window.scrollY;\n\n            const math = Math.abs(scrollY - posY);\n            if (math < 5) {\n                isEnterFrame = false;\n            }\n            if (isEnterFrame) {\n                window.requestAnimationFrame(enterFrame);\n            }\n        }\n        setTimeout(() => {\n            isEnterFrame = false;\n        }, 2000);\n        window.requestAnimationFrame(enterFrame);\n\n    }\n\n\n}\n\nexport default new Core();","\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst resource = {\n    en: {\n        translation: {\n            hello: \"hello\",\n            bye: \"bye\",\n            'home-todayclip': \"TODAY Clip\",\n            'home-toipcclip': \"Detail Clip\",\n            'home-allclip': \"All Clip\",\n            'home-traning': \"LOOP\",\n            'alert-a001': \"No items to restore\",\n            'alert-a002': \"Restoration success\",\n            'alert-a003': \"There is no storage item.\",\n            'level1-label': 'Lv.1',\n            'level2-label': 'Lv.2',\n            'level3-label': 'Lv.3',\n            'level4-label': 'Lv.4',\n            'sortby-newest': 'Newest first',\n            'sortby-oldest': 'Oldest first',\n            'recent': 'Recent',\n            'setting-open': 'Setting open',\n            'setting-close': 'Setting close',\n            'repeat': 'Repeat',\n            'interval': 'Interval',\n            'speed': 'Speed',\n            'play-all': 'Play all',\n            'play-all-stop': 'Stop all',\n            'en-ko': 'Senten Show',\n            'en-only': 'Show En',\n            'ko-only': 'Senten Hide',\n            'sentenselength': 'Sentense length',\n            'play': 'Play',\n            'play-infinity': 'Infinite play',\n            'stop-infinity': 'Infinite stop',\n            'save-sentense': 'Sentense save',\n            'saved-sentense': 'Saved',\n            'shadowing-training': 'Deep Training',\n            'glassmode-show': 'Show hint',\n            'words': 'Words',\n            'null-priceinfo1': 'Could not get price information.',\n            'null-priceinfo2': 'Check your internet connection.',\n            'inapp-restore': 'Restore in-app purchases',\n            'saved-clips': 'Saved clips',\n            'saved-sentences': 'Saved sentences',\n            'showen-last500': 'Shows the last 500 items',\n            'inapp-alert1': ' free times a day',\n            'inapp-alert2': 'One purchase and unlimited ',\n            'inapp-alert3': 'lifetime access to all features!!',\n            'inapp-alert-btnok': 'Membership details',\n            'inapp-alert-btnno': 'Close',\n        },\n    },\n    ko: {\n        translation: {\n            hello: \"안녕\",\n            bye: \"잘가\",\n            'home-todayclip': \"TODAY 클립\",\n            'home-toipcclip': \"심화 코스\",\n            'home-allclip': \"전체 클립\",\n            'home-traning': \"반복\",\n            'alert-a001': \"복원할 내역이 없습니다.\",\n            'alert-a002': \"구매복원에 성공하였습니다.\",\n            'alert-a003': \"저장 항목이 없습니다.\",\n            'level1-label': 'Lv.1',\n            'level2-label': 'Lv.2',\n            'level3-label': 'Lv.3',\n            'level4-label': 'Lv.4',\n            'sortby-newest': '최신회부터',\n            'sortby-oldest': '첫회부터',\n            'recent': '최근',\n            'setting-open': '설정열기',\n            'setting-close': '설정닫기',\n            'repeat': '반복',\n            'interval': '간격',\n            'speed': '속도',\n            'play-all': '전체듣기',\n            'play-all-stop': '듣기중단',\n            'en-ko': '영+한',\n            'en-only': '영어만',\n            'ko-only': '한글만',\n            'sentenselength': '문장길이',\n            'play': '듣기',\n            'play-infinity': '무한반복',\n            'stop-infinity': '반복종료',\n            'save-sentense': '문장저장',\n            'saved-sentense': '저장됨',\n            'shadowing-training': '강화훈련',\n            'glassmode-show': '잠깐보기',\n            'words': '단어',\n            'null-priceinfo1': '구매 상품정보를 받아오지 못했습니다.',\n            'null-priceinfo2': '잠시 후 다시 시도해 주시거나 인터넷 연결상태를 확인해 주세요.',\n            'inapp-restore': '이미 구매하셨나요? (구매복원)',\n            'saved-clips': '클립 저장 보관함',\n            'saved-sentences': '문장 저장 보관함',\n            'showen-last500': '최근 500개까지 보여짐',\n            'inapp-alert1': '번 오늘 무료이용을 다 사용하셨네요^^',\n            'inapp-alert2': '한 번의 구매로 모든 기능을 무제한으로',\n            'inapp-alert3': '평생 제약 없이 이용하세요!!',\n            'inapp-alert-btnok': '멤버십 상세 보기',\n            'inapp-alert-btnno': '그냥 닫기',\n\n        },\n    },\n};\ni18n.use(initReactI18next).init({\n    resources: resource,\n    lng: \"en\",\n    fallbackLng: \"en\",\n    // debug: true,\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n});\n\nexport default i18n;\n\n","import queryString from \"querystring\";\nimport data, { TProductCode } from \"./Data\";\nimport core from \"./Core\";\nimport EventEmitter, { Event } from \"./EventEmitter\";\nimport lang from './i18n';\nimport { config } from './store';\n\nimport moment from 'moment';\nexport const DEFAULT_USE_TIME = 10 * 60;// 1일 무료사용 시간\n\n// {\n//     \"settingLang\":\"ko\",\n//     \"kuid\":\"U981e0aa6da60b9a\",\n//     \"settingVersion\":1,\n//     \"repeatMode\":\"\",\n//     \"lastAlbumID\":\"\",\n//     \"lastTabIdx\":0,\n//     \"useTime\":600,\n//     \"showClips\":[],\n//     \"keepClips\":[\"a099yfkwyejbzk\"],\n//     \"historyClips\":[\"a060untjiktgxa\",\"a098klawkwhodf\",\"a096gcrsumsepl\",\"a097uhzpgkcbmu\",\"a091jnieljdjto\",\"a024xexytlxkko\",\"a025exyqepyfkp\",\"a099yfkwyejbzk\",\"a059swrhegkcno\"],\n//     \"keepSentense\":[\"a099yfkwyejbzk_0\"],\"sentenseMode\":\"_k\",\n//     \"launchTimeArr\":[\"2020-10-07:12-56\",\"2020-10-07:12-56\",\"2020-10-06:13-14\",\"2020-10-06:13-14\",\"2020-10-06:09-34\"],\"inappInfo\":\"free\",\"inappStartDate\":\"\",\n//     \"nextInappInfo\":\"free\",\"nextInappStartDate\":\"\",\"todayFreePlayCnt\":86}\nconst selfName = \"AppBridge\"\nexport class AppBridge {\n    win: any;\n    param: any;\n\n    assetPath: string = '';\n    deviceType: 'app' | 'web' | '' = '';\n    buyInappProductID: string = '';\n    publishingInfo: {\n        webVersion: string,// web-app구분을 위한 버전정보 \n    } = {\n            webVersion: 'v1_4'\n        }\n    settingInfo2: {\n        savedSentense: any\n    } = {\n            savedSentense: { 'id': 'sentense' },\n        }\n    settingInfo: {\n        settingLang: string,\n        // deviceLocale: string,\n        kuid: string,\n        settingVersion: number,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        lastAlbumID: string,\n        lastTabIdx: number,\n        useTime: number | 'none',\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        historyClips: string[],\n        sentenseMode: '_k' | 'ek' | 'e0' | '0k' | '00',\n        launchTimeArr: string[],\n        inappInfo: TProductCode,// 현재 상품정보 \n        inappStartDate: string, // 현재 상품 구매일 \n        nextInappInfo: TProductCode,// 다음 이어질 상품정보 \n        nextInappStartDate: string, // 다음 이어질 상품 시작일 \n        todayFreePlayCnt: number,// 오늘 무료 카운팅 \n    } = {\n            settingLang: 'ko',\n            // deviceLocale: '',\n            kuid: '',\n            settingVersion: 1.0,\n            repeatMode: '',\n            lastAlbumID: '',\n            lastTabIdx: 0,\n            useTime: 'none',\n            showClips: [],\n            keepClips: [],\n            historyClips: [],\n            keepSentense: [],\n            // keepClips: [\"a060untjiktgxa\", \"a098klawkwhodf\"],\n            // historyClips: [\"a025exyqepyfkp\", \"a095alhjfoljev\"],\n            // keepSentense: [\"a060untjiktgxa_0\", \"a059swrhegkcno_0\", \"a099yfkwyejbzk_2\"],\n            sentenseMode: '_k',\n            launchTimeArr: [],// 최근 10개만 보관 ,\n            inappInfo: 'free',\n            inappStartDate: '',\n            nextInappInfo: 'free',\n            nextInappStartDate: '',\n            todayFreePlayCnt: 0,\n        }\n    appinit: () => void = () => {\n        const notchHieght = document.getElementById('safe-area-top')?.offsetHeight;\n        data.env.screenWidth = window.screen.width;\n        data.env.screenHeight = window.screen.height;\n        data.env.hasNotch = (notchHieght && notchHieght > 0) ? true : false;\n        // alert(data.env.hasNotch);\n        // alert(window.screen.availHeight);\n        // alert(data.deviceLocale);\n        // lang.changeLanguage(data.deviceLocale);\n        lang.changeLanguage('ko');\n        EventEmitter.dispatch(Event.IS_APP_READY, {});\n    };\n    constructor() {\n        this.win = window as any;\n        this.param = queryString.parse(this.win.location.search.substr(1));\n        this.win.toWeb = (poststring: any) => {\n            // alert('toWeb : ');\n            this.toWeb(poststring);\n        }\n\n        if (process.env.NODE_ENV == 'development') {\n            // this.settingInfo.inappInfo = \"unlock01\";\n        }\n\n        setTimeout(() => {\n            this.consolelog(JSON.stringify('poststring'))\n        }, 3000)\n\n        if (process.env.NODE_ENV === \"development\") {\n            // 개발모드 \n            setTimeout(() => {\n                this.appinit();\n            }, 1000)\n        }\n\n    }\n    // init(initCallback: () => void) {\n    //     alert('aaaaa')\n    //     // this.toApp(JSON.stringify({\n    //     //     \"code\": \"setLocalStorage\",\n    //     //     \"data1\": \"test_key\",\n    //     //     \"data2\": \"test_data\"\n    //     // }));\n    //     this.initCallback = initCallback;\n    //     if (this.param.m === 'hgoezwpuds') {\n    //         // 앱 \n    //         this.deviceType = 'app';\n    //     } else if (this.param.m === 'zvggvnadbl') {\n    //         this.deviceType = 'web';\n    //         // web\n    //         this.initCallback();\n    //     } else {\n    //         // else는 개발 완료 후 제거 \n    //         this.initCallback();\n    //     }\n    // }\n    // app->web\n    toWeb(poststring: any) {\n        // 앱 url유효성 체크 \n        // if (this.param.m !== 'hgoezwpuds') {\n        //     // 앱 \n        //     return;\n        // }\n        this.consolelog('toWeb1' + JSON.stringify(poststring))\n        // alert('T O W E B : ' + JSON.stringify(poststring));\n\n        const code = poststring.code;\n\n        // tag_removega\n        // data.ga({\n        //     eventCategory: selfName, //서브화면명 \n        //     eventAction: 'toWeb-code-' + code, //이벤트명\n        //     eventLabel: '',\n        //     eventValue: '',\n        // });\n\n        if (code === 'init') {\n\n        } else if (code === 'initData') {\n            // alert('poststring.assetPath' + poststring.assetPath)\n            this.assetPath = poststring.assetPath;\n            data.regionCode = this.removeOptionalFormat(poststring.regionCode);\n            data.currencySymbol = poststring.currencySymbol;\n            data.deviceLocale = poststring.deviceLocale;\n            // alert('poststring.deviceLocale:' + poststring.deviceLocale);\n\n\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'toWeb-initData1', //이벤트명\n                eventLabel: `regionCode_${data.regionCode}#currencySymbol_${data.currencySymbol}`,\n                eventValue: '',\n            });\n            //\"inappInfo\":\"free\",\"inappStartDate\":\"\"\n            // alert(poststring.regionCode);\n            this.initStorageData(poststring.storageData);\n            setTimeout(() => {\n                this.appinit();\n                // 초기화 후 인앱정보 요청 \n                this.toApp(JSON.stringify({\n                    \"code\": \"callInappInfo\",\n                    \"data1\": \"\",\n                    \"data2\": \"\"\n                }));\n            }, 100);\n\n        } else if (code === \"backInappInfo\") {\n            // 초기화 후 인앱정보 응답\n            // alert(poststring.infoStr);\n\n            const arr = JSON.parse(poststring.infoStr);\n            data.backInappInfo = arr;\n        } else if (code === \"paymentQueue\") {\n            // alert('paymentQueue')\n            // toWeb(inToWebObj: \"{'code':'paymentQueue',transactionState:'purchased'}\");\n            // 초기화 후 인앱정보 응답\n            const transactionState: string = poststring.transactionState;\n            // alert(\"transactionState::\" + transactionState);\n            // EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            if (transactionState === 'purchased') {\n                // this.buyInappProductID\n                const id = this.buyInappProductID;\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"buyInappProductIDAA2:\" + id + \",inappInfo:\" + inappInfo)\n                if (inappInfo === 'free') return;\n                this.purchaseComplete(inappInfo, data.utils.getTodayStr())\n\n            } else if (transactionState === 'failed') {\n                // alert(\"구매에 실패했습니다.\\n다시 한 번 시도 해주세요.\\n\\n이미 구매하셨다면 '구매복원하기'를 \\n진행해 주세요.\")\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'restored') {\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'default') {\n\n            } else if (transactionState === 'restoreError') {\n                alert('프로세스가 종료되었습니다.\\n 다시 시도해주세요.');\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'paymentQueueRestoreCompletedTransactionsFinished') {\n                // restore 로그인 성공 \n                // restore 할 상품이 있고없고랑 별개  \n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'restoredIDs') {\n\n                const id = poststring.prodID;\n\n                let date = '';\n                this.consolelog(\"transactionState:restoredIDs구매복원날짜: \" + poststring.transactionDate);\n                if (poststring.transactionDate === 'nil') {\n                    alert(lang.t('alert-a001'));\n                    return;\n                } else {\n                    date = this.removeOptionalFormat(poststring.transactionDate);\n                    alert(lang.t('alert-a002'));\n                }\n\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"transactionState:restoredIDs\" + inappInfo + ',' + date);\n                this.purchaseComplete(inappInfo, date.substr(0, 10))\n\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            }\n        } else if (code === \"alert\") {\n\n            let msg = poststring.message;\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'alert-' + msg, //이벤트명\n                eventLabel: '',\n                eventValue: '',\n            });\n            if (msg === 'transactionCount0') {\n                msg = lang.t('alert-a001');\n            }\n            alert(msg);\n            EventEmitter.dispatch(Event.HIDE_LOADING, {});\n        }\n        else if (code === \"iapDelegate\") {\n            // let { data as postData, postData2 } = poststring;\n            const postData = poststring.data;\n            const postData2 = poststring.data2;\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'iapDelegate-' + code, //이벤트명\n                eventLabel: postData,\n                eventValue: postData2,\n            });\n            // alert(data + ',' + data2);\n            if (postData === 'funcfail' ||\n                postData === 'funccomplete' ||\n                postData === 'funcpaymentQueueRestoreCompletedTransactionsFinished'\n            ) {\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (postData === 'message') {\n                alert(postData2);\n            } else if (postData === 'funcdeliverPurchaseNotificationFor') {\n\n                // 구매완료 \n                const id = postData2;\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"buyInappProductIDAA1:\" + id + \",inappInfo:\" + inappInfo)\n                if (inappInfo === 'free') return;\n\n                this.purchaseComplete(inappInfo, data.utils.getTodayStr())\n\n            } else if (postData === 'restoreMessage') {\n\n                if (postData2 === 'transactionCount0') {\n                    alert('복원할 내역이 없습니다.');\n                } else if (postData2 === 'restoreError') {\n                    alert('프로세스가 종료되었습니다.\\n 다시 시도해주세요.');\n                    EventEmitter.dispatch(Event.HIDE_LOADING, {});\n                }\n\n            }\n\n        }\n    }\n\n    // 상품전체코드를 month1같이 변환 \n    convertProdFullIDToCode(inID: string) {\n        let result: TProductCode = 'free';\n        Object.entries(config.inappIDs).forEach(([key, value]) => {\n            // console.log(`${key}: ${value}`)\n            if (inID === value) {\n                result = (key as TProductCode);\n            }\n        });\n        return result;\n\n        // return ((): TProductCode => {\n        //     // ##_REPLACE_##\n        //     if (config.inappIDs[0] === id) {\n        //         return \"unlock01\";\n        //     }\n        //     return id.replace(/com.kareui.caseteenglish./,'');\n        //     return \"free\";\n        // })();\n    }\n\n    // web->app\n    toApp(data: any) {\n        try {\n            const parseData = JSON.parse(data);\n\n            // showLoading\n            if ([\"restore\", \"buyInapp\"].includes(parseData.code)) {\n                // EventEmitter.dispatch(Event.SHOW_LOADING, {});\n            }\n            const code = parseData.code;\n            const data1 = parseData.data1;\n            const data2 = parseData.data2;\n            if (code === \"buyInapp\") {\n                this.buyInappProductID = data1;\n            }\n            // tag_removega\n            // data.ga({\n            //     eventCategory: selfName, //서브화면명 \n            //     eventAction: 'toApp-' + code, //이벤트명\n            //     eventLabel: data1,\n            //     eventValue: data2,\n            // });\n            this.win.webkit.messageHandlers.toApp.postMessage(data);\n        } catch (err) {\n            // this.consolelog('err3')\n        }\n    }\n\n    removeOptionalFormat(str: string) {\n        if (str.startsWith('Optional(')) {\n            str = str.replace(/Optional\\(\"/, '');\n            str = str.replace(/Optional\\(/, '');\n            str = str.substr(0, str.length - 2);\n        }\n\n        return str;\n    }\n\n    addPlayCnt() {\n        const isAllPass: boolean = this.settingInfo.inappInfo !== 'free';\n        const cntSum = data.todayFreeCntDefault - this.settingInfo.todayFreePlayCnt;\n        // 무료이고 & 카운팅 만료 \n        console.log('cntSum', cntSum)\n        if (!isAllPass && cntSum < 1) {\n            // core.showBuyMessage();\n            return false;\n        }\n\n        // 너무 빠르게 줄어드는것 방지 처리 \n        // 직전시간과 60밀리 이하의 갭이면 카운팅 안함 \n        const gt = new Date().getTime();\n        this.consolelog(\"tmplog_cnttime\" + gt + ',' + data.saveForPlayCntGaptime + \",\" + (gt - data.saveForPlayCntGaptime) + ',' + (gt - data.saveForPlayCntGaptime > 400));\n        if (gt - data.saveForPlayCntGaptime > 400) {\n            data.saveForPlayCntGaptime = new Date().getTime();\n            this.consolelog('tmplog_cnttime pl')\n            this.settingInfo.todayFreePlayCnt += 1;\n            EventEmitter.dispatch(Event.AUDIO_PLAY_COUNT, 1);\n\n        }\n        const cnt = this.settingInfo.todayFreePlayCnt;\n        // 5번마다 저장(sync)\n        if (cnt > 0 && cnt % 5 === 0) {\n            this.syncStorageData();\n        }\n        return true;\n    }\n\n    purchaseComplete(inMonthCode: TProductCode, inStartDate: string) {\n\n        this.settingInfo.inappInfo = inMonthCode;\n        this.settingInfo.inappStartDate = inStartDate;\n\n        this.syncStorageData();\n        EventEmitter.dispatch(Event.PURCHASE_COMPLETE, {});\n        EventEmitter.dispatch(Event.HIDE_LOADING, {});\n        setTimeout(() => {\n            core.gotoBack(-1);\n        })\n    }\n\n    consolelog(data: string) {\n        try {\n            this.win.webkit.messageHandlers.consolelog.postMessage(data);\n        } catch (err) {\n            // alert('err4');\n            // this.consolelog('err4');\n        }\n    }\n\n    initStorageData(storageDataStr: any) {\n\n        if (storageDataStr === 'nil') {\n            // alert('최초 사용자');\n            this.consolelog('최초 사용자');\n            this.settingInfo.useTime = DEFAULT_USE_TIME;\n\n            // 최초사용자인경우 최초 데이터 생성\n            this.syncStorageData();\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'visit-new', //이벤트명\n                eventLabel: '',\n                eventValue: '',\n            });\n        } else {\n            // alert('재방문 사용자');\n            this.consolelog('재방문 사용자' + storageDataStr);\n\n            let str;\n            if (storageDataStr.startsWith('Optional(')) {\n                str = storageDataStr.replace(/Optional\\(\"/, '');\n                str = str.substr(0, str.length - 2);\n                this.settingInfo = JSON.parse(str);\n            } else {\n                this.settingInfo = storageDataStr;\n            }\n\n            // 저장값이 없으면 0\n            if (!this.settingInfo.todayFreePlayCnt) {\n                this.settingInfo.todayFreePlayCnt = 0;\n            }\n\n\n            // 접속날짜가 바뀐경우 0\n            if (this.settingInfo.launchTimeArr.length > 0 && !data.utils.isSameDay(\n                new Date(this.settingInfo.launchTimeArr[0].substr(0, 10)), data.utils.todayISO()\n            )) {\n                this.settingInfo.todayFreePlayCnt = 0;\n            }\n\n            const inappInfo: TProductCode = this.settingInfo.inappInfo;\n\n\n            // \n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'visit-again', //이벤트명\n                eventLabel: `inappInfo_${this.settingInfo.inappInfo}`,\n                eventValue: `inappStartDate_${this.settingInfo.inappStartDate}`,\n            });\n        }\n\n        // 방문시간들 업데이트 \n        if (!this.settingInfo.launchTimeArr) {\n            this.settingInfo.launchTimeArr = [];\n        }\n\n        // 계속반복 모드인 경우 빈값으로 변환\n        if (this.settingInfo.repeatMode === '1') {\n            this.settingInfo.repeatMode = '';\n        }\n\n        const newDates: string[] = [data.utils.getTodayStr()].concat(this.settingInfo.launchTimeArr);\n        this.settingInfo.launchTimeArr = newDates;\n\n        // 마지막 날짜[0]와 직전 날짜[1]가 다른경우 무료시간 원복  \n        if (newDates.length === 1) {\n            // 첫 실행 \n        } else if (newDates[0].substr(0, 10) !== newDates[1].substr(0, 10)) {\n            // 다른날 실행 \n            this.settingInfo.useTime = DEFAULT_USE_TIME;\n        }\n\n        // 고유 사용자 ID가 없는경우 생성/저장 \n        if (!this.settingInfo.kuid) {\n            this.settingInfo.kuid = data.utils.getKUID();\n        }\n        this.settingInfo.launchTimeArr = this.settingInfo.launchTimeArr.slice(0, 5)\n\n        this.syncStorageData();\n    }\n    syncStorageData() {\n        this.consolelog('syncStorageData');\n        this.toApp(JSON.stringify({\n            \"code\": \"setLocalStorage\",\n            \"data1\": \"setting_info\",\n            \"data2\": JSON.stringify(this.settingInfo)\n        }));\n        // localStorage.setItem('setting_info', JSON.stringify(this.settingInfo))\n    }\n\n}\n\nexport default new AppBridge();","import extend from 'deep-extend';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport { firebaseConfig } from \"../../env\";\nimport EventEmitter, { Event } from \"../core/EventEmitter\";\n\n\n\nfirebase.initializeApp(firebaseConfig);\n\nclass FBase {\n    userInfo: any = 'loading';// loading인 경우 아예 정보 받기 전임\n    initUserInfoMerge: boolean = false;\n    userMoreInfo: {\n        uid: string,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        buyCourses: string[],\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        doneSentense: string[],\n        historyClips: string[],\n    } = {\n            uid: '',\n            repeatMode: '1',\n            buyCourses: [],\n            showClips: [],\n            keepClips: [],\n            keepSentense: [],\n            doneSentense: [],\n            historyClips: [],\n        };\n    initLogin() {\n        authService.onAuthStateChanged((user) => {\n\n            console.log('authService', user);\n\n            this.userInfo = user;\n            // 사용자 셋팅정보 조회\n            // 정보가 null인 경우 기본 정보 생성\n            // 있는경우 정보 덮어씌우기\n            if (this.userInfo) {\n\n                const docName = this.makeDocNameWithUserInfo();\n                console.log('tmplog_authService1', docName);\n                dbService.collection('userstatus').doc(docName).get().then((docs: any) => {\n                    console.log('tmplog_authService3');\n                    // console.log('docs.data()', docs.data());\n                    const data = docs.data();\n                    console.log('docs.data()', docName, data);\n                    if (data) {\n                        data.uid = this.userMoreInfo.uid;\n                        console.log('docs.data()1');\n                        this.userMoreInfo = extend(this.userMoreInfo, data);\n                    } else {\n                        console.log('docs.data()2');\n                        // 최초 진입(데이터 생성)\n                        this.userMoreInfo = extend(this.userMoreInfo, {\n                            uid: this.userInfo.uid\n                        });\n                        this.syncMoreInfo();\n                    }\n                    console.log('docs.data()-1');\n\n                    this.initUserInfoMerge = true;\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                }).catch(function (err) {\n                    // console.log('tmplog_authService4err', err);\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, null);\n                    // if (err.code == 'failed-precondition') {\n                    //     // Multiple tabs open, persistence can only be enabled\n                    //     // in one tab at a a time.\n                    //     // ...\n                    // } else if (err.code == 'unimplemented') {\n                    //     // The current browser does not support all of the\n                    //     // features required to enable persistence\n                    //     // ...\n                    // }\n                });\n                // dbService.collection('userstatus').get().then((docs: any) => {\n                //     let searchUserDocCnt = 0;// 사용자에 대한 문서가 여러개인경우 오류\n                //     docs.docs.forEach((doc: any) => {\n\n                //         const data = doc.data();\n                //         console.log('userMoreInfoa0---', data, data.uid, '-', this.userInfo.uid)\n                //         if (data.uid === this.userInfo.uid) {\n                //             searchUserDocCnt++;\n                //             console.log('userMoreInfoab', this.userMoreInfo, data);\n                //             // 현재 데이터 존재하는경우\n                //             this.userMoreInfo = extend(this.userMoreInfo, data);\n                //         } else {\n                //\n                //         }\n                //         EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n\n                //     })\n                //     // console.log('userMoreInfoac', searchUserDocCnt);\n                //     // // 최초 진입\n                //     // if (searchUserDocCnt === 0) {\n                //     //     // 최초 진입(데이터 생성)\n                //     //     this.userMoreInfo = extend(this.userMoreInfo, {\n                //     //         uid: this.userInfo.uid\n                //     //     });\n                //     //     // 저장\n                //     //     // dbService.collection('userstatus').add(this.userMoreInfo).then((res: any) => {\n                //     //     //     console.log('tmplog_dbsync', res)\n                //     //     // });\n                //     //     this.syncMoreInfo();\n                //     // }\n                //     // // 데이터 중복\n                //     // if (searchUserDocCnt > 1) {\n                //     //     alert('에러' + searchUserDocCnt)\n                //     // }\n                //     // console.log('userMoreInfoarr', this.userMoreInfo)\n                //     // EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                // });\n            } else {\n                console.log('tmplog_authService2');\n                console.log('userMoreInfoarr2', this.userMoreInfo)\n                EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n            }\n\n\n\n        });\n    }\n\n    isLogin() {\n        let r = true;\n        if (this.userInfo === null || this.userInfo === 'loading') {\n            r = false;\n        }\n        return r;\n    }\n    isAvailableBook(cid: string): 'available' | 'needLogin' | 'needPurchase' {\n        // 로그인이 안 된 경우\n        if (!this.isLogin()) {\n            return 'needLogin';\n        }\n        console.log('tmplog_this.userInfo', this.userMoreInfo)\n        // 구매 목록에 없는 경우\n        if (!this.userMoreInfo.buyCourses.includes(cid)) {\n            return 'needPurchase';\n        }\n        return 'available';\n    }\n    syncMoreInfo() {\n        console.log('docs.data()-sync');\n        // 유저 로그인 전이면\n        if (!this.userInfo || this.userInfo === '' || this.userInfo === 'loading') {\n            // alert(this.userInfo);\n            return;\n        }\n        // 유저 데이터를 불러오기 전이면\n        if (!this.initUserInfoMerge) return;\n\n        dbService.collection(\"userstatus\").doc(this.makeDocNameWithUserInfo()).set(this.userMoreInfo).then(function () {\n            console.log(\"Document successfully written!\");\n        });\n    }\n    makeDocNameWithUserInfo() {\n        let id = this.userInfo.email.split('@')[0];\n        const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n        if (reg.test(id)) {\n            id = id.replace(reg, '');\n        }\n        id += 'mXCeNH6A5fjdrDfaOjDe';// 여유있게 자르기위해 랜덤 문자 추가\n        id = id.substr(0, 10);// 10자리로 자름\n        // console.log('this.userInfo.email', this.userInfo.email);\n        return id + this.userInfo.uid;\n    }\n    callLogin(emailPw: {\n        email: string,\n        pw: string,\n    }, callback: (userInfo: any) => void) {\n\n    }\n    sendPasswordResetEmail(email: string) {\n        var auth = firebase.auth();\n        auth.sendPasswordResetEmail(email).then(function () {\n            alert(email + '로 발송된 이메일을 확인 해 주세요.')\n        }).catch((error) => {\n            console.log(error);\n            alert(this.convertErrorMessage(error));\n        });\n    }\n    convertErrorMessage(error: any) {\n        const errorMessage: any = {\n            'auth/invalid-email': '올바른 이메일을 입력하세요.',\n            'auth/invalidNewPw': '입력한 비밀번호가 일치하지 않습니다.',\n            'auth/weak-password': '6자리 이상의 비밀번호를 입력하세요',\n            'auth/wrong-password': '비밀번호가 올바르지 않습니다.',\n            'auth/user-not-found': '해당 가입정보가 없습니다. 정보를 확인 또는 회원가입을 해주세요.',\n            'auth/email-already-in-use': '이미 가입된 이메일입니다.',\n        }\n        const convertMessage = errorMessage[error.code]\n        if (convertMessage) {\n            return convertMessage;\n        }\n        console.log(error);\n        return error.message;\n    }\n}\n\nexport default new FBase();\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","export const firebaseConfig = {\n    apiKey: \"AIzaSyBq__j-SvDbukmkLD5CaFo9rKa4706HHJk\",\n    authDomain: \"casetebook.firebaseapp.com\",\n    databaseURL: \"https://casetebook.firebaseio.com\",\n    projectId: \"casetebook\",\n    storageBucket: \"casetebook.appspot.com\",\n    messagingSenderId: \"863352106334\",\n    appId: \"1:863352106334:web:1a3de357b2edff427ef3cf\",\n    measurementId: \"G-0BQB2PPQBE\"\n};\n","import { padStart as _padStart } from 'lodash';\nimport EventEmitter, { Event } from './EventEmitter';\nimport appBridge from \"./AppBridge\";\nimport { useTranslation } from \"react-i18next\";\nimport lang from \"./i18n\";\nimport axios from 'axios';\nimport fbase from '../fb/fbase';\n\nexport type TProductCode = 'free' | 'unlock01' | 'month3' | 'month6' | 'month12' | 'loop';\nexport type TCourceNames = 'LOOPING' | 'LISTENING' | 'SUMMERY';\n// \n\nconst topicJSON: any = require('../../resource/topics/topic.json');\nconst courseJSON = require('../../resource/topics/course.json');\n\nclass Data {\n\n    public route = {\n\n    }\n    public env = {\n        screenWidth: 0,\n        screenHeight: 0,\n        hasNotch: false\n    }\n    public supportLang: string[] = [\n        'ko',//ko-KR 한국\n        // 'th',//th-TH 태국 \n        // 'vi',//vi-VN 베트남 \n        // 'zh',//zh-TW 대만\n        // 'ja',//ja-JP 일본 \n    ]\n    public currPlayIdx: number = 0;\n    public currPlayBtnState: 'play' | 'stop' = 'stop';// stop:플레이버튼상태 play:퓨즈버튼상태\n    public currPageCourseIdx: number = 1;\n    public gaPageName: string = '';\n    public gaPageSubName: string = '';\n    public gaFrame: any;\n    private logCnt: number = 0;\n    public currJSON: any;\n    public currIdx: string = '';\n    public currTopicID: string = '';\n    public currPlaysTotal: number = -1;\n    public playAudioCnt = 0;\n    public regionCode = \"\";// 국가코드\n    public currencySymbol = \"\";// 국가코드\n    public deviceLocale = '';// 기기 언어와 위치를 고려한 최종 기기 언어 \n    public backInappInfo: string[] = [];\n    public todayFreeCntDefault = 60;\n    public saveForPlayCntGaptime = 0;\n    public tempGotoSavedSentenseIdx: number = 9999;\n    public tpid: string = '';\n    public cid: string = '';\n\n    public playerSetting = {\n        repeat: 1,\n        interval: 0,\n        speed: 1,\n    }\n    public topicJSON: any;\n    public leftJSON: any;\n    public pageShadowingParam: {\n        sentenseEn: string,\n        sentenseKo: string,\n        sentenseIdx: number,\n        topicID: string,\n    } = {\n            sentenseEn: '',\n            sentenseKo: '',\n            sentenseIdx: -1,\n            topicID: '',\n        }\n\n    public t: any;\n    public i18n: any;\n    public currTopicData: {\n        id: string,\n        json: any,\n    } = {\n            id: '',\n            json: null\n        }\n    private rootPath: string = '';\n    constructor() {\n        // const [t, i18n] = useTranslation();\n        // this.t = i18n.t;\n\n    }\n\n    // 지원하는 국가인가?\n    isSupportLang() {\n        // return this.supportLang.includes(lang.language);\n        return true;\n    }\n\n    getRootPath() {\n        if (this.rootPath !== '') return this.rootPath;\n        let fullPath = (window as any).location.href;\n        // 웹인경우 / 경로 \n        if (fullPath.substr(0, 4) === 'http') {\n            this.rootPath = '/';\n            return this.rootPath;\n        }\n        // 앱인경우 index경로 \n        this.rootPath = fullPath.split('index.html')[0];\n        return this.rootPath;\n        // alert(this.win.location.href);\n    }\n\n    // 무료 토픽인가?\n    isFreeClip(inID: string) {\n\n        // const result = this.getItemsToTopicJSON(inID).price === 'free';\n        return true;\n    }\n\n    getItemsToTopicJSON(inID: string) {\n        let result = null;\n        // console.log('tmplog_idid topicJSON', topicJSON.categories.length)\n        for (let i = 0; i < courseJSON.tabs.length; i++) {\n            const items = courseJSON.tabs[i].items;\n            for (let j = 0; j < items.length; j++) {\n                // console.log('tmplog_idid', items[j].aid, items[j].price);\n                if (items[j].aid === inID) {\n                    result = items[j];\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    ga(obj: {\n        hitType?: 'event',\n        eventCategory?: string,\n        eventAction: string,\n        eventLabel: string,\n        eventValue: string,\n    }) {\n        this.logCnt++;\n        // localStorage.setItem('karelcnt', logCnt)\n\n        const p = Object.assign({\n            hitType: 'event', //이벤트 종류 \n            // eventCategory: fbase.userMoreInfo.kuid, //화면명(나는 고객 아이디) \n            eventCategory: this.gaPageName, //화면명(나는 고객 아이디) \n            eventAction: this.gaPageSubName, //서브화면명 \n            eventLabel: '', //이벤트명\n            eventValue: '',\n        }, obj);\n\n        appBridge.toApp(JSON.stringify({\n            \"code\": \"eventLog\",\n            \"data1\": JSON.stringify(p),\n            \"data2\": \"\"\n        }));\n        return;\n\n        // 로컬 테스트는 로그 안쌓도록 \n        const host = (window as any).location.host;\n        // if (host.indexOf('172.20.10') != -1) return;\n        // if (host.indexOf('10.0.1') != -1) return;\n\n        if (!this.gaFrame) {\n            this.gaFrame = (document.getElementById('gaiframe') as any).contentWindow;\n        }\n        if (this.gaFrame) {\n            console.log('eventLog', p);\n            // (this.gaFrame as any).eventLog(p);\n\n            // data.gaFrame = (document.getElementById('gaiframe') as any).contentWindow;\n            this.gaFrame.postMessage(p, '*');\n        }\n\n    }\n\n    // makePagePlaylistData(type: 'clip' | 'topic', option: any, inCallback: () => void) {\n\n    //     if (type === 'topic') {\n    //         this.getTopicData(option.topicID, (json: any) => {\n    //             // 숨김문자 생성(여기서 생성 해서 리렌더링시에 다시 하지 않도록 한다)\n    //             const makeMoreInfoJSON = this.makeMoreInfoJSON(json);\n    //             console.log('tmplog_this.pagePlaylistData json', json);\n    //             this.pagePlaylistData = {\n    //                 topicID: option.topicID,\n    //                 type: type,\n    //                 topicInfo: makeMoreInfoJSON.json.info,\n    //                 clipInfo: null,\n    //                 sentenseJSON: makeMoreInfoJSON.json.sentense,\n    //             }\n    //             console.log('tmplog_this.pagePlaylistData', this.pagePlaylistData);\n    //             if (inCallback) inCallback();\n\n    //         });\n    //     } else if (type === 'clip') {\n    //         this.pagePlaylistData = {\n    //             topicID: 'clipid',\n    //             type: type,\n    //             topicInfo: null,\n    //             clipInfo: null,\n    //             sentenseJSON: null,\n\n    //         }\n    //         if (inCallback) inCallback();\n    //     }\n\n\n\n    // }\n\n    // topicID로  courceJSON에서 item 뽑기 \n    getCourceItemToTopicID(topicID: string) {\n        let result: any = null;\n        const tabs = courseJSON.tabs;\n        for (let i: number = 0; i < tabs.length; i++) {\n            const tabsJSON = tabs[i];\n            const tabsItems = tabsJSON.items;\n            for (let j: number = 0; j < tabsItems.length; j++) {\n                const item = tabsItems[j];\n                if (item.aid === topicID) {\n\n                    result = Object.assign(item, {\n                        courseID: tabsJSON.courseID,\n                        idx: j\n                    });\n                    break;\n                }\n\n            }\n        }\n        return result;\n    }\n\n    // topicID로 토픽 상세데이터 조회 \n    async getTopicData(topicID: string = '', callback?: (json: any) => void) {\n        if (topicID === '') topicID = this.currTopicID;\n        // 현재 불러온 데이터인경우 캐싱해서 중복호출 방지 \n        // if (this.currTopicData.id === topicID) {\n        //     if (callback) callback(this.currTopicData);\n        //     return this.currTopicData;\n        // }\n        const json = await require(`../../resource/topics/${topicID}/mm.json`);\n        // console.log('getTopicData', Object.assign({}, json));\n        this.currTopicData = {\n            id: topicID,\n            json: Object.assign({}, json),\n        }\n\n\n\n        if (callback) callback(this.currTopicData);\n    }\n    async makeCurrJSONWH(tpid: string = '', cid: string = \"\", callback?: (json: any) => void) {\n\n        console.log('makeCurrJSONWH', tpid, cid)\n        // 하나라도 없으면 return\n        if (tpid === '' || cid === '') return;\n        axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {})\n            .then(function (response: any) {\n                const json = response.data;\n\n                // this.currTopicData = {\n                //     id: tpid,\n                //     json: Object.assign({}, json),\n                // }\n\n                if (callback) callback(json);\n            })\n            .catch(function (error) {\n\n            })\n            .finally(function () {\n\n            });\n    }\n\n    makeCurrJSON(inType: 'clip' | 'topic', inItemIdxStr: string, inTopicID: string, inCallback: () => void) {\n        this.currIdx = inItemIdxStr;\n        this.getTopicData(inTopicID, (json: any) => {\n            this.makeMoreInfoJSON(json);\n            inCallback();\n        });\n        // this.currJSON.type = inType;\n\n    }\n\n    makeCurrJSONFromClip(inType: 'clip' | 'topic', clipJSON: any, inCallback: () => void) {\n        this.getTopicData(clipJSON.topicID, (json: any) => {\n            this.makeMoreInfoJSON(json);\n            // console.log('currJSONcurrJSON1', clipJSON)\n            // console.log('currJSONcurrJSON2', this.currJSON)\n\n            // 클립의 index \n            const filterIdxs: number[] = [];\n            clipJSON.sentense.map((item: any) => {\n                filterIdxs.push(item.idx);\n            })\n\n            // currJSON.해당 클립의 idx 만 필터링 \n            // const copyCurrJSON = this.currJSON.slice(0);\n            const filterSentense = this.currJSON.json.sentense.filter((item: any, i: number) => {\n                // console.log('currJSONcurrJSON3', filterIdxs, i);\n                return filterIdxs.includes(i);\n            })\n            this.currJSON.type = inType;\n            this.currJSON.json.sentense = filterSentense;\n            this.currPlaysTotal = this.currJSON.json.sentense.length;\n            inCallback();\n        });\n\n    }\n\n    // makeMoreInfoJSON2(inType:'clip'|'topic',inJson:any, inCallback:()=>void){\n    //     const convert0 = (str: string) => {\n    //         let r = '';\n    //         str.split('').map(s => {\n    //             if (s === ' ') {\n    //                 r += ' ';\n    //             } else {\n    //                 r += '.';//▒ ▤ ▥ ▨ ▧ ▦ ▩\n    //             }\n    //         })\n    //         return r;\n    //     }\n    //     const sentenseJSON = inJson.json.sentense.map((item: any, i: number) => {\n    //         return {\n    //             ...item,\n    //             en_0: convert0(item.en),\n    //             ko_0: convert0(item.ko),\n    //         };\n    //     });\n    //     console.log('makeMoreInfoJSON', sentenseJSON);\n    //     inJson.json.sentense = sentenseJSON;\n    //     inJson.type = inType;\n    //     this.currJSON = inJson;\n    //     // alert(this.currJSON.json.sentense.length);\n    //     this.currPlaysTotal = this.currJSON.json.sentense.length;\n    //     return inJson;\n    // }\n\n    // 조회한 topic json 에 ...변환 속성도 추가 \n    makeMoreInfoJSON(json: any): any {\n        const convert0 = (str: string) => {\n            let r = '';\n            str.split('').map(s => {\n                if (s === ' ') {\n                    r += ' ';\n                } else {\n                    r += '.';//▒ ▤ ▥ ▨ ▧ ▦ ▩\n                }\n            })\n            return r;\n        }\n        console.log('currJSONcurrJSON a1', json)\n\n        const sentenseJSON = json.json.sentense.map((item: any, i: number) => {\n            return {\n                ...item,\n                en_0: convert0(item.en),\n                ko_0: convert0(item.ko),\n            };\n        });\n        console.log('makeMoreInfoJSON', sentenseJSON);\n        json.json.sentense = sentenseJSON;\n        this.currJSON = json;\n        // alert(this.currJSON.json.sentense.length);\n        this.currPlaysTotal = this.currJSON.json.sentense.length;\n        return json;\n    }\n\n    initAudio(json: any) {\n        this.cleanAudio();\n        EventEmitter.dispatch(Event.INIT_AUDIO, json);\n    }\n    cleanAudio() {\n\n        this.currPlayIdx = 0;\n        // this.currTopicID = '';\n        this.currPlayBtnState = 'stop';\n    }\n\n    setClipHistory(id: string) {\n        if (!fbase.userMoreInfo.historyClips) {\n            fbase.userMoreInfo.historyClips = [];\n        }\n        // let arr = JSON.parse(JSON.stringify(fbase.userMoreInfo.historyClips));\n        const arr = fbase.userMoreInfo.historyClips.filter((item: string) => {\n            // 동일 히스토리 존재하면 제거 \n            return item !== id;\n        })\n\n        arr.push(id);\n        fbase.userMoreInfo.historyClips = arr;\n        // debugger;\n        // appBridge.syncStorageData();\n        fbase.syncMoreInfo();\n    }\n\n    setCurrPlayBtnState(state: 'play' | 'stop', desc = '') {\n        console.log('setCurrPlayBtnState', state, desc);\n        this.currPlayBtnState = state;\n        if (state === 'play') {\n            this.audioPlayPause(this.currPlayIdx);\n        } else if (state === 'stop') {\n            EventEmitter.dispatch(Event.AUDIO_STOP, {});\n            EventEmitter.dispatch(Event.SENTENSE_PLAYING, 999);\n        }\n\n    }\n\n    audioPlayRepeat(idx: number) {\n        this.currPlayIdx = idx;\n    }\n\n    numberWithCommas = (x: any) => {\n        let parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    }\n\n\n    audioPlayPause(idx: number, inCallback?: () => void) {\n        console.log('tmplog_debugging a');\n        if (this.currPlayIdx === idx) {\n            this.playAudioCnt++;\n        } else {\n            this.playAudioCnt = 1;\n        }\n        this.currPlayIdx = idx;\n\n        const t: string[] = this.currJSON.json.sentense[idx].timeen.split('|');\n\n        if (t && t.length === 2) {\n            console.log('tmplog_debugging a1');\n            // sentense active\n            EventEmitter.dispatch(Event.SENTENSE_PLAYING, this.currPlayIdx);\n            EventEmitter.dispatch(Event.AUDIO_PLAY_PAUSE, {\n                startTime: Number(t[0]),\n                endTime: Number(t[1]),\n                callback: () => {\n                    console.log('tmplog_debugging a2');\n                    if (inCallback) inCallback();\n\n                    // sentense focus\n                    EventEmitter.dispatch(Event.SENTENSE_PAUSE, this.currPlayIdx);\n\n                    console.log('tmplog_debugging a3', this.currPlayBtnState);\n                    // console.log('this.currPlayBtnState', this.currPlayBtnState, this.currPlaysTotal)\n                    if (this.currPlayBtnState === 'play') {\n\n                        setTimeout(() => {\n                            let nextIdx: number = this.currPlayIdx + 1;\n                            const repeatMode = fbase.userMoreInfo.repeatMode;\n                            if (this.playerSetting.repeat > this.playAudioCnt) {\n                                nextIdx = this.currPlayIdx;\n                            } else if (repeatMode === 'ALL') {\n                                nextIdx = this.currPlayIdx + 1;\n                            } else if (repeatMode === '1') {\n                                nextIdx = this.currPlayIdx;\n                            }\n                            console.log('tmplog_debugging a4', this.currPlayIdx, repeatMode, nextIdx, this.currPlaysTotal);\n\n                            // alert('sss' + nextIdx + ',' + this.currPlaysTotal)\n\n                            // 마지막 트랙 체크 \n                            if (nextIdx > this.currPlaysTotal - 1) {\n\n                                // 반복모드가 아니면 종료(더이상 반복안함)\n                                if (repeatMode === '') {\n                                    this.currPlayIdx = 0;\n                                    // this.setCurrPlayBtnState('stop');\n                                    // EventEmitter.dispatch(Event.SET_BTN_PLAY_STATE, 'stop');\n\n                                    this.setCurrPlayBtnState('stop', 'a9');\n                                    EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                                    return;\n                                }\n                                // 헤더는 0으로 돌림 \n                                nextIdx = 0;\n                            }\n\n                            this.audioPlayPause(nextIdx);\n                        }, 300)\n\n                    }\n                },\n            })\n        }\n\n    }\n\n    setSettingKeepSentenseMoreInfo(\n        type2: 'add' | 'remove',\n        key: string,\n        sentenseEn: string,\n    ) {\n        if (type2 === 'add') {\n            appBridge.settingInfo2.savedSentense[key] = sentenseEn;\n        } else {\n            // 용량관리를 위해 키만 남기고 문장은 삭제\n            appBridge.settingInfo2.savedSentense[key] = '';\n        }\n\n    }\n\n    // 문장 또는 클립 저장 \n    setSettingKeepClipSentense(\n        type1: 'clip' | 'sentense',\n        type2: 'add' | 'remove',\n        value: any) {\n        console.log('setSettingKeepClipSentense', type1, type2, value);\n        let arr: string[] = [];\n        let newArr: string[] = [];\n        if (type1 === 'clip') {\n\n            arr = fbase.userMoreInfo.keepClips;\n        } else if (type1 === 'sentense') {\n            arr = fbase.userMoreInfo.keepSentense;\n        }\n        if (arr.includes(value)) {\n            // 포함되어있을때 삭제 케이스 \n            if (type2 === 'remove') {\n                // 삭제 \n                newArr = arr.filter((item, i) => {\n                    console.log('setSettingKeepClipSentense222', item, value)\n                    return item !== value;\n                });\n                console.log('setSettingKeepClipSentense333', newArr)\n            }\n        } else {\n            // 불포함인데 포함 케이스 \n            if (type2 === 'add') {\n                // 포함 \n                arr.push(value)\n                newArr = JSON.parse(JSON.stringify(arr));\n            }\n        }\n\n        if (type1 === 'clip') {\n            fbase.userMoreInfo.keepClips = newArr;\n            console.log('tmplog_keep1', fbase.userMoreInfo.keepClips);\n        } else if (type1 === 'sentense') {\n            fbase.userMoreInfo.keepSentense = newArr;\n            console.log('tmplog_keep2', fbase.userMoreInfo.keepSentense);\n        }\n        fbase.syncMoreInfo();\n        // appBridge.syncStorageData();\n\n    }\n\n    utils = {\n        today: () => {\n            return new Date();\n            // return new Date('2020-07-19');\n        },\n        todayISO: () => {\n            const timezoneOffset = new Date().getTimezoneOffset() * 60000;\n            return new Date(Date.now() - timezoneOffset);\n\n        },\n        isSameDay: (day1: Date, day2: Date) => {\n\n            // appBridge.consolelog('tmplog_playcnt3samefc:' + day1.toISOString().substr(0, 10)\n            //     + ',' +\n            //     day2.toISOString().substr(0, 10)\n            //     + ',' +\n            //     day1\n            //     + ',' +\n            //     day2\n\n            // )\n\n            return day1.toISOString().substr(0, 10) === day2.toISOString().substr(0, 10);\n\n        },\n        // 시작날짜와 오늘날짜 그리고 총 상품 기간을 기준으로 남은 날짜 계산\n        getLiftDate: (startDate: Date, dateLen: number) => {\n            console.log('getLiftDate',\n                this.utils.diffDays(startDate, this.utils.today()),\n                startDate,\n                dateLen,\n                this.utils.today());\n            return dateLen - (this.utils.diffDays(startDate, this.utils.today()));\n        },\n        getAfterDay: (baseDate: Date, addDay: number) => {\n            return this.utils.getDateStr(new Date(baseDate.getTime() + (addDay * 24 * 60 * 60 * 1000))).substr(0, 10);\n        },\n        diffDays: (date: Date, otherDate: Date) => {\n            return Math.ceil(Math.abs(date.getTime() - otherDate.getTime()) / (1000 * 60 * 60 * 24));\n        },\n        getDateStr: (d: Date) => {\n            return `${d.getFullYear()}-${_padStart((d.getMonth() + 1) + '', 2, '0')}-${_padStart(d.getDate() + '', 2, '0')}:${_padStart(d.getHours() + '', 2, '0')}-${_padStart(d.getMinutes() + '', 2, '0')}`\n        },\n\n        getTodayStr: () => {\n\n            return this.utils.getDateStr(this.utils.today());\n        },\n        getKUID: () => {\n            const uu = 'Uxyxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n            return uu.substr(0, 1) + uu.substring(1);\n        }\n    }\n\n}\n\nexport default new Data();","import React, { Component, createRef, RefObject } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport data from '../core/Data';\nimport appBridge from '../core/AppBridge';\ninterface IProps {\n\n}\nclass AudioPlayer extends Component<IProps> {\n    state = {\n        id: 'blank',\n        path: '../../resource/topics/',\n    }\n    isInitLoadingAudio: boolean = false;// 네트웍에서는 자동플레이를 최초에 실행안하면 뭔가 로드가 안되는듯하여 자동플레이로하고 첫 업데이트에 멈춰놓는다.\n    isInitLoadingAudioCallback: () => void = () => { };\n    refAudio: RefObject<HTMLAudioElement> = createRef();\n    elAudio: HTMLAudioElement | null = null;\n    isAudioAttachEvent: boolean = false;// audio이벤트를 한번만 add하기위한 변수 \n    currRealStatus: 'play' | 'pause' | 'stop' = 'stop';// timeupdate경우는 pause후에도 이벤트가 실행되므로 세밀한 제어를 위한 값 추가 \n    currStartTimeOri: number = 9999999999;\n    currEndTimeOri: number = 9999999999;\n    currEndTime: number = 9999999999;\n    currCallback: () => void = () => {\n\n    };\n    constructor(props: IProps) {\n        super(props);\n        EventEmitter.subscribe(Event.INIT_AUDIO, (json: any) => {\n\n            // console.log('soundInit', json);\n            if (this.elAudio) {\n                this.elAudio.volume = 0;\n            }\n            // 초기화\n            this.isInitLoadingAudio = false;// 네트웍에서는 자동플레이를 최초에 실행안하면 뭔가 로드가 안되는듯하여 자동플레이로하고 첫 업데이트에 멈춰놓는다.\n            this.isInitLoadingAudioCallback = () => { };\n            // alert('initAudio')\n            this.setState({\n                ...this.state,\n                path: '../../resource/topics/',\n                id: json.id,\n            });\n        });\n        EventEmitter.subscribe(Event.AUDIO_PLAY_PAUSE, (option: any) => {\n            console.log('audioPlayPause', option);\n\n            this.audioPlayPause(\n                option.startTime,\n                option.endTime,\n                option.callback\n            )\n        });\n        EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n            this.audioPause();\n        });\n        // ((document as any).querySelector('.mainaudioch') as any).addEventListener('load', () => {\n        //     alert('loadcomplete')\n        // });\n\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            // this.audioPlay();\n            // this.audioSeek(5000);\n        }, 1000);\n        this.elAudio = this.refAudio.current;\n        if (this.elAudio) {\n            this.elAudio.addEventListener('load', () => {\n                // alert('load')\n            })\n            // this.elAudio.play();\n        }\n\n    }\n    componentDidUpdate() {\n        this.elAudio = this.refAudio.current;\n        if (this.elAudio && !this.isAudioAttachEvent) {\n\n            this.elAudio?.addEventListener('timeupdate', () => {\n                if (!this.isInitLoadingAudio) {\n                    this.isInitLoadingAudio = true;\n                    this.elAudio?.pause();\n                    // alert('this.isInitLoadingAudio')\n                    this.isInitLoadingAudioCallback();\n                    return;\n                }\n\n                const currTime = this.elAudio?.currentTime;\n\n                if (currTime === undefined) return;\n                if (this.currEndTime < currTime) {\n\n                    if (this.currRealStatus === 'pause') return;\n                    const currentSoundTime = (this.currEndTimeOri - this.currStartTimeOri);\n\n                    // 셋팅 인터벌을 문장길이로 했으면\n                    const intervalTime = (() => {\n                        const settingInterval = data.playerSetting.interval;\n                        if (settingInterval === 9999) {\n                            return currentSoundTime + 2000;// 문장길이 +1초 \n                        } else {\n                            return settingInterval * 1000;// 설정타임\n                        }\n                    })();\n\n                    this.audioPause();\n                    setTimeout(() => {\n\n                        // 다음 플레이를 수동으로 한 경우 callback 안함 \n                        if (this.currRealStatus === 'pause') {\n                            this.currCallback();\n                        }\n\n                    }, intervalTime)\n\n                }\n            });\n            this.isAudioAttachEvent = true;\n        }\n\n    }\n    audioPlayPause(startTime: number, endTime: number, callback: () => void) {\n        this.currStartTimeOri = startTime;\n        this.currEndTimeOri = endTime;\n        this.currEndTime = endTime / 1000;\n        this.currCallback = callback;\n        // console.log('audioSeek', startTime)\n        this.audioSeek(startTime);\n    }\n    audioPlay(time: number | null = null) {\n\n        // 모바일기기의 퍼미션처럼 초기화가 안된경우 초기화 후 다시실행 \n        if (!this.isInitLoadingAudio) {\n            this.isInitLoadingAudioCallback = () => {\n                this.audioPlay(time);\n            }\n        }\n\n        if (this.elAudio) {\n            this.elAudio.volume = 1;\n            this.elAudio.playbackRate = data.playerSetting.speed;\n            if (time !== null) {\n                this.elAudio.currentTime = time / 1000;\n            }\n            this.currRealStatus = 'play';\n            // alert(this.elAudio.currentTime);\n            // 카운팅 & 무료체크 & 안내 \n            if (!appBridge.addPlayCnt()) return;\n\n\n\n\n            var playPromise = this.elAudio.play();\n\n            if (playPromise !== undefined) {\n                playPromise\n                    .then(_ => {\n                        // Automatic playback started!\n                        // Show playing UI.\n                        console.log(\"audio played auto\");\n                    })\n                    .catch(error => {\n                        // Auto-play was prevented\n                        // Show paused UI.\n                        console.log(\"playback prevented\");\n                    });\n            }\n        }\n\n    }\n    audioPause() {\n        this.currRealStatus = 'pause';\n        this.elAudio?.pause();\n    }\n    audioSeek(time: number) {\n\n        if (this.elAudio) {\n            // alert('a2' + (time / 1000));\n            this.elAudio.currentTime = time / 1000;\n            this.elAudio.playbackRate = data.playerSetting.speed;\n            this.audioPlay(time);\n\n        } else {\n            // alert('a3')\n            // 오디오 준비 전이면 잠시 기다렸다 다시 실행\n            setTimeout(() => {\n\n                this.audioSeek(time);\n\n            }, 100);\n        }\n\n        // player.duration\n        // player.volume\n        // player.paused\n        // player.currentTime\n        // player.addEventListener('timeupdate', updateProgress);\n        // player.addEventListener('volumechange', updateVolume);\n        // player.addEventListener('loadedmetadata', (\n        // player.addEventListener('canplay', makePlay);\n        // player.addEventListener('ended', function(){\n    }\n    render() {\n\n        return (\n            <div>\n\n                <audio\n                    className=\"mainaudioch\"\n                    id=\"mainaudioch\"\n                    ref={this.refAudio}\n                    src={`${data.getRootPath()}resource/courses/${data.cid}/topics/${this.state.id}/mm.mp3`}\n\n                ></audio>\n            </div>\n        );\n    }\n}\n\nexport default AudioPlayer;","import classnames from 'classnames';\nimport { padStart as _pad } from 'lodash';\nimport React from 'react';\nimport core from '../core/Core';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n\nconst WCourseItem = ({\n    viewType,\n    itemJSON,\n    courseID,\n    idx,\n}: {\n    viewType: string,\n    itemJSON: any,\n    courseID: string,\n    idx: number,\n}) => {\n    // console.log('WCourseItem',viewType,itemJSON,idx);\n    if (viewType === 'movie') {\n        console.log('WCourseItem', itemJSON.tit);\n    }\n    const isAvailableBook = fbase.isAvailableBook(courseID);\n\n\n    return (\n        <>\n            {\n                viewType === 'movie'\n                    ?\n                    <CItemMovie isAvailableBook={isAvailableBook} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItemMovie' + idx} />\n                    :\n                    <CItem courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItem' + idx} />\n            }\n            {/* <CItem itemJSON={itemJSON} idx={idx} key={idx} /> */}\n        </>\n    );\n};\nconst CItem = (\n    {\n        itemJSON,\n        courseID,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        idx: number\n    }) => {\n    return (\n        <li className=\"CourseItem\" onClick={() => {\n            core.setParameter(itemJSON.query);\n        }} key={idx}>{itemJSON.tit}</li>\n    );\n}\nconst CItemMovie = (\n    {\n        itemJSON,\n        courseID,\n        isAvailableBook,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isAvailableBook: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n    return (\n        <li className=\"CourseItem movie\" onClick={() => {\n            // alert(itemJSON.query);\n\n            if (!isTrial && isAvailableBook !== 'available') {\n                // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                if (process.env.NODE_ENV === 'development') {\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct\",\n                        courseID: courseID,\n                    });\n                }\n\n                return;\n                if (isAvailableBook === 'needLogin') {\n                    core.showToastMessage({\n                        message: \"로그인이 필요한 서비스입니다.\",\n                        mtime: 3000\n                    });\n                    EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                        from: \"buyProduct\",\n                        courseID: courseID,\n                    });\n                } else if (isAvailableBook === 'needPurchase') {\n                    // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct\",\n                        courseID: courseID,\n                    });\n                }\n                return;\n            }\n            core.setParameter(itemJSON.query);\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {isTrial && isAvailableBook !== 'available' && <div className=\"mark-trial\">\n                    체험판\n                </div>}\n                <img className={classnames([\"img\", { trial: isTrial }])} src={`/resource/courses/${courseID}/thumb/a${idxPad}.jpg`}></img>\n                <div className=\"sceneno\">\n                    <div className=\"t1\">DAY</div>\n                    <div className=\"t2\">{idxPad}</div>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n\n        </li>\n    );\n}\nexport default WCourseItem;","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport WCourseItem from './WCourseItem';\nconst WCourse = ({\n    json,\n    parentName,\n}: {\n    json: any\n    parentName: string,\n}) => {\n    let viewType = 'normal';\n    const courseID = json.courseID;\n    const topics = json.item.map((item2: any, i2: number) => {\n        if (json.itemViewType) {\n            viewType = json.itemViewType;\n        }\n        return <WCourseItem\n            viewType={viewType}\n            itemJSON={item2}\n            courseID={courseID}\n            idx={i2}\n            key={courseID + i2}\n        />\n\n    })\n    const isShowTitle = parentName === 'WCourseMain' ? false : true;\n    const [isHide, setIsHide] = useState(parentName === 'WCourseMain' ? false : true);\n    return (\n        <div className=\"Course\">\n            {\n                //\n                isShowTitle && <h3 className=\"title\" onClick={() => {\n                    setIsHide(!isHide);\n                }}>\n                    <Tags str={json.tags} key={courseID} />\n                    {\n                        isHide ? <i className=\"fas fa-plus i-icon\"></i> : <i className=\"fas fa-minus i-icon\"></i>\n                    }\n                    {json.title}\n                    <span className=\"badge\">{json.item.length}</span>\n                </h3>\n            }\n            <ul className={classnames(['slideup', { \"hide\": isHide }])}>\n                {!isHide && topics}\n            </ul>\n\n        </div>\n    );\n};\n\n\nconst Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WCourse;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React from 'react';\nimport core from '../core/Core';\nimport data from '../core/Data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n\n\nlet uniqCnt = 0;\nconst selfName = \"WMain\";\nconst WMain = () => {\n    const course1 = data.leftJSON.map((item1: any, i: number) => {\n        return <CourseItem json={item1} key={uniqCnt++} />\n        // return <Course json={item1} key={uniqCnt++} />\n    });\n    return (\n        <div className=\"WMain\">\n            <div className=\"notice\">\n                안녕하세요. 해당 서비스를 만든 개발자입니다.<br></br>\n                부득이하게 서버 운영을 위해 전체 코스는 <br></br>소정의 비용을 받고 있습니다. <br></br>\n                이용의 개선점이나 불편함은 언제든 메일로 알려주세요. <br></br>\n                <a href=\"mailto:dev@casete.in\">dev@casete.in</a>\n            </div>\n\n            <ul className=\"course-list\">\n                {course1}\n                {/* {cid && <WCourse json={courseItemListJSON[0]} parentName={selfName} />} */}\n            </ul>\n            {/* {course1} */}\n        </div>\n    );\n};\n\nconst CourseItem = ({\n    json\n}: {\n    json: any\n}) => {\n    const isOwner = fbase.userMoreInfo.buyCourses.includes(json.courseID);\n\n    return (\n        <>\n\n            <li className=\"course-item\">\n                <div className={classnames([\"cover-img\", css`\n                background-image: url(\"${data.getRootPath()}resource/courses/${json.courseID}/cover.jpg\");\n            `])}>\n                </div>\n                <div className=\"info\">\n                    <h3>{json.title}</h3>\n                    <div className=\"info-sub\">\n                        <div className=\"course-num\">{json.item.length}개 코스</div>\n                        <Tags str={json.tags} key={json.courseID} />\n                        {\n                            isOwner\n                                ?\n                                <div className=\"btns-func\">\n                                    <button onClick={() => {\n                                        core.setParameter(json.query);\n                                    }}>\n                                        학습하기\n                            </button>\n                                </div>\n                                :\n                                <div className=\"btns-func\">\n                                    <button className=\"btn btn-border\" onClick={() => {\n                                        core.setParameter(json.query);\n                                    }}>무료코스 학습하기</button>\n                                    <button className=\"btn btn-border\" onClick={() => {\n                                        // core.showBuyMessage({\n                                        //     courseID: json.courseID\n                                        // });\n                                        if (fbase.isLogin()) {\n                                            core.buyProduct({\n                                                courseID: json.courseID\n                                            })\n                                        } else {\n                                            core.showToastMessage({\n                                                message: \"로그인이 필요한 서비스입니다.\",\n                                                mtime: 3000\n                                            })\n                                            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                                                from: \"buyProduct\",\n                                                courseID: json.courseID,\n                                            });\n                                        }\n\n                                    }}>전체코스 1,300원</button>\n                                </div>\n                        }\n                    </div>\n\n\n                </div>\n            </li>\n        </>\n\n    );\n}\n\nexport const Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WMain;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect } from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport data from '../core/Data';\nimport { cidState, printCourseIDState } from '../core/store';\nimport fbase from '../fb/fbase';\nimport WCourse from './WCourse';\nimport { Tags } from './WMain';\n\nconst selfName = \"WCourseMain\";\nconst WCourseMain = () => {\n    const cid = useRecoilValue(cidState);\n    const setprintCourseID = useSetRecoilState(printCourseIDState);\n    useEffect(() => {\n\n    }, [cid])\n    const leftJSONFilter = data.leftJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    const courseItemListJSON = leftJSONFilter[0];\n    const isOwner = fbase.userMoreInfo.buyCourses.includes(courseItemListJSON.courseID);\n\n    return (\n        <div className=\"WCourseMain\">\n            <div className={css`height:20px;`}></div>\n            <div className=\"contents\">\n                <div className=\"course-item\">\n                    <div className={classnames([\"cover-img\", css`\n                        background-image: url(\"${data.getRootPath()}resource/courses/${courseItemListJSON.courseID}/cover.jpg\");\n                    `])}>\n                    </div>\n                    <div className=\"info\">\n                        <h3>{courseItemListJSON.title}</h3>\n                        <div className=\"info-sub\">\n                            <div>{courseItemListJSON.item.length}개 코스</div>\n                            <div className=\"tags\">\n                                <Tags str={courseItemListJSON.tags} key={courseItemListJSON.courseID} />\n                            </div>\n                            {\n                                isOwner\n                                    ?\n                                    <div>구매완료</div>\n                                    :\n                                    <button className=\"btn btn-border\">구매 1,300원</button>\n                            }\n                        </div>\n\n\n                    </div>\n                </div>\n                <div className=\"list-header\">\n                    <div className=\"list-info\">53개 코스</div>\n                    <div className=\"funcs\">\n                        <button className=\"btn\" onClick={() => {\n                            // alert(courseItemListJSON.courseID)\n                            setprintCourseID(courseItemListJSON.courseID);\n                        }}><i className=\"fas fa-table\"></i> 엑셀 & 프린트</button>\n                    </div>\n\n                </div>\n                {cid && <WCourse json={courseItemListJSON} parentName={selfName} />}\n            </div>\n\n        </div>\n    );\n};\n\nexport default WCourseMain;","import React, { useState } from 'react';\nimport fbase, { authService, dbService } from './fbase';\nconst FBViewLogin = () => {\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    // 조회 \n    // dbService.collection('userstatus').get().then((docs: any) => {\n    //     docs.docs.forEach((doc: any) => {\n    //         console.log(doc.data());\n    //     })\n    // });\n    console.log('fbase.userInfo', fbase.userInfo.email)\n    return (\n        <div className=\"FBViewLogin\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className=\"btn\"><i className=\"fas fa-user-circle\">\n\n                    </i> {fbase.userInfo.email.split('@')[0]}</button>\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login-info\">\n                    <div className=\"popup-login-info-in\">\n                        <div className=\"popup-header\">\n                            <div className=\"left\">&nbsp;</div>\n\n                            <h3 className=\"center\">\n                                사용자정보\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n                        {fbase.userInfo.email}\n                        <button onClick={() => {\n                            authService.signOut().then(() => {\n                                (window as any).location.href = \"/\";\n                            });\n                        }}>로그아웃</button>\n                        {/* <button onClick={() => {\n                            // 저장\n                            dbService.collection('userstatus').add({ todo: \"test\" }).then((res: any) => {\n                                console.log(res)\n                            })\n                        }}>정보변경</button> */}\n                    </div>\n\n                </div>\n            }\n\n\n        </div>\n    );\n};\n\nexport default FBViewLogin;","import React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase, { authService } from './fbase';\n// let tempLoginPopupParam: {\n//     from: string,\n//     courseID: string,\n// } | null = null;\nconst FBViewLogout = () => {\n    const [inputEmail, setInputEmail] = useState('');\n    const [inputPw, setInputPw] = useState('');\n    const [inputPw2, setInputPw2] = useState('');\n    const [newAccount, setNewAccount] = useState(false);\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.FB_START_LOGIN, (options: any) => {\n            // tempLoginPopupParam = options;\n            setisShowLoginPopup(true);\n        })\n    }, []);\n    const onChange = (event: any) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setInputEmail(value);\n        } else if (name === \"pw\") {\n            setInputPw(value);\n        } else if (name === \"pw2\") {\n            setInputPw2(value);\n        }\n    }\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        // 신규가입인경우 비번 두번입력 비교\n        if (newAccount && (inputPw !== inputPw2)) {\n            alert(fbase.convertErrorMessage({\n                code: 'auth/invalidNewPw'\n            }));\n            return;\n        }\n        try {\n            //let data;\n            if (newAccount) {\n                // create account\n                await authService.createUserWithEmailAndPassword(inputEmail, inputPw);\n            } else {\n                // log in\n                await authService.signInWithEmailAndPassword(inputEmail, inputPw);\n            }\n\n        } catch (error) {\n            //   setError(error.message);\n            console.log(error);\n            alert(fbase.convertErrorMessage(error));\n            // alert(error.message);\n        }\n    }\n\n    // if (!isShowLoginPopup) {\n    //     if (tempLoginPopupParam !== null && tempLoginPopupParam.from === 'buyProduct') {\n    //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n    //             from: \"buyProduct\",\n    //             courseID: tempLoginPopupParam.courseID,\n    //         });\n    //     }\n    //     tempLoginPopupParam = null;\n    // }\n    return (\n        <div className=\"FBViewLogout\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className=\"btn\"><i className=\"fas fa-user-circle\">로그인</i></button>\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login\">\n                    <div className=\"popup-login-in\">\n                        <div className=\"popup-header\">\n                            <div className=\"left\">&nbsp;</div>\n\n                            <h3 className=\"center\">\n                                {newAccount ? '회원가입' : '로그인'}\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n\n                        <form onSubmit={onSubmit}>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>이메일</td>\n                                        <td>\n                                            <input name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td>\n                                            <input name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                        </td>\n                                    </tr>\n                                    {\n                                        newAccount && <>\n                                            <tr>\n                                                <td>비밀번호 확인</td>\n                                                <td>\n                                                    <input name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                                </td>\n                                            </tr>\n                                        </>\n                                    }\n                                </tbody>\n                            </table>\n                            <button>{newAccount ? '가입신청' : '로그인'}</button>\n                        </form>\n                        {\n                            newAccount\n                                ?\n                                <button onClick={() => {\n                                    setNewAccount(false);\n                                }}>이미 회원인가요?(로그인 하러가기)</button>\n                                :\n                                <>\n                                    <button onClick={() => {\n                                        // setNewAccount(true);\n                                        fbase.sendPasswordResetEmail(inputEmail);\n                                    }}>비밀번호를 잊으셨나요?</button><br></br>\n                                    <button onClick={() => {\n                                        setNewAccount(true);\n                                    }}>아직 회원이 아닌가요?(회원가입 하러가기)</button>\n                                </>\n                        }\n                    </div>\n\n                </div>\n            }\n\n\n        </div>\n    );\n};\n\nexport default FBViewLogout;","\nimport React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from './fbase';\nimport FBViewLogin from './FBViewLogin';\nimport FBViewLogout from './FBViewLogout';\n\nconst FBState = () => {\n\n    const [checkedLogin, setCheckedLogin] = useState(false);\n    const [update, setUpdate] = useState(0);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, (userInfo: any) => {\n            console.log('Event.ON_AUTH_STATE_CHANGED')\n            setCheckedLogin(true);\n            setUpdate(Math.random());\n        });\n        fbase.initLogin();\n\n    }, []);\n\n    return (\n        <div className=\"FBState\">\n            {\n                checkedLogin\n                    ?\n                    fbase.userInfo ? <FBViewLogin /> : <FBViewLogout />\n                    :\n                    <div>loading...</div>\n            }\n        </div>\n    );\n};\n\nexport default FBState;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport Core from '../core/Core';\nimport { wbIsOpenNavState } from '../core/store';\nimport classnames from 'classnames';\nimport FBState from '../fb/FBState';\n\nconst WHeader = () => {\n\n    const [wbIsOpenNav, setWbIsOpenNav] = useRecoilState(wbIsOpenNavState);\n\n    return (\n        <div className=\"WHeader\">\n            <div className=\"logo\" onClick={() => {\n                Core.setParameter('');\n            }}>카셋 회화 훈련</div>\n            <div className=\"user-info\">\n                <FBState />\n            </div>\n        </div>\n    );\n};\n\nexport default WHeader;","import React from 'react';\n\nconst Equalizer = () => {\n    return (\n        <div className=\"equalizer\">\n            <span className=\"eq1\"></span>\n            <span className=\"eq2\"></span>\n            <span className=\"eq3\"></span>\n        </div>\n    );\n};\n\nexport default Equalizer;","import React from 'react';\n\nconst LoadingDom = () => {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"lds-ellipsis\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingDom;","import animateScrollTo from 'animated-scroll-to';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Equalizer from './component/Equalizer';\nimport LoadingDom from './component/LoadingDom';\nimport appBridge from './core/AppBridge';\nimport core from './core/Core';\nimport data from './core/Data';\nimport EventEmitter, { Event } from './core/EventEmitter';\n// import { lang } from 'moment';\n// import lang from \"./core/i18n\";\nimport {\n    btnRepeatModeUpdateState,\n\n\n\n\n    cidState, isCloseDetailPanelState,\n    isShowShadowingState,\n    sentenseRepeatIdxState,\n    tpidState\n} from \"./core/store\";\nimport fbase from './fb/fbase';\n\nlet getCourceItemToTopicID: any = null;\nlet currJSON: any = null;\nlet callModeChange: () => void;\nconst sentenseModeCode = ['00', 'e0', '0k', 'ek']; // 문장모드 순번\nlet sentenseModeIdx: number = 3;\nlet scriptMode = 'ek';\n\nconst selfName = 'Topic';\n\nconst PagePlaylist = ({\n    isShowPlayerControl,// 콘트롤러가 fixed라서 그다음뷰에서도 보이므로 스택의 마지막뷰가 PagePlaylist인지 체크\n}: {\n    isShowPlayerControl: boolean,\n}) => {\n\n    const [isDataAble, setIsDataAble] = useState(false);\n    // const update = useRecoilValue(updatePagePlaylistState);\n\n    useEffect(() => {\n\n        const topicID = data.currJSON.id;\n        sentenseModeIdx = 3;\n        scriptMode = 'ek';// 최초 코드\n        getCourceItemToTopicID = data.getCourceItemToTopicID(topicID);\n        currJSON = data.currJSON;\n\n        // console.log('currJSONcurrJSON', currJSON)\n\n        data.initAudio({\n            id: topicID\n        });\n\n\n        // 이게먼저호출될지 userInfo가 먼저로드될지 몰라 아래처럼 구성\n        data.setClipHistory(topicID);\n        // firebase데이터 로드해서 구성완료 후에 topic history Sync\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            console.log('docs.data()-2');\n            data.setClipHistory(topicID);\n        });\n\n        setIsDataAble(true);\n        // tag_removega\n        data.ga({\n            eventCategory: selfName, //서브화면명\n            eventAction: 'initClip-' + topicID, //이벤트명\n            eventLabel: '',\n            eventValue: '',\n        });\n\n        EventEmitter.subscribe(Event.SENTENSE_PLAYING, (idx: number) => {\n\n            // 화면 프레싱중이 아닌경우\n            if (!core.isSentensePressing) {\n                // 스크롤링 중 아닌경우\n                core.isScrolling((result: boolean) => {\n                    // SentenseItem num-${idx}\n                    const $el = (document as any).querySelector(`.SentenseItem.num-${idx}`);\n                    const y = ($el) ? $el.offsetTop : null;\n                    if (y === null) return;\n                    // if (!result) core.scrollTo(y, '.view-Topic');\n                    if (!result) {\n                        animateScrollTo(y - 200, {\n                            elementToScroll: (document as any).querySelector('html')\n                        });\n                    }\n\n                })\n            }\n\n\n        });\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, (idx: number) => {\n\n        });\n\n\n\n\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PAUSE)\n            data.cleanAudio();\n            data.setCurrPlayBtnState('stop', 'a6');\n        }\n    }, []);\n\n\n    setTimeout(() => {\n        // 즐겨찾기에서 온 경우\n        if (data.tempGotoSavedSentenseIdx !== 9999) {\n\n            const $el = (document as any).querySelector(`.SentenseItem.num-${data.tempGotoSavedSentenseIdx}`);\n            const y = ($el) ? $el.offsetTop : null;\n\n            if (y === null) return;\n\n            animateScrollTo(y - 200, {\n                elementToScroll: (document as any).querySelector('.view-Topic')\n            });\n            // 초기화\n            data.tempGotoSavedSentenseIdx = 9999;\n        }\n    }, 1000)\n\n    return (\n        <>\n            {\n                isDataAble\n                    ?\n                    <div className=\"view-vv view-Topic\">\n                        {/* <PageHeader parentSelf={selfName} /> */}\n                        <TopicCover topicID={data.currJSON.id} />\n\n                        <div className=\"container-playlist\">\n                            <PlayLists />\n                            <GotoFullScript topicID={data.currJSON.id} />\n                        </div>\n\n                        {/* <NotiMessage /> */}\n                        {isShowPlayerControl && <PlayerControl topicID={data.currJSON.id} />}\n                    </div>\n                    :\n                    <LoadingDom />\n            }\n        </>\n    );\n};\n\nexport default PagePlaylist;\n\nconst TopicCover = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    const info = data.currJSON.json.info;\n    const tpid = useRecoilValue(tpidState);\n    const cid = useRecoilValue(cidState);\n    const [isKeep, setIsKeep] = useState((() => {\n        return fbase.userMoreInfo.keepClips.includes(tpid);\n    })());\n\n    return (\n        <div className={classnames([\"TopicCover\", css`\n            background-image: url(\"${data.getRootPath()}resource/courses/${cid}/thumb/${tpid.substr(0, 4)}.jpg\");\n        `])}>\n            {data.currJSON.type !== 'clip' && <>\n                <div className=\"cover-main\">\n                    <div className=\"col-left\">\n                        <span className=\"scene\">scene</span> <br></br>{tpid.substr(1, 3)}\n                    </div>\n                    <div className=\"col-right\">\n\n                    </div>\n                </div>\n\n            </>\n            }\n\n\n        </div>\n    )\n}\n\nconst GotoFullScript = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    return (\n        <>\n            {\n                data.currJSON.type === 'clip' &&\n                <div className=\"btn-goto-fulltopic\" onClick={() => {\n                    // 데이터 생성\n                    data.makeCurrJSON('topic', data.currIdx, topicID, () => {\n                        // 페이지 이동\n                        core.replacePage('PagePlaylist');\n                    });\n                }}>\n                    <div className=\"col1\">\n\n                        <div className=\"txt2\">문장이 속한 전체 대화 보러가기 </div>\n                    </div>\n                    <div className=\"col2\">\n                        <i className=\"fas fa-chevron-right i-right\"></i>\n                    </div>\n\n\n                </div>\n            }\n        </>\n    );\n}\n\nconst PlayLists = () => {\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SENTENSE_PLAYING, (idx: number) => {\n            setActiveIdx(idx);\n        });\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, (idx: number) => {\n            setActiveIdx(-1);\n        });\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PLAYING);\n            EventEmitter.remove(Event.SENTENSE_PAUSE);\n        };\n    }, []);\n\n    const isCloseDetailPanel = useRecoilValue(isCloseDetailPanelState);\n    const [activeIdx, setActiveIdx] = useState(-1);\n    const sentense = data.currJSON.json.sentense;\n    const Component = sentense.map((item: any, i: number) => {\n        return <SentenseItem\n            idx={i}\n            isActive={activeIdx === i}\n            json={item}\n            key={`sentense${i}`}\n        />;\n    });\n    // console.log('tmplog_fbase.userMoreInfo', fbase.userMoreInfo)\n    const [forceRender, setForceRender] = useState(0);\n    callModeChange = () => {\n        setForceRender(forceRender + 1);\n    }\n    return (\n        <div className={classnames([\"PlayLists\", css`\n            padding-bottom:${isCloseDetailPanel ? 30 : 267}px;\n        `])}>\n            {Component}\n        </div>\n    )\n}\n//['_k', 'ek', 'e0', '0k', '00'];\nlet temprepeatMode: 'ALL' | '1' | '' | 'nil' = 'nil';\nconst SentenseItem = ({\n\n    isActive = false,\n    json,\n    idx,\n}: {\n\n    isActive: boolean,\n    json: any,\n    idx: number,\n}) => {\n\n    const [sentenseRepeatIdx, setSentenseRepeatIdxState] = useRecoilState(sentenseRepeatIdxState);\n    const clipID: string = currJSON.id;\n    const [isGlassMode, setIsGlassMode] = useState(false);\n    const isCheckVal = fbase.userMoreInfo.keepSentense.includes(`${clipID}_${idx}`);\n    const [isCheck, setIsCheck] = useState(fbase.userMoreInfo.keepSentense.includes(`${clipID}_${idx}`));\n    // // console.log('tmplog_idxidx', idx, isCheckVal, `${clipID}_${idx}`, isCheck, fbase.userMoreInfo.keepSentense);\n    // 상세 트레이닝 의 북마크 조작 후 리스트로 돌아올때 갱신 안되는 현상 수정\n\n    if (isCheckVal !== isCheck) {\n        setTimeout(() => {\n            setIsCheck(isCheckVal);\n        });\n    }\n    const [isOpenDesc, setIsOpenDesc] = useState(false);\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n\n    const words = json.words;\n\n    // const [isRepeat, setIsRepeat] = useState(false);\n    const checkClick = (tf: boolean) => {\n        if (!fbase.isLogin()) {\n            core.showToastMessage({\n                message: \"로그인이 필요한 서비스입니다.\",\n                mtime: 3000\n            })\n            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                from: \"buyProduct\",\n                courseID: json.courseID,\n            });\n            return;\n        }\n        setIsCheck(tf);\n\n        const makeKey = `${clipID}_${idx}`;\n\n        data.setSettingKeepClipSentense(\n            'sentense',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // 문장을 저장\n        data.setSettingKeepSentenseMoreInfo(\n            tf ? 'add' : 'remove',\n            makeKey,\n            json.en\n        );\n\n    }\n    const playOneItem = () => {\n        if (temprepeatMode !== 'nil') {\n            fbase.userMoreInfo.repeatMode = temprepeatMode;\n            temprepeatMode = 'nil';\n        }\n\n        data.setCurrPlayBtnState('stop', 'a5');\n        setSentenseRepeatIdxState(9999);\n        data.audioPlayPause(idx);\n    }\n    return (\n        <div onTouchStart={() => {\n            core.sentensePressing();\n        }} className={classnames([`SentenseItem num-${idx}`, { active: isGlassMode }, { active: isActive }])}>\n\n            <div className={classnames([\"item-sound\", { active: isActive }])}>\n                <div className=\"item-main\">\n                    <div className=\"col-left\" onClick={() => {\n                        core.sentensePressing();\n                        data.setCurrPlayBtnState('stop', 'a4');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                        setTimeout(() => {\n                            // 1개 반복\n                            playOneItem();\n                        })\n\n                    }}>\n\n                        {\n                            isGlassMode\n                                ?\n                                <>\n                                    <div className=\"title-en\"><ItemCnt idx={idx} /> {json.en}</div>\n                                    {data.isSupportLang() && <div className=\"title-ko\">{json.ko}</div>}\n                                </>\n                                :\n                                <>\n                                    {['ek', 'e0'].includes(scriptMode) && <div className=\"title-en\"><ItemCnt idx={idx} /> {json.en}</div>}\n                                    {['_k'].includes(scriptMode) && <div className=\"title-en_\"><ItemCnt idx={idx} /> {json.en_}</div>}\n                                    {['0k', '00'].includes(scriptMode) && <div className=\"title-en_0\"><ItemCnt idx={idx} /> {json.en_0}</div>}\n                                    {['00', 'e0'].includes(scriptMode) && <div className=\"title-ko_0\">{json.ko_0}</div>}\n                                    {data.isSupportLang() && ['_k', 'ek', '0k'].includes(scriptMode) && <div className=\"title-ko\">{json.ko}</div>}\n                                </>\n                        }\n\n                    </div>\n                    <div className=\"col-right\">\n                        {/* {idx} */}\n\n\n                    </div>\n                </div>\n                <div className=\"item-bottom\">\n                    <div>\n                        <div className=\"col\">\n                            <button onClick={() => {\n                                data.setCurrPlayBtnState('stop', 'a3');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                setTimeout(() => {\n                                    // 1개 반복\n                                    playOneItem();\n                                })\n                            }} className=\"btn\">\n                                <i className=\"fas fa-volume-up\">\n                                    <span className=\"i-label\">듣기</span>\n                                </i>\n                            </button>\n                            <button className=\"btn\">\n                                {!(sentenseRepeatIdx === idx) && <i onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a2');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                    setTimeout(() => {\n                                        temprepeatMode = fbase.userMoreInfo.repeatMode;\n                                        fbase.userMoreInfo.repeatMode = '1';\n                                        data.setCurrPlayBtnState('play');\n                                        // // setIsRepeat(true);\n                                        data.audioPlayPause(idx);\n                                        // repeat equalizer보이기 인덱스\n                                        setSentenseRepeatIdxState(idx);\n                                    })\n                                }} className=\"fas fa-retweet\">\n                                    <span className=\"i-label\">무한반복</span>\n                                </i>}\n                                {sentenseRepeatIdx === idx && <div className=\"stop-repeat\" onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a1');\n                                    fbase.userMoreInfo.repeatMode = temprepeatMode;\n                                    // setIsRepeat(false);\n                                    // repeat equalizer보이기 인덱스\n                                    setSentenseRepeatIdxState(9999);\n                                }} >\n                                    <Equalizer />\n                                    <span className=\"i-label\">반복종료</span>\n                                </div>}\n\n                            </button>\n                            <button className=\"btn\">\n                                {isCheck\n                                    ?\n                                    <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                                        checkClick(false);\n                                    }}><span className=\"i-label\">저장됨</span></i>\n                                    :\n                                    <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                                        checkClick(true);\n                                    }}><span className=\"i-label\">문장저장</span></i>\n                                }\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            {(data.isSupportLang() && words) && <button className=\"btn btn-word\" onClick={() => {\n                                setIsOpenDesc(!isOpenDesc);\n                            }}><i className=\"fas fa-plus\">\n                                    <span className=\"i-label\">단어({words.length})</span></i>\n                            </button>}\n\n                            <button onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.topicID = clipID;\n                                data.setCurrPlayBtnState('stop', 'a10');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // core.insertPage('PageShadowing');\n                                setIsShowShadowing(true);\n\n                            }} className=\"btn btn-sndtraining\">\n                                <span className=\"logo-snd\">SD</span><span className=\"i-label\">강화훈련</span>\n                            </button>\n                            {['_k', 'e0', '0k', '00'].includes(scriptMode) && <button className={classnames([\"btn btn-glass\", { glasson: isGlassMode }])} onClick={() => {\n\n                                setIsGlassMode(true);\n                                setTimeout(() => {\n                                    setIsGlassMode(false);\n                                }, 3000);\n                            }}><i className=\"fas fa-eye i-con\"><span className=\"i-label\">잠깐보기</span></i>\n                            </button>}\n                        </div>\n                    </div>\n                    {isOpenDesc && words && <div>\n                        <WordList json={words} />\n                    </div>}\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst WordList = ({\n    json\n}: {\n    json: any\n}) => {\n    const Itm = json.map((item: string[], i: number) => {\n        return <li className=\"item-word\">\n            <span className=\"word\">{item[0]}</span>\n            <span className=\"mean\">{item[1]}</span>\n        </li>\n    })\n    return (\n        <ul className=\"items-word\">\n            {Itm}\n        </ul>\n    );\n}\n\nconst ItemCnt = ({\n    idx,\n}: {\n    idx: number,\n}) => {\n    return (\n        <span className=\"item-cnt\">\n            {idx + 1}\n        </span>\n    )\n}\n\nconst PlayerControl = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    // alert(data.env.screenHeight);\n    const [renderCnt, setRenderCnt] = useState(0);\n    const [isClose, setIsClose] = useRecoilState(isCloseDetailPanelState);\n    const [repeat, setRepeat] = useState(1);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    const isFreeClip: boolean = data.isFreeClip(topicID);\n    const isAllPass: boolean = fbase.userMoreInfo.buyCourses.length === 0;\n\n    // console.log('tmplog_isFreeClip', isFreeClip, isAllPass, !isFreeClip && !isAllPass)\n    // console.log('repeat,interval,speed', repeat, interval, speed);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.PURCHASE_COMPLETE, () => {\n            setRenderCnt(renderCnt + 1);\n        });\n    }, []);\n    data.playerSetting = {\n        repeat: repeat,\n        interval: interval,\n        speed: speed,\n    }\n    return (\n\n        <div className={`PlayerControl`}>\n            <div onClick={() => {\n                if (isClose) {\n                    setIsClose(!isClose);\n                }\n            }} className={classnames([\"functions\", { close: isClose }])}>\n                <div className=\"center\">\n                    <div className=\"func-header\">\n                        <button className=\"btn btn-blank btn-open\" onClick={() => {\n                            setIsClose(!isClose);\n                        }}>\n                            {isClose && <>설정열기<i className=\"fas fa-chevron-up up\"></i></>}\n                            {!isClose && <>설정닫기<i className=\"fas fa-chevron-down down\"></i></>}\n                        </button>\n\n                    </div>\n\n                    <div className={`func-setting`}>\n                        <div className=\"row\">\n                            <div className=\"col1\">반복</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 1 }])}\n                                    onClick={() => {\n                                        setRepeat(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 2 }])}\n                                    onClick={() => {\n                                        setRepeat(2);\n                                    }}>x2</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 3 }])}\n                                    onClick={() => {\n                                        setRepeat(3);\n                                    }}>x3</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 4 }])}\n                                    onClick={() => {\n                                        setRepeat(4);\n                                    }}>x4</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 5 }])}\n                                    onClick={() => {\n                                        setRepeat(5);\n                                    }}>x5</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">속도</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 1 }])}\n                                    onClick={() => {\n                                        setSpeed(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.9 }])}\n                                    onClick={() => {\n                                        setSpeed(0.9);\n                                    }}>x0.9</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.8 }])}\n                                    onClick={() => {\n                                        setSpeed(0.8);\n                                    }}>x0.8</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.7 }])}\n                                    onClick={() => {\n                                        setSpeed(0.7);\n                                    }}>x0.7</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">간격</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 0 }])}\n                                    onClick={() => {\n                                        setInterval(0);\n                                    }}>0s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1 }])}\n                                    onClick={() => {\n                                        setInterval(1);\n                                    }}>1s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1.5 }])}\n                                    onClick={() => {\n                                        setInterval(1.5);\n                                    }}>1.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2 }])}\n                                    onClick={() => {\n                                        setInterval(2);\n                                    }}>2s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2.5 }])}\n                                    onClick={() => {\n                                        setInterval(2.5);\n                                    }}>2.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 9999 }])}\n                                    onClick={() => {\n                                        setInterval(9999);\n                                    }}>문장길이</button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"func-summary\">\n                        반복<span className=\"bold\">x{repeat}</span>\n                        속도<span className=\"bold\">x{speed}</span>\n                        간격<span className=\"bold\">{(() => {\n                            return interval === 9999 ? '문장길이' : interval + 's';\n                        })()}</span>\n\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"controller\">\n\n                <div className=\"col-left\">\n                    <div>\n                        <BtnRepeatMode />\n                        <BtnScriptMode />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n// let repeatMode = 'ALL';\nconst BtnRepeatMode = () => {\n\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CHANGE_BTN_PLAY_STATE, (sta: string) => {\n            // alert(sta);\n            if (sta === 'stop') {\n                setIsDisable(true);\n            } else {\n                setIsDisable(false);\n            }\n        });\n        EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n\n            // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n            setUpdate(update + 1);\n        })\n    }, []);\n\n    let dataRepeatMode = fbase.userMoreInfo.repeatMode;\n    const [update, setUpdate] = useRecoilState(btnRepeatModeUpdateState);\n    const [mode, setMode] = useState(dataRepeatMode);\n    const [isDisable, setIsDisable] = useState(true);\n    // 1개 반복은 개별의 반복으로 처리해서 메인컨트롤러 플레이는 아님\n    const isPlay = (data.currPlayBtnState === 'play' && fbase.userMoreInfo.repeatMode !== '1');\n\n\n    appBridge.consolelog('tmplog_currPlayBtnState2' + ', ' + isPlay + ', ' + update + ', ' + data.currPlayBtnState + ', ' + fbase.userMoreInfo.repeatMode)\n    const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n\n    return (\n        <>\n            <div className=\"BtnRepeatMode2\">\n                <button onClick={() => {\n                    // 개별아이템 반복중일경우 tempRepeatMode처리\n                    if (temprepeatMode !== 'nil') {\n                        fbase.userMoreInfo.repeatMode = temprepeatMode;\n                        temprepeatMode = 'nil';\n                    }\n                    fbase.userMoreInfo.repeatMode = 'ALL';\n                    // 개별아이템 반복모드 켜진경우 중지 처리\n                    setSentenseRepeatIdxState(9999);\n                    if (isPlay) {\n                        data.setCurrPlayBtnState('stop', 'BtnRepeatMode2');\n                        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                        EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"멈춤\");\n                    } else {\n                        data.setCurrPlayBtnState('play');\n                        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"play\");\n                        EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"실행\");\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-sound\", { active: isPlay }])}>\n                    {isPlay && <><Equalizer /><span className=\"i-label active\">듣기중단</span></>}\n                    {!isPlay && <i className=\"fas fa-volume-up\"><span className=\"i-label\">전체듣기</span></i>}\n                </button>\n                <button onClick={() => {\n                    if (dataRepeatMode === 'ALL') {\n                        fbase.userMoreInfo.repeatMode = '';\n                    } else {\n                        fbase.userMoreInfo.repeatMode = 'ALL'\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-repeat\", { active: dataRepeatMode === 'ALL' }])}>\n                    <i className=\"fas fa-redo-alt\"></i>\n                </button>\n            </div>\n\n        </>\n    )\n}\n\nconst scriptModeStr: any = {\n    // '_k': '_/한',\n    '00': '.../...',\n    'e0': '영/...',\n    '0k': '.../한',\n    'ek': '영/한',\n}\nconst BtnScriptMode = () => {\n    const [mode, setMode] = useState(scriptMode);\n\n    return (\n        <>\n            <div className=\"BtnScriptMode2\">\n                <button onClick={() => {\n                    scriptMode = 'ek';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'ek' }])}>영+한</button>\n                {data.isSupportLang() && <button onClick={() => {\n                    scriptMode = 'e0';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'e0' }])}>영어만</button>}\n                <button onClick={() => {\n                    scriptMode = '0k';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '0k' }])}>한글만 </button>\n            </div>\n\n        </>\n\n    )\n}\n\n","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport Equalizer from './component/Equalizer';\nimport MDictation from './component/MDictation';\nimport appBridge from './core/AppBridge';\nimport data from './core/Data';\nimport lang from \"./core/i18n\";\nimport { isShowShadowingState } from './core/store';\n\nconst selfName = 'PageShadowing';\nlet temprepeatMode: any;\nconst PageShadowing = () => {\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    useEffect(() => {\n        temprepeatMode = appBridge.settingInfo.repeatMode;\n        appBridge.settingInfo.repeatMode = '1';\n        data.setCurrPlayBtnState('play');\n        data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n\n        // 아이폰에서 푸터가 안나타나서 강제로 스크롤한번\n        (window as any).scrollTo(0, 10);\n        setTimeout(() => {\n            (window as any).scrollTo(0, 0);\n        }, 1000)\n\n        return () => {\n            data.setCurrPlayBtnState('stop');\n        }\n    }, []);\n    return (\n        <div className=\"view-vv view-PageShadowing\">\n            {/* <PageHeader parentSelf={selfName} /> */}\n            {/* <h2>Shadowing & Dictation</h2> */}\n            <button onClick={() => {\n                setIsShowShadowing(false);\n            }} className=\"btn btn-close\">\n                <i className=\"fas fa-times\"></i>\n            </button>\n            <MDictation\n                sentenseEn={data.pageShadowingParam.sentenseEn}\n                sentenseKo={data.pageShadowingParam.sentenseKo}\n            />\n            <ControlBtns />\n        </div>\n    );\n};\n\nconst ControlBtns = () => {\n    const [isPlay, setIsPlay] = useState(true);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    data.playerSetting.interval = interval;\n    data.playerSetting.speed = speed;\n    const [isCheck, setIsCheck] = useState((() => {\n        return appBridge.settingInfo.keepSentense.includes(`${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`);\n    })());\n\n    const checkClick = (tf: boolean) => {\n        setIsCheck(tf);\n\n        const makeKey = `${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`;\n\n        data.setSettingKeepClipSentense(\n            'sentense',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // 문장을 저장\n        data.setSettingKeepSentenseMoreInfo(\n            tf ? 'add' : 'remove',\n            makeKey,\n            data.pageShadowingParam.sentenseEn\n        );\n\n    }\n    return (\n        <div className={`func-setting ${lang.language}`}>\n            <div className=\"row\">\n                <div className=\"col1\">{lang.t('speed')}</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 1 }])}\n                        onClick={() => {\n                            setSpeed(1);\n                        }}>x1</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.9 }])}\n                        onClick={() => {\n                            setSpeed(0.9);\n                        }}>x0.9</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.8 }])}\n                        onClick={() => {\n                            setSpeed(0.8);\n                        }}>x0.8</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.7 }])}\n                        onClick={() => {\n                            setSpeed(0.7);\n                        }}>x0.7</button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col1\">{lang.t('interval')}</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 0 }])}\n                        onClick={() => {\n                            setInterval(0);\n                        }}>0s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1 }])}\n                        onClick={() => {\n                            setInterval(1);\n                        }}>1s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1.5 }])}\n                        onClick={() => {\n                            setInterval(1.5);\n                        }}>1.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2 }])}\n                        onClick={() => {\n                            setInterval(2);\n                        }}>2s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2.5 }])}\n                        onClick={() => {\n                            setInterval(2.5);\n                        }}>2.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 9999 }])}\n                        onClick={() => {\n                            setInterval(9999);\n                        }}>{lang.t('sentenselength')}</button>\n                </div>\n            </div>\n\n\n            <div className=\"footer\">\n                {\n                    isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        data.setCurrPlayBtnState('stop', 'a1');\n                        appBridge.settingInfo.repeatMode = temprepeatMode;\n                        setIsPlay(false);\n                    }}><Equalizer /><span className=\"txt\">Stop</span></button>\n                }\n                {\n                    !isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        temprepeatMode = appBridge.settingInfo.repeatMode;\n                        appBridge.settingInfo.repeatMode = '1';\n                        data.setCurrPlayBtnState('play');\n                        data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n                        setIsPlay(true);\n\n\n                    }}><i className=\"fas fa-retweet\"></i><span className=\"txt\">Play</span></button>\n                }\n\n                <button className=\"btn btn-bookmark\">\n                    {isCheck\n                        ?\n                        <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                            checkClick(false);\n                        }}><span className=\"i-label\">{lang.t('saved-sentense')}</span></i>\n                        :\n                        <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                            checkClick(true);\n                        }}><span className=\"i-label\">{lang.t('save-sentense')}</span></i>\n                    }\n                </button>\n            </div >\n\n        </div >\n    );\n}\n\nexport default PageShadowing;","import React, { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport data from '../core/Data';\nimport { cidState, tpidState } from '../core/store';\nimport PagePlaylist from '../PagePlaylist';\nimport WCourse from './WCourse';\n// let json:any = '';\nconst selfName = \"WPlayer\";\nconst WPlayer = () => {\n    const tpid = useRecoilValue(tpidState);\n    const cid = useRecoilValue(cidState);\n    const [isReadyJSON, setIsReadyJSON] = useState(false);\n    useEffect(() => {\n        // setTimeout(()=>{\n        // console.log('makeCurrJSONWH tpidcid:',tpid,cid)\n        data.makeCurrJSONWH(tpid, cid, (json: any) => {\n            // json = json;\n            data.currJSON = {\n                id: tpid,\n                json: json,\n            }\n            data.currPlaysTotal = data.currJSON.json.sentense.length;\n            setIsReadyJSON(true);\n        });\n        // },1000)\n        // console.log('tmplog_tpidciddd',tpid,cid)\n    }, [tpid, cid])\n    // debugger;\n    console.log('data.leftJSON', data.leftJSON);\n    const courseItemListJSON = data.leftJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    return (\n        <div className=\"WPlayer\">\n\n            {\n                isReadyJSON\n                    ?\n                    <div className=\"contents\">\n                        <WCourse json={courseItemListJSON[0]} parentName={selfName} />\n                        <PagePlaylist isShowPlayerControl={true} />\n                    </div>\n                    :\n                    <div>Loading....</div>\n            }\n        </div>\n    );\n};\n\nexport default WPlayer;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\nimport data from '../core/Data';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\nlet sentense = \"\";\nlet sentenseSplit: string[] = [];\nlet correctArr: string[] = [];// 답안지\nlet shuffleWords: TWord[] = [];\n\nconst MDictation = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    if (sentense !== sentenseEn) {\n        sentense = sentenseEn;\n        sentenseSplit = sentense.split(' ');\n        correctArr = sentenseSplit.slice(0);// 답안지\n        shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n            return {\n                word: item,\n                oriIdx: i,\n            }\n        }));\n    }\n\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const words = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('Wrong~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('Complete!!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    return (\n        <div className=\"MDictation\">\n            <h2>섀도잉 & 딕테이션</h2>\n            {/* <div>\n                {sentense}\n            </div> */}\n\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            <div className=\"sentenseKo\">\n                {data.isSupportLang() && sentenseKo}\n            </div>\n            <div className=\"words\">\n                {!isComplete && words}\n            </div>\n            <div className=\"ditaction-func\">\n                <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>Hint</button>\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>Reset</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"message-box\">\n                    <div>\n                        <div>{message}</div>\n                        {message.substr(0, 8) === 'Complete' && <div className=\"lets-shadowing\">Let's shadowing!!</div>}\n                    </div>\n\n                </div>\n\n            </div>}\n\n        </div>\n    );\n};\n\nexport default MDictation","import React from 'react';\nimport PageShadowing from '../PageShadowing';\n\nconst WShadowing = () => {\n    return (\n        <div className=\"WShadowing\">\n            <div className=\"panel-training\">\n                <PageShadowing />\n            </div>\n        </div>\n    );\n};\n\nexport default WShadowing;","import React from 'react';\nimport core from '../core/Core';\nconst AlertBasic = () => {\n    return (\n        <div>\n            AlertBasic\n            <button onClick={()=>{\n                core.hideAlert();\n            }}>close</button>\n        </div>\n    );\n};\n\nexport default AlertBasic;","import React from 'react';\nimport core from '../core/Core';\nimport data from '../core/Data';\nimport lang from '../core/i18n';\nconst AlertNoticeInapp = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n    let price = '';\n    let inappInfoArr = data.backInappInfo;\n    let locale;\n    let printPrice = '';\n    if (inappInfoArr && inappInfoArr.length > 0) {\n        const arr = inappInfoArr[0].split('#')\n        price = arr[2];\n        locale = arr[3];\n        locale = locale.replace(/ \\(fixed\\)/, '');\n        locale = locale.substring(locale.length - 3);\n\n        if (locale === \"KRW\") {\n            printPrice = `(${data.numberWithCommas(parseInt(price)) + \"원\"})`;\n        } else {\n            printPrice = `(${locale + price})`;\n        }\n    }\n\n\n\n\n    return (\n        <div className=\"AlertNoticeInapp\">\n            <div className=\"message\">\n                {data.todayFreeCntDefault}{lang.t('inapp-alert1')}<br></br>\n                {lang.t('inapp-alert2')}<br></br>\n                {lang.t('inapp-alert3')}<br></br>\n                Only {printPrice}\n            </div>\n\n            <button className=\"btn-confirm\" onClick={() => {\n                core.hideAlert();\n                core.insertPage(\"PageMenu\");\n            }}>{lang.t('inapp-alert-btnok')}</button>\n            <button className=\"btn-close\" onClick={() => {\n                core.hideAlert();\n            }}>{lang.t('inapp-alert-btnno')}</button>\n        </div>\n    );\n};\n\nexport default AlertNoticeInapp;","import classnames from \"classnames\";\nimport QRCode from \"qrcode.react\";\nimport React, { useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n\n    MobileView\n} from \"react-device-detect\";\nimport core from '../core/Core';\nimport data from '../core/Data';\n\nconst AlertBuyProduct = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n    // const [isQRInit, setIsQRInit] = useState(false);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    let price = '';\n    let inappInfoArr = data.backInappInfo;\n    let locale;\n    let printPrice = '';\n    if (inappInfoArr && inappInfoArr.length > 0) {\n        const arr = inappInfoArr[0].split('#')\n        price = arr[2];\n        locale = arr[3];\n        locale = locale.replace(/ \\(fixed\\)/, '');\n        locale = locale.substring(locale.length - 3);\n\n        if (locale === \"KRW\") {\n            printPrice = `(${data.numberWithCommas(parseInt(price)) + \"원\"})`;\n        } else {\n            printPrice = `(${locale + price})`;\n        }\n    }\n\n\n\n\n    const courseInfoJSON = data.leftJSON.filter((item: any, i: number) => {\n        console.log('data.leftJSON', item.courseID, openParam.courseID)\n        return item.courseID === openParam.courseID;\n    })[0];\n    console.log('data.leftJSON', data.leftJSON, courseInfoJSON)\n    const qrurl = `https://qr.kakaopay.com/281006012180682200001379${courseInfoJSON.pricesCode[0]}`;\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 30 * 1000);\n    }\n\n    return (\n        <div className=\"AlertBuyProduct\">\n            <div className=\"header\">\n                <div className=\"title\">\n                    카카오페이 송금결제\n                </div>\n                <button className=\"btn btn-close\" onClick={() => {\n                    core.hideAlert();\n                }}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <div className=\"message\">\n                {courseInfoJSON.title}( {courseInfoJSON.prices[0]}원 )\n            </div>\n\n            <div className=\"step step1\">\n\n                <div className=\"step1-in\">\n                    <BrowserView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,<br></br>\n                                <small className=\"small\">카카오톡 송금 창 메세지 입력란에 <br></br>\n                            가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.</small>\n                            </li>\n                            <li className=\"qr-container\">\n                                {\n                                    stepCD > 0\n                                        ?\n                                        <QRCode value={qrurl} />\n                                        :\n                                        <div className=\"btn-create-qr\" onClick={() => {\n                                            setStepCD(1);\n\n                                        }}>\n                                            <div className=\"cover\">\n                                                <i className=\"fas fa-redo-alt\"></i>\n                                                <div className=\"desc\">송금코드생성</div>\n                                            </div>\n                                            <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                        </div>\n                                }\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </BrowserView>\n                    <MobileView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                            <li className=\"qr-container\">\n                                <a onClick={() => {\n                                    setTimeout(() => {\n                                        setStepCD(2);\n                                    }, 30 * 1000);\n                                }} className=\"btn-confirm\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </MobileView>\n                    {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n                </div>\n            </div>\n            <div className=\"step step2\">\n                {/* <div className=\"title\">STEP02-확인요청</div>\n                <div className=\"step2-in\">\n                    <button className={classnames([\"btn-confirm\",`stepCD-${stepCD}`])} onClick={() => {\n                        if(stepCD < 2){\n                            alert('송금코드 생성 > 카카오페이결제 > 결제 완료 후 승인요청을 해주세요.');\n                            return;\n                        }\n\n                    }}>승인요청</button>\n                </div> */}\n                <div className=\"notice\">\n                    문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n                <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                    if (stepCD < 2) {\n                        alert('결제 완료 후 승인요청을 해주세요.');\n                        return;\n                    }\n                    alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n\n                }}>승인요청</button>\n            </div>\n\n\n\n            {/* <button className=\"btn-confirm\" onClick={() => {\n                core.hideAlert();\n                core.insertPage(\"PageMenu\");\n            }}>구매 진행</button> */}\n\n        </div>\n    );\n};\n\nexport default AlertBuyProduct;","import React, { useEffect, useState } from 'react';\nimport AlertBasic from './component/AlertBasic';\nimport EventEmitter, { Event } from './core/EventEmitter';\nimport AlertNoticeInapp from './component/AlertNoticeInapp';\nimport AlertBuyProduct from './component/AlertBuyProduct';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { sentenseRepeatIdxState } from './core/store';\nimport data from './core/Data';\n\nlet openParam: any = null;\nconst Alert = () => {\n    const [moduleName, setModuleName] = useState('');\n    // const [updatePagePlaylist, setUpdatePagePlaylist] = useRecoilState(updatePagePlaylistState);\n    const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_ALERT, (options: any) => {\n            openParam = options;\n            setModuleName(options.moduleName);\n            if (options.moduleName === 'AlertNoticeInapp') {\n                // setUpdatePagePlaylist(updatePagePlaylist + 1);\n                setSentenseRepeatIdxState(9999);\n                data.setCurrPlayBtnState('stop');\n            }\n\n        });\n        EventEmitter.subscribe(Event.HIDE_ALERT, (options: any) => {\n            setModuleName('');\n\n        });\n    }, [])\n\n    const AlertModule = (() => {\n\n        switch (moduleName) {\n            case 'AlertBasic':\n                return <AlertBasic key=\"AlertBasic\" />;\n                break;\n            case 'AlertNoticeInapp':\n                return <AlertNoticeInapp key=\"AlertNoticeInapp\" openParam={openParam} />;\n                break;\n            case 'AlertBuyProduct':\n                return <AlertBuyProduct key=\"AlertBuyProduct\" openParam={openParam} />;\n                break;\n\n        }\n    })();\n    return (\n        <>\n            {\n                moduleName !== '' && <div className=\"view-Alert\">\n                    {AlertModule}\n                </div>\n            }\n        </>\n    );\n};\n\nexport default Alert;\n\n\n","import React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\n\nlet interval: any = null;\nconst ToastAlert = () => {\n    const [info, setInfo] = useState({\n        message: '',\n        mtime: 0,\n    });\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_TOAST_MESSAGE, (option: {\n            message: string,\n            mtime: number\n        }) => {\n            setInfo(option);\n            if (option.mtime === 0) {\n                option.mtime = 3000;\n            }\n            if (interval) {\n                clearInterval(interval);\n            }\n            interval = setInterval(() => {\n                clearInterval(interval);\n                setInfo({\n                    message: '',\n                    mtime: 0,\n                })\n            }, option.mtime)\n        });\n    }, [])\n    return (\n        <div className={classnames(\"ToastAlert\", css`\n            bottom:${info.message === '' ? '-100px' : '20px'}\n        `)}>\n            {info.message}\n        </div>\n    );\n};\n\nexport default ToastAlert;","import React from 'react';\nimport { useRecoilState } from 'recoil';\n// import { TableExport } from 'tableexport';\nimport { printCourseIDState } from '../core/store';\nconst printJSON = require('../../resource/topics/leftPrint.json');\nconst PrintTable = () => {\n\n    const [printCourseID, setprintCourseID] = useRecoilState(printCourseIDState);\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n        // console.log('printJSONitem.courseID === printCourseID', item, item.info.courseID,'__', printCourseID)\n        if (item.info.courseID === printCourseID) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    // const tr = selectCourseJSON.list.map((item:any, i:number)=>{\n    //     return <div>{item.ko}, {item.en} </div>\n    // })\n    // console.log('printJSONitem1',selectCourseJSON)\n    return (\n        <>\n            {\n                selectCourseJSON &&\n                <div className=\"PrintTable\">\n                    <div>\n                        <div className=\"header\">\n                            <div className=\"row-right\">\n                                <button className=\"btn btn-border\" onClick={() => {\n                                    setprintCourseID('');\n                                }}><i className=\"fas fa-arrow-left\"></i> 돌아가기</button>\n                                <button className=\"btn btn-border\" onClick={() => {\n                                    // console.log((document as any).getElementById(\"script-print-table\"))\n                                    // new TableExport((document as any).getElementById(\"script-print-table\"),{\n\n                                    //     filename:'카셋회화훈련-인턴',\n                                    //     formats:['xlsx'],\n                                    // });\n                                    (window as any).printScript('카셋회화훈련-인턴');\n                                }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                            </div>\n\n                        </div>\n                        <table id=\"script-print-table\">\n                            <thead>\n                                <tr >\n                                    <td >일자</td>\n                                    <td >No.</td>\n                                    <td >한글</td>\n                                    <td >영어</td>\n                                    <td >확인</td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {tr}\n                                {/* <tr >\n                                <td rowSpan={3}>&nbsp;&nbsp;&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr> */}\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            }\n        </>\n\n    );\n};\n\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className=\"tr-day\" >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n        // return <li>\n        //     <div>{item.ko}</div>\n        //     <div>{item.en}</div>\n        // </li>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n    // return (<ul>\n    //     Day{idx}\n    //     {SentenseList}\n    // </ul>);\n}\n\nexport default PrintTable;","import React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport AudioPlayer from '../component/AudioPlayer';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { cidState, isShowShadowingState, tpidState, wbIsOpenNavState } from '../core/store';\nimport WCourseMain from './WCourseMain';\nimport WHeader from './WHeader';\nimport WMain from './WMain';\nimport WPlayer from './WPlayer';\nimport WShadowing from './WShadowing';\nimport fbase from '../fb/fbase';\nimport data from '../core/Data';\nimport Alert from '../Alert';\nimport Loading from '../component/Loading';\nimport ToastAlert from '../component/ToastAlert';\nimport PrintTable from '../component/PrintTable';\nimport LoadingDom from '../component/LoadingDom';\nconst leftJSON = require('../../resource/topics/left.json');\n\nconst WHome = () => {\n    const wbIsOpenNav = useRecoilValue(wbIsOpenNavState);\n    const [tpid, setTpID] = useRecoilState(tpidState);\n    const [cid, setCID] = useRecoilState(cidState);\n    const isShowShadowing = useRecoilValue(isShowShadowingState);\n    const [update, setupdate] = useState(0);\n    // const [isLoading, setisLoading] = useState(false);\n    // console.log('tpidcid 1', tpid, cid);\n    useEffect(() => {\n        data.leftJSON = leftJSON;\n        EventEmitter.subscribe(Event.CHANGE_TPID, (options: {\n            tpid: string,\n            cid: string,\n        }) => {\n            setTpID(options.tpid);\n            setCID(options.cid);\n\n            // setisLoading(false);\n        });\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            console.log('fbase.userInfoLogin2', fbase.userInfo);\n            setupdate(Math.random())\n\n            // \n        });\n        // 최초 로딩 사라지는 기준\n        /**\n         * 1초후 에 체크해서 tpid 나 cid가 없으면 로딩 없앤다\n         * 1초후 체크에 tpid 나 cid가 있다는건 상단 URL이 있어서 훅이 작동한 것이므로 로딩이 없어진다 \n         */\n        // setTimeout(() => {\n        //     console.log('tpidtpid', tpid, cid)\n        //     if (tpid === '' && cid === '') {\n        //         setisLoading(false);\n        //     }\n        // }, 1000)\n    }, []);\n    setTimeout(() => {\n        console.log('tmplog2_fbase.userMoreInfo', fbase.userMoreInfo.keepSentense);\n    }, 1000)\n\n    const isGetUserInfoComplete = fbase.userInfo != 'loading'\n    console.log('fbase.userInfoLogin', fbase.userInfo, isGetUserInfoComplete);\n    return (\n        <div className=\"WHome\">\n\n            <>\n                {isShowShadowing && <WShadowing />}\n\n                {/* <WShadowing /> */}\n                <AudioPlayer />\n                <Alert />\n                {/* <Loading /> */}\n                <ToastAlert />\n                <PrintTable />\n                <header className=\"w-header\">\n                    <WHeader />\n                </header>\n                {\n                    isGetUserInfoComplete\n                        ?\n                        <main className=\"w-main\">\n                            {\n                                tpid\n                                    ?\n                                    tpid === 'CourseMain' ? <WCourseMain /> : <WPlayer />\n                                    :\n                                    <WMain />\n                            }\n\n                            {/* <Home /> */}\n                        </main>\n                        :\n                        <div>\n                            <LoadingDom />\n                        </div>\n                }\n            </>\n\n\n\n\n        </div>\n    );\n};\n\nexport default WHome;","import React, { useState, useEffect } from 'react';\nimport './scss/Main.scss';\nimport Route from './views/Route';\nimport Loading from './views/component/Loading';\nimport EventEmitter, { Event } from './views/core/EventEmitter';\nimport { isLoadingState } from './views/core/store';\nimport { useSetRecoilState } from 'recoil';\nimport Iframe from 'react-iframe';\nimport appBridge from './views/core/AppBridge';\nimport WHome from './views/wh/WHome';\n\nfunction App() {\n  const [isAppReady, setIsAppReady] = useState(false);\n  const setIsLoading = useSetRecoilState(isLoadingState);\n\n  useEffect(() => {\n    EventEmitter.subscribe(Event.IS_APP_READY, () => {\n      // alert('tmplog IS_APP_READY1')\n      setIsLoading(false);\n      setIsAppReady(true);\n    });\n  }, []);\n  // alert('tmplog IS_APP_READY2' + isAppReady)\n  return (\n    <div className=\"App\">\n      <WHome />\n      {/* <Loading />\n      {isAppReady && <Route />} */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}