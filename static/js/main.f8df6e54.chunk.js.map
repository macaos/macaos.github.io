{"version":3,"sources":["core/EventEmitter.ts","core/store.ts","components/Loading.tsx","components/PrintTable.tsx","fb/fbase.ts","env.ts","core/data.ts","components/AlertBasic.tsx","components/AlertBuyProduct.tsx","pages/Alert.tsx","components/WCourseItem.tsx","components/WCourse.tsx","pages/PageHome.tsx","pages/CourseMain.tsx","components/ZZAudioProgram.ts","components/Equalizer.tsx","components/LoadingDom.tsx","components/MDictation.tsx","components/PageShadowing.tsx","pages/CoursePlay.tsx","pages/Footer.tsx","fb/FBViewLogin.tsx","fb/FBViewLogout.tsx","fb/FBState.tsx","pages/Header.tsx","pages/Mypage.tsx","pages/Page01.tsx","pages/Page02.tsx","pages/Page03.tsx","pages/PageCSSHamburger.tsx","pages/ToastAlert.tsx","pages/PageRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Event","events","event","data","this","forEach","callback","push","ON_AUTH_STATE_CHANGED","FB_START_LOGIN","IS_APP_READY","INSERT_PAGE","REPLACE_PAGE","GOTO_BACK","RESET_PAGE","SHOW_ALERT","HIDE_ALERT","INIT_AUDIO","AUDIO_PLAY_PAUSE","AUDIO_STOP","SENTENSE_PLAYING","SENTENSE_PAUSE","CONTROL_UI_UPDATE","SET_BTN_PLAY_STATE","CHANGE_BTN_PLAY_STATE","SHOW_NOTI_MESSAGE","PURCHASE_COMPLETE","FREETIME_UPDATED","CLICK_HOTCLIP_THUMB","SHOW_LOADING","HIDE_LOADING","AUDIO_PLAY_COUNT","CHANGE_TPID","SHOW_TOAST_MESSAGE","isLoadingState","atom","key","default","isCloseDetailPanelState","scriptModeState","btnRepeatModeUpdateState","isShowShadowingState","printCourseIDState","Loading","useRecoilState","isLoading","setIsLoading","useEffect","EventEmitter","subscribe","className","printJSON","require","DaySentenses","arr","idx","SentenseList","map","item","i","rowSpan","length","data-tableexport-xlsxformatid","ko","en","PrintTable","printCourseID","setprintCourseID","selectCourseJSON","find","info","courseID","tr","list","onClick","window","printScript","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userInfo","initUserInfoMerge","userMoreInfo","email","uid","repeatMode","buyCourses","showClips","keepClips","keepSentense","doneSentense","historyClips","authService","onAuthStateChanged","user","console","log","docName","makeDocNameWithUserInfo","dbService","collection","doc","get","then","docs","extend","syncMoreInfo","dispatch","catch","err","r","cid","isLogin","includes","set","merge","split","reg","test","replace","substr","emailPw","auth","sendPasswordResetEmail","alert","error","convertErrorMessage","convertMessage","code","message","firestore","mainJSON","storage","scrollingLazyTime","scrollingTick","topicJSON","isSentensePressing","pageShadowingParam","sentenseEn","sentenseKo","sentenseIdx","topicID","numberWithCommas","x","parts","toString","join","inParam","inQuery","location","href","resultItem","courseToMainJSON","gotoPage","query","dir","overIdx","tpid","fbase","filter","type1","type2","value","newArr","JSON","parse","stringify","text","substring","bytes","CryptoJS","AES","decrypt","enc","Utf8","moduleName","options","axios","clearInterval","setInterval","firstY","scrollY","setTimeout","AlertBasic","hideAlert","AlertBuyProduct","openParam","useState","isBrowser","stepCD","setStepCD","courseInfoJSON","qrurl","pricesCode","title","prices","target","classnames","Alert","setModuleName","AlertModule","CItemMovie","itemJSON","isAvailableBook","Tits","tit","str","idxPad","_pad","String","isTrial","showToastMessage","mtime","from","trial","src","CItem","WCourseItem","viewType","Tags","Tag","WCourse","json","parentName","topics","item2","i2","itemViewType","isShowTitle","isHide","setIsHide","tags","uniqCnt","CourseItem","isOwner","css","getRootPath","parseInt","PageHome","course1","item1","audioTimeArr","CourseMainList","useSetRecoilState","courseItemListJSON","CourseMain","setRender","d","search","decryptQuery","decryptURL","Math","random","Equalizer","LoadingDom","livePlayInfo","totalIdx","param","Object","assign","sentense","timeen","playComplete","bind","st","et","repeat","repeatCnt","zzaudio","play","allplay","pause","delay","ms","Promise","resolve","currentSoundTime","intervalTime","settingInterval","interval","sentenseSplit","correctArr","shuffleWords","MDictation","trim","slice","_shuffle","word","oriIdx","submitIdx","setSubmitIdx","submitArr","setSubmitArr","hintIdx","setHintIdx","setMessage","isComplete","setIsComplete","blanks","submitWord","words","dpWord","toLowerCase","cloneArr","ControlBtns","isPlay","setIsPlay","speed","setSpeed","ZZAudioProgram","active","PageShadowing","setIsShowShadowing","scrollTo","audioSrc","CoursePlayList","GotoNextPrev","gotoNextPrev","gotoCourseMainPage","TopicCover","PlayLists","render","remove","isCloseDetailPanel","useRecoilValue","Component","renderCnt","SentenseItem","isOpenDesc","setIsOpenDesc","isGlassMode","setIsGlassMode","scriptMode","isCheck","setIsCheck","checkClick","tf","makeKey","setSettingKeepClipSentense","isActive","isInfinityPlay","playClick","onTouchStart","sentensePressing","en_","en_0","ko_0","glasson","PlayerControl","isClose","setIsClose","setRepeat","close","BtnRepeatMode","setUpdate","BtnScriptMode","setscriptMode","WordList","Itm","ItemCnt","CoursePlay","isCheckedAuth","setisCheckedAuth","isShowShadowing","setClipHistory","isScrolling","result","$el","document","querySelector","y","offsetTop","animateScrollTo","elementToScroll","isData","setisData","presetSrc","getTopicJSON","Footer","FBViewLogin","isShowLoginPopup","setisShowLoginPopup","signOut","btnLabel","FBViewLogout","inputEmail","setInputEmail","inputPw","setInputPw","inputPw2","setInputPw2","viewMode","setViewMode","onChange","name","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","placeholder","type","FBState","checkedLogin","setCheckedLogin","initLogin","Header","Mypage","Page01","Page02","Page03","PageCSSHamburger","ToastAlert","setInfo","option","PageRoute","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"u/tDAcaA,EAAb,iDA8BQC,OAAc,GA9BtB,qDA+BiBC,EAAeC,GACzBC,KAAKH,OAAOC,IACjBE,KAAKH,OAAOC,GAAOG,SAAQ,SAACC,GAAD,OAC1BA,EAASH,QAlCZ,gCAqCkBD,EAAeI,GAC1BF,KAAKH,OAAOC,KAAQE,KAAKH,OAAOC,GAAS,IAC9CE,KAAKH,OAAOC,GAAOK,KAAKD,KAvC1B,6BAyCeJ,GACTE,KAAKH,OAAOC,KAAQE,KAAKH,OAAOC,GAAS,UA1C/C,KAAaF,EAEEQ,sBAAgC,qBAFlCR,EAGES,eAAyB,eAH3BT,EAIEU,aAAuB,aAJzBV,EAKEW,YAAsB,aALxBX,EAMEY,aAAuB,cANzBZ,EAOEa,UAAoB,WAPtBb,EAQEc,WAAqB,YARvBd,EASEe,WAAqB,YATvBf,EAUEgB,WAAqB,YAVvBhB,EAWEiB,WAAqB,YAXvBjB,EAYEkB,iBAA2B,iBAZ7BlB,EAaEmB,WAAqB,YAbvBnB,EAcEoB,iBAA2B,kBAd7BpB,EAeEqB,eAAyB,gBAf3BrB,EAgBEsB,kBAA4B,kBAhB9BtB,EAiBEuB,mBAA6B,kBAjB/BvB,EAkBEwB,sBAAgC,qBAlBlCxB,EAmBEyB,kBAA4B,kBAnB9BzB,EAoBE0B,kBAA4B,mBApB9B1B,EAqBE2B,iBAA2B,kBArB7B3B,EAsBE4B,oBAA8B,oBAtBhC5B,EAuBE6B,aAAuB,cAvBzB7B,EAwBE8B,aAAuB,cAxBzB9B,EAyBE+B,iBAA2B,iBAzB7B/B,EA0BEgC,YAAsB,aA1BxBhC,EA2BEiC,mBAA6B,mBAmB7B,UAAIjC,ECnDNkC,EAAiBC,YAAK,CAC/BC,IAAK,iBACLC,SAAS,IAIAC,EAA0BH,YAAK,CACxCC,IAAK,0BACLC,SAAS,IAGAE,EAAkBJ,YAAK,CAChCC,IAAK,kBACLC,QAAS,OAQAG,GAL8CL,YAAK,CAC5DC,IAAK,yBACLC,QAAS,OAGgDF,YAAK,CAC9DC,IAAK,2BACLC,QAAS,KA4BAI,EAAuBN,YAAK,CACrCC,IAAK,uBACLC,SAAS,IAGAK,EAAqBP,YAAK,CACnCC,IAAK,qBACLC,QAAS,KCpCEM,EA3BC,WAAO,IAAD,EACgBC,YAAeV,GAD/B,mBACXW,EADW,KACAC,EADA,KAUlB,OARAC,qBAAU,WACNC,EAAaC,UAAUjD,EAAM6B,cAAc,WACvCiB,GAAa,MAEjBE,EAAaC,UAAUjD,EAAM8B,cAAc,WACvCgB,GAAa,QAElB,IAEC,mCAEQD,GAAa,qBAAKK,UAAU,oBAAf,SACT,sBAAKA,UAAU,eAAf,UACI,wBACA,wBACA,wBACA,gCCnBlBC,EAAYC,EAAQ,KA2IpBC,EAAe,SAAC,GAMf,IALHC,EAKE,EALFA,IACAC,EAIE,EAJFA,IAKMC,EAAeF,EAAIG,KAAI,SAACC,EAAWC,GACrC,OAAO,qBAAmBT,UAAU,SAA7B,UACI,IAANS,GAAW,qBAAmBC,QAASN,EAAIO,OAAhC,gBAA4CN,EAAM,IAAzC,KAAOI,GAC5B,oBAAIG,gCAA8B,IAAlC,SAAuCH,EAAI,IAC3C,oBAAIT,UAAU,eAAd,SAA8BQ,EAAKK,KACnC,oBAAIb,UAAU,eAAd,SAA8BQ,EAAKM,KACnC,oBAAId,UAAU,UAAd,oBALY,KAAOS,MAQ3B,OAAQ,mCACHH,KAIMS,EA/JI,WAAO,IAAD,EAEqBrB,YAAeF,GAFpC,mBAEdwB,EAFc,KAECC,EAFD,KAGfC,EAAmBjB,EAAUkB,MAAK,SAACX,EAAWC,GAEhD,GAAID,EAAKY,KAAKC,WAAaL,EACvB,OAAOR,KAIXc,EAAK,GAUT,OATIJ,IACAI,EAAKJ,EAAiBK,KAAKhB,KAAI,SAACC,EAAWC,GACvC,OAAO,cAAC,EAAD,CAAcL,IAAKI,EAAMH,IAAKI,GAAQA,OAQjD,qBAAKT,UAAU,aAAf,SAEQkB,GAAoB,gCAChB,qBAAKlB,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,yBAAQA,UAAU,iBAAiBwB,QAAS,WACxCP,EAAiB,KADrB,UAEG,mBAAGjB,UAAU,sBAFhB,+BAGA,yBAAQA,UAAU,iBAAiBwB,QAAS,WAOvCC,OAAeC,YAAY,sDAPhC,UAQG,mBAAG1B,UAAU,yBARhB,uDAYR,wBAAO2B,GAAG,qBAAV,UACI,gCACI,+BACI,8CACA,qCACA,8CACA,8CACA,mDAGR,gCACKL,a,2GC9C7BM,IAASC,cCVqB,CAC1BC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,ID2MJ,M,iDAtMXC,SAAgB,U,KAChBC,mBAA6B,E,KAC7BC,aAUI,CACIC,MAAO,GACPC,IAAK,GACLC,WAAY,IACZC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,aAAc,I,wDAET,IAAD,OACRC,EAAYC,oBAAmB,SAACC,GAS5B,GAPAC,QAAQC,IAAI,cAAeF,GAE3B,EAAKd,SAAWc,EAKZ,EAAKd,SAAU,CAEf,IAAMiB,EAAU,EAAKC,0BACrBH,QAAQC,IAAI,sBAAuBC,GACnCE,EAAUC,WAAW,cAAcC,IAAIJ,GAASK,MAAMC,MAAK,SAACC,GACxDT,QAAQC,IAAI,uBAEZ,IAAMrG,EAAO6G,EAAK7G,OAClBoG,QAAQC,IAAI,cAAeC,EAAStG,GAChCA,GAEAoG,QAAQC,IAAI,gBACZ,EAAKd,aAAeuB,IAAO,EAAKvB,aAAcvF,KAE9CoG,QAAQC,IAAI,gBAEZ,EAAKd,aAAe,EAAKA,aACzB,EAAKwB,gBAETX,QAAQC,IAAI,iBAEZ,EAAKd,aAAaC,MAAQ,EAAKH,SAASG,MACxC,EAAKD,aAAaE,IAAM,EAAKJ,SAASI,IACtC,EAAKH,mBAAoB,EACzBzC,EAAamE,SAASnH,EAAMQ,sBAAuB8F,MACpDc,OAAM,SAAUC,GAEfrE,EAAamE,SAASnH,EAAMQ,sBAAuB,cAiDvD+F,QAAQC,IAAI,uBACZD,QAAQC,IAAI,mBAAoB,EAAKd,cACrC1C,EAAamE,SAASnH,EAAMQ,sBAAuB8F,Q,gCAS3D,IAAIgB,GAAI,EAIR,OAHsB,OAAlBlH,KAAKoF,UAAuC,YAAlBpF,KAAKoF,WAC/B8B,GAAI,GAEDA,I,sCAEKC,GAGZ,OAAKnH,KAAKoH,WAGVjB,QAAQC,IAAI,uBAAwBpG,KAAKsF,cAEpCtF,KAAKsF,aAAaI,WAAW2B,SAASF,GAGpC,YAFI,gBALA,c,qCAUXhB,QAAQC,IAAI,oBAEPpG,KAAKoF,UAA8B,KAAlBpF,KAAKoF,UAAqC,YAAlBpF,KAAKoF,UAK9CpF,KAAKqF,mBAEVkB,EAAUC,WAAW,cAAcC,IAAIzG,KAAKsG,2BAA2BgB,IAAItH,KAAKsF,aAAc,CAAEiC,OAAO,IAAQZ,MAAK,WAChHR,QAAQC,IAAI,uC,gDAIhB,IAAI3B,EAAKzE,KAAKoF,SAASG,MAAMiC,MAAM,KAAK,GAClCC,EAAM,oDAOZ,OANIA,EAAIC,KAAKjD,KACTA,EAAKA,EAAGkD,QAAQF,EAAK,MAGzBhD,GADAA,GAAM,wBACEmD,OAAO,EAAG,KAEN5H,KAAKoF,SAASI,M,gCAEpBqC,EAGP3H,M,6CAGoBqF,GAAgB,IAAD,OACvBb,IAASoD,OACfC,uBAAuBxC,GAAOoB,MAAK,WACpCqB,MAAMzC,EAAQ,iGACfyB,OAAM,SAACiB,GACN9B,QAAQC,IAAI6B,GACZD,MAAM,EAAKE,oBAAoBD,S,0CAGnBA,GAChB,IASME,EAToB,CACtB,qBAAsB,8EACtB,oBAAqB,uGACrB,qBAAsB,iGACtB,sBAAuB,oFACvB,sBAAuB,8KACvB,4BAA6B,yEAGGF,EAAMG,MAC1C,OAAID,IAGJhC,QAAQC,IAAI6B,GACLA,EAAMI,a,MAORrC,GADmBtB,IACLA,IAASoD,QACvBvB,EAAY7B,IAAS4D,YElN5BC,GFmNwB7D,IAAS8D,UEnNtBxF,EAAQ,MAErByF,EAA4B,EAC5BC,EAAqB,KA4MV,M,iDA1MXH,SAAgBA,E,KAChBI,e,OACAC,oBAA8B,E,KACvBC,mBAKH,CACIC,WAAY,GACZC,WAAY,GACZC,aAAc,EACdC,QAAS,I,KAuHjBC,iBAAmB,SAACC,GAChB,IAAIC,EAAQD,EAAEE,WAAW7B,MAAM,KAE/B,OADA4B,EAAM,GAAKA,EAAM,GAAGzB,QAAQ,wBAAyB,KAC9CyB,EAAME,KAAK,M,0DArHlB,MAAO,M,+BAIFC,EAAiBC,GAMtBjF,OAAOkF,SAASC,KALXF,GAAuB,KAAZA,EAKhB,YAA4BD,EAA5B,cAAyCC,GAJd,M,yCAOZrC,GACf,IAAMwC,EAAa3J,KAAK4J,iBAAiBzC,GACzCnH,KAAK6J,SAAS,aAAcF,EAAWG,S,uCAG1B3C,GACb,OAAOoB,EAAStE,MAAK,SAACX,EAAWC,GAC7B,OAAOD,EAAKa,WAAagD,O,mCAIpBhE,EAAagE,EAAa4C,GACnC,IAAMJ,EAAapB,EAAStE,MAAK,SAACX,EAAWC,GACzC,OAAOD,EAAKa,WAAagD,KAE7B,GAAY,IAARhE,GAAqB,SAAR4G,EAIjB,GAAI5G,IAAQwG,EAAWrG,KAAKG,QAAkB,SAARsG,EAAtC,CAIA,IAAMC,EAAkB,SAARD,EAAiB,GAAK,EACtC/J,KAAK6J,SAAS,aAAcF,EAAWrG,KAAKH,EAAM6G,GAASF,YAJvD9B,MAAM,4DAJNA,MAAM,iG,qCAUCiC,GAENC,EAAM5E,aAAaS,eACpBmE,EAAM5E,aAAaS,aAAe,IAGtC,IAAM7C,EAAMgH,EAAM5E,aAAaS,aAAaoE,QAAO,SAAC7G,GAEhD,OAAOA,IAAS2G,KAGpB/G,EAAI/C,KAAK8J,GAETC,EAAM5E,aAAaS,aAAe7C,EAGlCgH,EAAMpD,iB,iDAGNsD,EACAC,EACAC,GACAnE,QAAQC,IAAI,6BAA8BgE,EAAOC,EAAOC,GACxD,IAAIpH,EAAgB,GAChBqH,EAAmB,GACT,SAAVH,EAEAlH,EAAMgH,EAAM5E,aAAaM,UACR,aAAVwE,EACPlH,EAAMgH,EAAM5E,aAAaO,aACR,SAAVuE,IACPlH,EAAMgH,EAAM5E,aAAaQ,cAEzB5C,EAAImE,SAASiD,GAEC,WAAVD,IAEAE,EAASrH,EAAIiH,QAAO,SAAC7G,EAAMC,GACvB,OAAOD,IAASgH,MAMV,QAAVD,IAEAnH,EAAI/C,KAAKmK,GACTC,EAASC,KAAKC,MAAMD,KAAKE,UAAUxH,KAK7B,SAAVkH,EACAF,EAAM5E,aAAaM,UAAY2E,EAEd,aAAVH,EACPF,EAAM5E,aAAaO,aAAe0E,EAEjB,SAAVH,IACPF,EAAM5E,aAAaQ,aAAeyE,GAItCL,EAAMpD,iB,iCAEC6D,GACP,IACIA,EAAOA,EAAKC,UAAU,GACtB,IAAMC,EAAQC,IAASC,IAAIC,QAAQL,EAhInC,cAiIA,OAAOH,KAAKC,MAAMI,EAAMxB,SAASyB,IAASG,IAAIC,OAChD,MAAOjE,GAEL,YADAd,QAAQ8B,MAAMhB,M,gCASZoB,GACNzF,EAAamE,SAASnH,EAAMe,WAAY,CACpCwK,WAAY,aACZ9C,QAASA,M,sCAGD8C,GACZvI,EAAamE,SAASnH,EAAMe,WAAY,CACpCwK,WAAYA,M,kCAIhBvI,EAAamE,SAASnH,EAAMgB,WAAY,M,wCAMxC,IAHAuD,EAGD,EAHCA,SAKAvB,EAAamE,SAASnH,EAAMwB,sBAAuB,QACnDwB,EAAamE,SAASnH,EAAMe,WAAY,CACpCwK,WAAY,mBACZhH,SAAUA,M,uCAIDiH,GAIbxI,EAAamE,SAASnH,EAAMiC,mBAAoBuJ,K,4EAEjCjE,EAAa8C,G,iFAEfoB,IAAM3E,IAAN,4BAA+BS,EAA/B,mBAA6C8C,EAA7C,YAA6D,I,qLAG1D,IAAD,OACfjK,KAAK4I,oBAAqB,EAC1BH,EAAoB,IAChBC,GACA4C,cAAc5C,GAElBA,EAAgB6C,aAAY,YACxB9C,GAAwC,MACf,IACrB,EAAKG,oBAAqB,EAC1BH,EAAoB,EACpB6C,cAAc5C,MAEnB,O,kCAGKxI,GACR,IAAMsL,EAASjH,OAAOkH,QACtBC,YAAW,WACHF,IAAWjH,OAAOkH,QAClBvL,GAAS,GAETA,GAAS,KAEd,S,MCnMIyL,EAXI,WACf,OACI,6CAEI,wBAAQrH,QAAS,WACbvE,EAAK6L,aADT,uB,0CCsIGC,EAjIS,SAAC,GAIlB,IAHHC,EAGE,EAHFA,UAGE,EAE0BC,mBAASC,YAAY,EAAI,GAFnD,mBAEKC,EAFL,KAEaC,EAFb,KASIC,EAAiBpM,EAAKwI,SAAS4B,QAAO,SAAC7G,EAAWC,GAEpD,OADA4C,QAAQC,IAAI,gBAAiB9C,EAAKa,SAAU2H,EAAU3H,UAC/Cb,EAAKa,WAAa2H,EAAU3H,YACpC,GAEGiI,EAAK,0DAAsDD,EAAeE,WAAW,IAQ3F,OAPIL,aAEAN,YAAW,WACPQ,EAAU,KACX,KAIH,sBAAKpJ,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,qEAGA,wBAAQA,UAAU,gBAAgBwB,QAAS,WACvCvE,EAAK6L,aADT,SAEG,mBAAG9I,UAAU,sBAGpB,sBAAKA,UAAU,UAAf,UACKqJ,EAAeG,MADpB,KAC6BH,EAAeI,OAAO,GADnD,cAIA,qBAAKzJ,UAAU,aAAf,SAEI,sBAAKA,UAAU,WAAf,UACI,cAAC,cAAD,UACI,+BACI,qBAAIA,UAAU,QAAd,UACI,qBAAKA,UAAU,YAAf,eADJ,qIAE8B,uBAC1B,wBAAOA,UAAU,QAAjB,sGAA4C,uBAA5C,4HAGJ,oBAAIA,UAAU,eAAd,SAEQmJ,EAAS,EAEL,cAAC,IAAD,CAAQ3B,MAAO8B,IAEf,sBAAKtJ,UAAU,gBAAgBwB,QAAS,WACpC4H,EAAU,IADd,UAII,sBAAKpJ,UAAU,QAAf,UACI,mBAAGA,UAAU,oBACb,qBAAKA,UAAU,OAAf,qDAEJ,qBAAKA,UAAU,QAAf,SAAuB,cAAC,IAAD,CAAQwH,MAAM,4EAIrD,qBAAIxH,UAAU,QAAd,UAAsB,qBAAKA,UAAU,YAAf,eAAtB,2GAIR,cAAC,aAAD,UACI,+BACI,qBAAIA,UAAU,QAAd,UACI,qBAAKA,UAAU,YAAf,eADJ,kNAIA,oBAAIA,UAAU,eAAd,SACI,oBAAGwB,QAAS,WACRoH,YAAW,WACPQ,EAAU,KACX,MACJpJ,UAAU,cAAc4G,KAAM0C,EAAOI,OAAO,SAJ/C,oEAIkE,mBAAG1J,UAAU,4BAEnF,qBAAIA,UAAU,QAAd,UAAsB,qBAAKA,UAAU,YAAf,eAAtB,gHAOhB,sBAAKA,UAAU,aAAf,UAWI,sBAAKA,UAAU,SAAf,yDACa,mBAAG4G,KAAK,uBAAR,gCADb,WACsD,mBAAGA,KAAK,mCAAmC8C,OAAO,SAAlD,4CADtD,6CAGA,wBAAQ1J,UAAW2J,IAAW,CAAC,cAAD,iBAA0BR,KAAY3H,QAAS,WACrE2H,EAAS,EACTjE,MAAM,6FAGVA,MAAM,0OALV,6CC9GZ8D,EAAiB,KA8CNY,EA7CD,WAAO,IAAD,EACoBX,mBAAS,IAD7B,mBACTZ,EADS,KACGwB,EADH,KAIhBhK,qBAAU,WACNC,EAAaC,UAAUjD,EAAMe,YAAY,SAACyK,GACtCU,EAAYV,EACZuB,EAAcvB,EAAQD,YAClBC,EAAQD,cAOhBvI,EAAaC,UAAUjD,EAAMgB,YAAY,SAACwK,GACtCuB,EAAc,SAGnB,IAEH,IAAMC,EAAe,WAEjB,OAAQzB,GACJ,IAAK,aACD,OAAO,cAAC,EAAD,GAAgB,cAG3B,IAAK,kBACD,OAAO,cAAC,EAAD,CAAuCW,UAAWA,GAA7B,oBARnB,GAarB,OACI,mCAEuB,KAAfX,GAAqB,qBAAKrI,UAAU,aAAf,SAChB8J,O,wBCPfC,GAAa,SAAC,GAWT,IATHC,EASE,EATFA,SACA3I,EAQE,EARFA,SACA4I,EAOE,EAPFA,gBACA5J,EAME,EANFA,IAOE6J,EAAOF,EAASG,IAAI5J,KAAI,SAAC6J,EAAa3J,GACxC,OAAO,sBAAaT,UAAU,WAAvB,UAAmCS,EAAI,EAAvC,KAA4C2J,IAAlC3J,MAEf4J,EAASC,mBAAKC,OAAOlK,EAAM,GAAI,EAAG,KAClCmK,EAA+B,SAArBR,EAASQ,QAEzB,OACI,qBAAIxK,UAAU,mBAAmBwB,QAAS,WAGjCgJ,GAA+B,cAApBP,EA8BhBhN,EAAK8J,SAAS,aAAciD,EAAShD,OAnBT,cAApBiD,GACAhN,EAAKwN,iBAAiB,CAClBlF,QAAS,oFACTmF,MAAO,MAEX5K,EAAamE,SAASnH,EAAMS,eAAgB,CACxCoN,KAAM,aACNtJ,SAAUA,KAEa,iBAApB4I,GAEPnK,EAAamE,SAASnH,EAAMe,WAAY,CACpCwK,WAAY,kBACZhH,SAAUA,KA3B1B,UAoCI,sBAAKrB,UAAW2J,IAAW,CAAC,YAAa,CAAEiB,MAAOJ,KAAlD,UACKP,EACAO,GAA+B,cAApBP,GAAmC,qBAAKjK,UAAU,aAAf,sCAG/C,qBAAKA,UAAW2J,IAAW,CAAC,MAAO,CAAEiB,MAAOJ,KAAaK,IAAG,4BAAuBxJ,EAAvB,mBAA0CgJ,EAA1C,UAC5D,sBAAKrK,UAAU,UAAf,UACI,qBAAKA,UAAU,KAAf,iBACA,qBAAKA,UAAU,KAAf,SAAqBqK,UAI7B,qBAAKrK,UAAU,YAAf,SAA4BkK,MAdxB7J,IAmBVyK,GAAQ,SAAC,GAWJ,IATHd,EASE,EATFA,SACA3I,EAQE,EARFA,SACA4I,EAOE,EAPFA,gBACA5J,EAME,EANFA,IAOE6J,EAAOF,EAASG,IAAI5J,KAAI,SAAC6J,EAAa3J,GACxC,OAAO,sBAAaT,UAAU,WAAvB,UAAmCS,EAAI,EAAvC,KAA4C2J,IAAlC3J,MAEf4J,EAASC,mBAAKC,OAAOlK,EAAM,GAAI,EAAG,KAClCmK,EAA+B,SAArBR,EAASQ,QAEzB,OACI,qBAAIxK,UAAU,oBAAoBwB,QAAS,WAGlCgJ,GAA+B,cAApBP,EA8BhBhN,EAAK8J,SAAS,aAAciD,EAAShD,OAnBT,cAApBiD,GACAhN,EAAKwN,iBAAiB,CAClBlF,QAAS,oFACTmF,MAAO,MAEX5K,EAAamE,SAASnH,EAAMS,eAAgB,CACxCoN,KAAM,aACNtJ,SAAUA,KAEa,iBAApB4I,GAEPnK,EAAamE,SAASnH,EAAMe,WAAY,CACpCwK,WAAY,kBACZhH,SAAUA,KA3B1B,UAoCI,sBAAKrB,UAAW2J,IAAW,CAAC,YAAa,CAAEiB,MAAOJ,KAAlD,UACKA,GAA+B,cAApBP,GAAmC,qBAAKjK,UAAU,aAAf,sCAI/C,sBAAKA,UAAU,UAAf,UACI,sBAAMA,UAAU,KAAhB,iBACA,sBAAMA,UAAU,KAAhB,SAAsBqK,UAI9B,qBAAKrK,UAAU,YAAf,SAA4BkK,MAbxB7J,IAkBD0K,GA/KK,SAAC,GAUd,IATHC,EASE,EATFA,SACAhB,EAQE,EARFA,SACA3I,EAOE,EAPFA,SACAhB,EAME,EANFA,IAQiB,UAAb2K,GACA3H,QAAQC,IAAI,cAAe0G,EAASG,KAExC,IAAMF,EAAkB7C,EAAM6C,gBAAgB5I,GAG9C,OACI,mCAEqB,UAAb2J,EAEI,cAAC,GAAD,CAAYf,gBAAiBA,EAAiB5I,SAAUA,EAAU2I,SAAUA,EAAU3J,IAAKA,GAAU,aAAeA,GAEpH,cAAC,GAAD,CAAO4J,gBAAiBA,EAAiB5I,SAAUA,EAAU2I,SAAUA,EAAU3J,IAAKA,GAAU,QAAUA,MCiBxH4K,GAAO,SAAC,GAIP,IAHHb,EAGE,EAHFA,IAKIc,EADQd,EAAI1F,MAAM,KACRnE,KAAI,SAACC,EAAcC,GAC7B,OAAO,uBAAMT,UAAU,MAAhB,cAAgCQ,IAALC,MAKtC,MAHY,KAAR2J,IACAc,EAAM,IAGN,qBAAKlL,UAAU,OAAf,SACKkL,KAKEC,GAnEC,SAAC,GAMV,IALHC,EAKE,EALFA,KACAC,EAIE,EAJFA,WAKIL,EAAW,SACT3J,EAAW+J,EAAK/J,SAChBiK,EAASF,EAAK5K,KAAKD,KAAI,SAACgL,EAAYC,GAItC,OAHIJ,EAAKK,eACLT,EAAWI,EAAKK,cAEb,cAAC,GAAD,CACHT,SAAUA,EACVhB,SAAUuB,EACVlK,SAAUA,EACVhB,IAAKmL,GACAnK,EAAWmK,MAIlBE,EAA6B,eAAfL,EAhBlB,EAiB0BpC,mBAAwB,eAAfoC,GAjBnC,mBAiBKM,EAjBL,KAiBaC,EAjBb,KAkBF,OACI,sBAAK5L,UAAU,SAAf,UAGQ0L,GAAe,qBAAI1L,UAAU,QAAQwB,QAAS,WAC1CoK,GAAWD,IADA,UAGX,cAAC,GAAD,CAAMvB,IAAKgB,EAAKS,MAAWxK,GAEvBsK,EAAS,mBAAG3L,UAAU,uBAA4B,mBAAGA,UAAU,wBAElEoL,EAAK5B,MACN,sBAAMxJ,UAAU,QAAhB,SAAyBoL,EAAK5K,KAAKG,YAG3C,oBAAIX,UAAW2J,IAAW,CAAC,UAAW,CAAE,KAAQgC,KAAhD,UACMA,GAAUL,Q,kKCrC5B,IAAIQ,GAAU,EAsBRC,GAAa,SAAC,GAIb,IAHHX,EAGE,EAHFA,KAIMY,EAAU5E,EAAM5E,aAAaI,WAAW2B,SAAS6G,EAAK/J,UAG5D,OACI,mCAEI,qBAAIrB,UAAU,cAAcwB,QAAS,WACjCvE,EAAK8J,SAAS,aAAcqE,EAAKpE,QADrC,UAGI,qBAAKhH,UAAW2J,IAAW,CAAC,YAAasC,YAAd,KACFhP,EAAKiP,cAAiCd,EAAK/J,cAGpE,sBAAKrB,UAAU,OAAf,UACI,6BAAKoL,EAAK5B,QACV,sBAAKxJ,UAAU,WAAf,UACI,sBAAKA,UAAU,aAAf,UAA6BoL,EAAK5K,KAAKG,OAAvC,yBACA,cAAC,GAAD,CAAMyJ,IAAKgB,EAAKS,MAAWT,EAAK/J,UAChC,sBAAKrB,UAAU,YAAf,UACK/C,EAAKmJ,iBAAiB+F,SAASf,EAAK3B,OAAO,KAExCuC,GAAW,2EAc9Bf,GAAO,SAAC,GAId,IAHHb,EAGE,EAHFA,IAKIc,EADQd,EAAI1F,MAAM,KACRnE,KAAI,SAACC,EAAcC,GAC7B,OAAO,uBAAMT,UAAU,MAAhB,cAAgCQ,IAALC,MAKtC,MAHY,KAAR2J,IACAc,EAAM,IAGN,qBAAKlL,UAAU,OAAf,SACKkL,KAKEkB,GAhFE,WAEb,IAAMC,EAAUpP,EAAKwI,SAASlF,KAAI,SAAC+L,EAAY7L,GAC3C,OAAO,cAAC,GAAD,CAAY2K,KAAMkB,GAAYR,SAEzC,OACI,qBAAK9L,UAAU,WAAf,SAQI,oBAAIA,UAAU,cAAd,SACKqM,O,qQCVjB,ICKIE,GD6BEC,GAAiB,SAAC,GAIjB,IAHHnI,EAGE,EAHFA,IAIMpD,EAAmBwL,YAAkBjN,GAIrCkN,EAHiBzP,EAAKwI,SAAS4B,QAAO,SAAC7G,EAAWC,GACpD,OAAOD,EAAKa,WAAagD,KAEa,GACpC2H,EAAU5E,EAAM5E,aAAaI,WAAW2B,SAASmI,EAAmBrL,UAE1E,OACI,sBAAKrB,UAAU,iBAAf,UACI,qBAAKA,UAAWiM,YAAF,QACd,sBAAKjM,UAAU,WAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAW2J,IAAW,CAAC,YAAasC,YAAd,KACEhP,EAAKiP,cAAiCQ,EAAmBrL,cAGtF,sBAAKrB,UAAU,OAAf,UACI,6BAAK0M,EAAmBlD,QACxB,sBAAKxJ,UAAU,WAAf,UACI,gCAAM0M,EAAmBlM,KAAKG,OAA9B,yBACA,qBAAKX,UAAU,OAAf,SACI,cAAC,GAAD,CAAMoK,IAAKsC,EAAmBb,MAAWa,EAAmBrL,YAG5D2K,EAEI,2DAEA,wBAAQhM,UAAU,iBAAlB,+CAOpB,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,YAAf,mCACA,qBAAKA,UAAU,QAAf,SACI,yBAAQA,UAAU,MAAMwB,QAAS,WAE7BP,EAAiByL,EAAmBrL,WAFxC,UAGG,mBAAGrB,UAAU,iBAHhB,6CAOPqE,GAAO,cAAC,GAAD,CAAS+G,KAAMsB,EAAoBrB,WApF1C,sBA0FFsB,GAzFI,SAAC,GAIb,IAHHhG,EAGE,EAHFA,SAGE,EAI0BsC,mBAAS,GAJnC,mBAIa2D,GAJb,WAKIC,EAAIlG,EAASmG,OAAOhF,UAAU,GAC9BiF,EAAe9P,EAAK+P,WAAWH,GAC/BxI,EAAO0I,GAAgBA,EAAa1I,IAAO0I,EAAa1I,IAAM,GAIpE,OAHAvE,EAAaC,UAAUjD,EAAMQ,uBAAuB,WAChDsP,EAAUK,KAAKC,aAGf,8BAEQ7I,EAEI,cAAC,GAAD,CAAgBA,IAAKA,IAErB,gFACc,uBACV,wBAAQ7C,QAAS,WACbvE,EAAK8J,SAAS,IAAK,KADvB,iF,qBEzBToG,GAVG,WACd,OACI,sBAAKnN,UAAU,YAAf,UACI,sBAAMA,UAAU,QAChB,sBAAMA,UAAU,QAChB,sBAAMA,UAAU,YCQboN,GAbI,WACf,OACI,qBAAKpN,UAAU,oBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,wBACA,wBACA,wBACA,8BFkHD,O,iDArGXqN,aAA6B,CACzBhN,IAAK,KACLiN,SAAU,EACVzC,IAAK,I,sDAECA,GACN3N,KAAKmQ,aAAaxC,IAAMA,I,2BAGvB0C,GAEDrQ,KAAKmQ,aAAeG,OAAOC,OAAOvQ,KAAKmQ,aAAaE,GAEpDlK,QAAQC,IAAI,mBAAmBpG,KAAKmQ,aAAajC,MACjD,IAAM/K,EAAMnD,KAAKmQ,aAAahN,IAAMnD,KAAKmQ,aAAahN,KAAO,EAC7DkM,GAAerP,KAAKmQ,aAAajC,KAAKsC,SAASrN,GAAKsN,OAAOjJ,MAAM,KAEjExH,KAAKmQ,aAAajQ,SAAWF,KAAK0Q,aAAaC,KAPlC3Q,MAQbA,KAAKmQ,aAAaS,GAAKvB,GAAa,GACpCrP,KAAKmQ,aAAaU,GAAKxB,GAAa,GACf,OAAjBgB,EAAMS,QACH9Q,KAAKmQ,aAAaY,WAAU/Q,KAAKmQ,aAAaY,YAErDnO,EAAamE,SAASnH,EAAMsB,kBAAkBiC,GAE9CnD,KAAKgR,QAAQC,KAAKjR,KAAKmQ,gB,8BAGvBnQ,KAAKmQ,aAAahN,IAAM,KACxBnD,KAAKmQ,aAAae,SAAU,EAC5BlR,KAAKmQ,aAAaW,OAAS,EAC3B9Q,KAAKmQ,aAAaY,UAAY,EAE9BnO,EAAamE,SAASnH,EAAMsB,kBAAkBlB,KAAKmQ,aAAahN,KAChEnD,KAAKgR,QAAQG,U,wFAkDJC,E,2EAAAA,E,SAAMC,GACX,OAAO,IAAIC,SAAc,SAAAC,GACvB7F,YAAW,WACTvF,QAAQC,IAAR,UAAeiL,EAAf,8DACAE,MACCF,OA/CHG,EAAoBnC,GAAa,GAAKA,GAAa,GACnDoC,EAAgB,WAClB,IAAMC,EAAsB,EAAKvB,aAAawB,SAC9C,OAAwB,OAApBD,EACOF,EAEkB,IAAlBE,EALO,IAQnB1R,KAAKmQ,aAAae,SAAwC,OAA7BlR,KAAKmQ,aAAaW,O,gCACxCM,EAAMK,G,UAIhB7O,EAAamE,SAASnH,EAAMsB,kBAAkBlB,KAAKmQ,aAAahN,KAChEgD,QAAQC,IAAI,UAAUpG,KAAKmQ,cAC3BnQ,KAAKmQ,aAAaY,UAAY/Q,KAAKmQ,aAAaY,WAAa,IAC1D/Q,KAAKmQ,aAAaY,UAAY,G,wBAE7B5K,QAAQC,IAAI,gBAAgBpG,KAAKmQ,cACjCnQ,KAAKiR,KAAKjR,KAAKmQ,c,+BAGhBnQ,KAAKmQ,aAAae,Q,wBAGX/N,EAAMnD,KAAKmQ,aAAahN,KAAO,EAElCnD,KAAKmQ,aAAaC,WACjBpQ,KAAKmQ,aAAahN,IAAMA,EAAK,EAE1BnD,KAAKmQ,aAAahN,KAAOnD,KAAKmQ,aAAaC,WAC1CpQ,KAAKmQ,aAAahN,IAAM,IAKhCnD,KAAKmQ,aAAaY,UAAY/Q,KAAKmQ,aAAaW,OAChD3K,QAAQC,IAAI,gBAAgBpG,KAAKmQ,cACjCnQ,KAAKiR,KAAKjR,KAAKmQ,c,wJAnFnB,OAAQ5L,OAAeyM,Y,MGZ3BR,GAAW,GACXoB,GAA0B,GAC1BC,GAAuB,GACvBC,GAAwB,GAkHbC,GAhHI,SAAC,GAMb,IALHjJ,EAKE,EALFA,WACAC,EAIE,EAJFA,WAMAD,EAAaA,EAAWkJ,OACpBxB,KAAa1H,IAEb8I,IADApB,GAAW1H,GACctB,MAAM,KAC/BqK,GAAaD,GAAcK,MAAM,GACjCH,GAAeI,kBAASN,GAAcvO,KAAI,SAACC,EAAcC,GACrD,MAAO,CACH4O,KAAM7O,EACN8O,OAAQ7O,QAVlB,MAegCwI,mBAAS,GAfzC,mBAeKsG,EAfL,KAegBC,EAfhB,OAgBgCvG,mBAAmB,IAhBnD,mBAgBKwG,EAhBL,KAgBgBC,EAhBhB,OAiB4BzG,oBAAU,GAjBtC,mBAiBK0G,EAjBL,KAiBcC,EAjBd,OAkB4B3G,mBAAS,IAlBrC,mBAkBK1D,EAlBL,KAkBcsK,EAlBd,OAmBkC5G,oBAAS,GAnB3C,mBAmBK6G,EAnBL,KAmBiBC,EAnBjB,KAqBIC,EAASlB,GAAcvO,KAAI,SAACC,EAAcC,GAC5C,IAAMwP,EAAaR,EAAUhP,GAC7B,OAAO,qBAAaT,UAAU,aAAvB,SAAoC,sBAAMA,UAAW2J,IAAW,CAAC,aAAc,CAAE,aAAcsG,KAA3D,SAA4EzP,KAAtGC,MAGfyP,EAAQlB,GAAazO,KAAI,SAACC,EAAaC,GAAe,IAChD4O,EAAiB7O,EAAjB6O,KAAMC,EAAW9O,EAAX8O,OACRa,EACKd,EAAKxK,QAAQ,eAAgB,IAAIuL,cAE5C,OAAO,wBAAgB5O,QAAS,WAE5B,GAAIuN,GAAWQ,GAAWa,gBAAkBf,EAAKe,cAU7C,OAJAP,EAAW,gBACXjH,YAAW,WACPiH,EAAW,MACZ,MAIP,IAAMQ,EAAqBZ,EAAUN,MAAM,GAC3CkB,EAASd,GAAaF,EACtBK,EAAaW,GACbb,EAAaD,EAAY,GACrBR,GAAWpO,SAAW0P,EAAS1P,SAC/BkP,EAAW,cACXE,GAAc,GACdnH,YAAW,WACPiH,EAAW,MACZ,OAER7P,UAAW2J,IAAW,CAAC,OAAQ,CAAE,MAASgG,IAAYL,GAAU,CAAE,UAAWC,EAAYD,KA1BrF,SA0BiG,sBAAMtP,UAAU,aAAhB,SAA8BmQ,KA1BlH1P,MA6BxB,OACI,sBAAKT,UAAU,aAAf,UACI,+EAKA,qBAAKA,UAAU,SAAf,SACKgQ,IAEL,qBAAKhQ,UAAU,aAAf,SACKiG,IAEL,qBAAKjG,UAAU,QAAf,UACM8P,GAAcI,IAEpB,sBAAKlQ,UAAU,iBAAf,UACI,yBAAQwB,QAAS,WACboO,EAAWL,GACX3G,YAAW,WACPgH,GAAY,KACb,MACJ5P,UAAU,eALb,UAK4B,mBAAGA,UAAU,kBALzC,UAMCyP,EAAU9O,OAAS,GAAK,yBAAQa,QAAS,WACtCkO,EAAa,IACbF,EAAa,GACbI,GAAY,GACZC,EAAW,IACXE,GAAc,IACf/P,UAAU,kBANY,UAMM,mBAAGA,UAAU,oBANnB,cAQhB,KAAZuF,GAAkB,qBAAK/D,QAAS,WAC7BqO,EAAW,KACZ7P,UAAU,sBAFM,SAGf,qBAAKA,UAAU,cAAf,SACI,gCACI,8BAAMuF,IACoB,aAAzBA,EAAQT,OAAO,EAAG,IAAqB,qBAAK9E,UAAU,iBAAf,0CClE1DsQ,GAAc,WAAO,IAAD,EACMrH,oBAAS,GADf,mBACfsH,EADe,KACPC,EADO,OAEUvH,mBAAS,GAFnB,mBAEf4F,EAFe,KAELpG,EAFK,OAGIQ,mBAAS,GAHb,mBAGfwH,EAHe,KAGRC,EAHQ,KAItBC,GAAetD,aAAawB,SAAWA,EACvC8B,GAAetD,aAAaoD,MAAQA,EA0BpC,OACI,sBAAKzQ,UAAS,eAAd,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,0BACA,sBAAKA,UAAU,OAAf,UACI,wBACIA,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,IAAVH,KACdjP,QAAS,WACLkP,EAAS,IAJjB,gBAMA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLkP,EAAS,KAJjB,kBAMA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLkP,EAAS,KAJjB,kBAMA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLkP,EAAS,KAJjB,wBAQR,sBAAK1Q,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,0BACA,sBAAKA,UAAU,OAAf,UACI,wBACIA,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLiH,EAAY,IAJpB,gBAMA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLiH,EAAY,IAJpB,gBAMA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,MAAb/B,KACdrN,QAAS,WACLiH,EAAY,MAJpB,kBAMA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLiH,EAAY,IAJpB,gBAMA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,MAAb/B,KACdrN,QAAS,WACLiH,EAAY,MAJpB,kBAMA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,OAAb/B,KACdrN,QAAS,WACLiH,EAAY,OAJpB,4CAUR,sBAAKzI,UAAU,SAAf,UAEQuQ,GAAU,yBAAQvQ,UAAU,eAAewB,QAAS,WAGhDgP,GAAU,GACVG,GAAetC,SAJT,UAKP,cAAC,GAAD,IAAa,sBAAMrO,UAAU,MAAhB,sBAGfuQ,GAAU,yBAAQvQ,UAAU,eAAewB,QAAS,WAKjDgP,GAAU,GACVG,GAAexC,KAAK,CAChB9N,IAAKpD,EAAK8I,mBAAmBG,YAG7B8H,OAAQ,KACRC,UAAW,KACXG,SAAS,KAZN,UAeR,mBAAGpO,UAAU,mBAAqB,sBAAMA,UAAU,MAAhB,4BAqB1C6Q,GA5LO,WAClB,IAAMC,EAAqBrE,YAAkBlN,GAiB7C,OAhBAM,qBAAU,WAYN,OALC4B,OAAesP,SAAS,EAAG,IAC5BnI,YAAW,WACNnH,OAAesP,SAAS,EAAG,KAC7B,KAEI,eAGR,IAEC,sBAAK/Q,UAAU,gBAAf,UAGI,wBAAQwB,QAAS,WACbmP,GAAetC,QACfyC,GAAmB,IACpB9Q,UAAU,gBAHb,SAII,mBAAGA,UAAU,mBAEjB,cAAC,GAAD,CACIgG,WAAY/I,EAAK8I,mBAAmBC,WACpCC,WAAYhJ,EAAK8I,mBAAmBE,aAExC,cAAC,GAAD,Q,kRCzBZ,IACI5F,GADA2Q,GAAmB,GA+HjBC,GAAiB,SAAC,GAMjB,IALH5M,EAKE,EALFA,IACA8C,EAIE,EAJFA,KAKA,OACI,gCAEI,cAAC,GAAD,CAAY9C,IAAKA,EAAK8C,KAAMA,IAC5B,sBAAKnH,UAAU,qBAAf,UACI,cAAC,GAAD,CAAWqE,IAAKA,EAAK8C,KAAMA,IAC3B,cAAC,GAAD,CAAc9C,IAAKA,EAAK8C,KAAMA,OAGlC,cAAC,GAAD,CAAeA,KAAMA,QAK3B+J,GAAe,SAAC,GAMf,IALH7M,EAKE,EALFA,IAKE,EAJF8C,KAKA,OAAQ,qBAAInH,UAAU,eAAd,UACJ,qBACIwB,QAAS,WACLvE,EAAKkU,aAAa9Q,GAAKgE,EAAK,SAEhCrE,UAAU,gBAJd,UAI8B,mBAAGA,UAAU,sCAJ3C,8BAKA,qBACIwB,QAAS,WACLvE,EAAKmU,mBAAmB/M,IAE5BrE,UAAU,gBAJd,UAI8B,mBAAGA,UAAU,wBAJ3C,8BAKA,qBACIwB,QAAS,WACLvE,EAAKkU,aAAa9Q,GAAKgE,EAAK,SAEhCrE,UAAU,gBAJd,qCAIkC,mBAAGA,UAAU,8CAIjDqR,GAAa,SAAC,GAMb,IALHhN,EAKE,EALFA,IACA8C,EAIE,EAJFA,KAYML,EAAmB7J,EAAK6J,iBAAiBzC,GAC3CoH,EAAe,SAKnB,OAJI3E,GAAoBA,EAAiB2E,eACrCA,EAAe3E,EAAiB2E,cAIhC,qBAAKzL,UAAW2J,IAAW,CAAC,aAAc8B,EAAcQ,YAA7B,KACEhP,EAAKiP,cAAiC7H,EAAa8C,EAAKrC,OAAO,EAAG,MAD/F,SAIyB,UAAjB2G,EAEI,sBAAKzL,UAAS,qBAAgByL,GAA9B,UACI,sBAAKzL,UAAU,WAAf,UACI,sBAAMA,UAAU,QAAhB,iBADJ,IACuC,uBAAUmH,EAAKrC,OAAO,EAAG,MAEhE,qBAAK9E,UAAU,iBAKnB,qBAAKA,UAAS,qBAAgByL,GAA9B,SACI,sBAAKzL,UAAU,WAAf,UACI,sBAAMA,UAAU,QAAhB,iBADJ,IACwCmH,EAAKrC,OAAO,EAAG,WAWzEwM,GAAY,SAAC,GAMZ,IALHjN,EAKE,EALFA,IACA8C,EAIE,EAJFA,KAKAtH,qBAAU,WASN,OARAC,EAAaC,UAAUjD,EAAMsB,mBAAmB,SAACiC,GAC7CgD,QAAQC,IAAI,kBAAmBjD,GAE/BuM,EAAU2E,EAAStE,KAAKC,aAKrB,WACHpN,EAAa0R,OAAO1U,EAAMsB,mBAC1B0B,EAAa0R,OAAO1U,EAAMqB,mBAE/B,IAEH,IAAMsT,EAAqBC,YAAetS,GAhBxC,EAiB0B6J,mBAAS,GAjBnC,mBAiBKsI,EAjBL,KAiBa3E,EAjBb,KAoBIc,EAAWzQ,EAAK4I,UAAU6H,SAC1BiE,EAAYjE,EAASnN,KAAI,SAACC,EAAWC,GACvC,OAAO,cAAC,GAAD,CACHJ,IAAKI,EACL6M,SAAUI,EAAS/M,OACnB0D,IAAKA,EAAK8C,KAAMA,EAChByK,UAAWL,EAEXnG,KAAM5K,GANH,kBAOaC,OASxB,OADA4C,QAAQC,IAAI,mBAER,qBAAKtD,UAAW2J,IAAW,CAAC,YAAasC,YAAd,KACNwF,EAAqB,GAAK,OAD/C,SAGKE,KAKPE,GAAe,SAAC,GAkBhB,EAfFD,UAeG,IAdHxG,EAcE,EAdFA,KACA/K,EAaE,EAbFA,IACAiN,EAYE,EAZFA,SAEAnG,GAUE,EAXF9C,IAWE,EAVF8C,MAWA9D,QAAQC,IAAI,wBAAyBqN,GAAetD,aAAahN,KAD/D,MAEkC4I,oBAAS,GAF3C,mBAEK6I,EAFL,KAEiBC,EAFjB,OAGoC9I,oBAAS,GAH7C,mBAGK+I,EAHL,KAGkBC,EAHlB,KAIIC,EAAaR,YAAerS,GAJhC,EAK4B4J,mBAAS7B,EAAM5E,aAAaQ,aAAauB,SAAhC,UAA4C4C,EAA5C,YAAoD9G,KALzF,mBAKK8R,EALL,KAKcC,EALd,KAOIC,EAAa,SAACC,GAEhB,IAAKlL,EAAM9C,UASP,OARArH,EAAKwN,iBAAiB,CAClBlF,QAAS,oFACTmF,MAAO,WAEX5K,EAAamE,SAASnH,EAAMS,eAAgB,CACxCoN,KAAM,aACNtJ,SAAU+J,EAAK/J,WAIvB+Q,EAAWE,GAEX,IAAMC,EAAO,UAAMpL,EAAN,YAAc9G,GAE3BpD,EAAKuV,2BACD,OACAF,EAAK,MAAQ,SACbC,IAeFE,EAAWpS,IAAQsQ,GAAetD,aAAahN,IAC/C6P,EAAQ9E,EAAK8E,MACbY,EAAqBrE,YAAkBlN,GAIvCmT,KAA2BD,GAAmD,OAAvC9B,GAAetD,aAAaW,QACnE2E,EAAY,WACdhC,GAAexC,KAAK,CAChB9N,IAAKA,EACLiN,SAAUA,EACVzC,IAAKmG,GACLhD,OAAQ,EACRC,UAAW,EACXG,SAAS,KAGjB,OACI,qBAAKwE,aAAc,WACf3V,EAAK4V,oBACN7S,UAAW2J,IAAW,CAAC,oBAAD,OAAqBtJ,GAAO,CAAEuQ,OAAQoB,GAAe,CAAEpB,OAAQ6B,KAFxF,SAII,sBAAKzS,UAAW2J,IAAW,CAAC,aAAc,CAAEiH,OAAQ6B,KAApD,UACI,sBAAKzS,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAWwB,QAAS,WAC/BmR,IACA1V,EAAK4V,oBAFT,UAUI,cAAC,GAAD,CAASxS,IAAKA,IACd,8BAEQ2R,EAEI,qCACI,qBAAKhS,UAAU,WAAf,SAA2BoL,EAAKtK,KAChC,qBAAKd,UAAU,WAAf,SAA2BoL,EAAKvK,QAGpC,qCACK,CAAC,KAAM,MAAM0D,SAAS2N,IAAe,qBAAKlS,UAAU,WAAf,SAA2BoL,EAAKtK,KACrE,CAAC,MAAMyD,SAAS2N,IAAe,qBAAKlS,UAAU,YAAf,SAA4BoL,EAAK0H,MAChE,CAAC,KAAM,MAAMvO,SAAS2N,IAAe,qBAAKlS,UAAU,aAAf,SAA6BoL,EAAK2H,OACvE,CAAC,KAAM,MAAMxO,SAAS2N,IAAe,qBAAKlS,UAAU,aAAf,SAA6BoL,EAAK4H,OACvE,CAAC,KAAM,KAAM,MAAMzO,SAAS2N,IAAe,qBAAKlS,UAAU,WAAf,SAA2BoL,EAAKvK,aAKhG,qBAAKb,UAAU,iBAMnB,sBAAKA,UAAU,cAAf,UACI,gCACI,sBAAKA,UAAU,MAAf,UACI,wBAAQwB,QAAS,WAMbmR,KACD3S,UAAU,MAPb,SAQI,mBAAGA,UAAU,mBAAb,SACI,sBAAMA,UAAU,UAAhB,8BAGR,wBAAQA,UAAU,MAAlB,SAEQ0S,EACI,sBAAK1S,UAAU,cAAcwB,QAAS,WAElCmP,GAAetC,SAFnB,UAII,cAAC,GAAD,IACA,sBAAMrO,UAAU,UAAhB,yCAGJ,sBAAKwB,QAAS,WAEVmP,GAAexC,KAAK,CAChB9N,IAAKA,EACLiN,SAAUA,EACVzC,IAAKmG,GACLhD,OAAQ,KACRC,UAAW,KACXG,SAAS,KARjB,UAWI,mBAAGpO,UAAU,mBAAqB,sBAAMA,UAAU,UAAhB,2CA6BlD,wBAAQA,UAAU,MAAlB,SACKmS,EAEG,mBAAGnS,UAAU,qCAAqCwB,QAAS,WACvD6Q,GAAW,IADf,SAEG,sBAAMrS,UAAU,UAAhB,wCAEH,mBAAGA,UAAU,+BAA+BwB,QAAS,WACjD6Q,GAAW,IADf,SAEG,sBAAMrS,UAAU,UAAhB,uCAIf,sBAAKA,UAAU,MAAf,UACKkQ,GAAS,wBAAQlQ,UAAU,eAAewB,QAAS,WAChDuQ,GAAeD,IADT,SAEP,mBAAG9R,UAAU,cAAb,SACK,uBAAMA,UAAU,UAAhB,0BAA8BkQ,EAAMvP,OAApC,WAGR,yBAAQa,QAAS,WACbvE,EAAK8I,mBAAmBC,WAAaoF,EAAKtK,GAC1C7D,EAAK8I,mBAAmBE,WAAamF,EAAKvK,GAC1C5D,EAAK8I,mBAAmBG,YAAc7F,EACtCpD,EAAK8I,mBAAmBI,QAAUgB,EAIlCwJ,GAAexC,KAAK,CAChB9N,IAAKA,EACLiN,SAAUA,EACVzC,IAAKmG,GACLhD,OAAQ,KACRC,UAAW,KACXG,SAAS,IAGb0C,GAAmB,IAEpB9Q,UAAU,sBAnBb,UAoBI,sBAAMA,UAAU,WAAhB,gBAAoC,sBAAMA,UAAU,UAAhB,yCAEvC,CAAC,KAAM,KAAM,KAAM,MAAMuE,SAAS2N,IAAe,wBAAQlS,UAAW2J,IAAW,CAAC,gBAAiB,CAAEsJ,QAASjB,KAAiBxQ,QAAS,WAEnIyQ,GAAe,GACfrJ,YAAW,WACPqJ,GAAe,KAChB,MAL2C,SAM/C,mBAAGjS,UAAU,mBAAb,SAAgC,sBAAMA,UAAU,UAAhB,gDAI1C8R,GAAc5B,GAAS,8BACpB,cAAC,GAAD,CAAU9E,KAAM8E,eAQlCgD,GAAgB,SAAC,GAIjB,EAHF/L,KAGG,IAAD,EAEgC8B,mBAAS,GAFzC,gCAG4BvJ,YAAeN,IAH3C,mBAGK+T,EAHL,KAGcC,EAHd,OAI0BnK,mBAAS,GAJnC,mBAIK+E,EAJL,KAIaqF,EAJb,OAK8BpK,mBAAS,GALvC,mBAKK4F,EALL,KAKepG,EALf,OAMwBQ,mBAAS,GANjC,mBAMKwH,EANL,KAMYC,EANZ,KAoBF,OAEI,sBAAK1Q,UAAS,gBAAd,UACI,qBAAKwB,QAAS,WACN2R,GACAC,GAAYD,IAEjBnT,UAAW2J,IAAW,CAAC,YAAa,CAAE2J,MAAOH,KAJhD,SAKI,sBAAKnT,UAAU,SAAf,UACI,qBAAKA,UAAU,cAAf,SACI,yBAAQA,UAAU,yBAAyBwB,QAAS,WAChD4R,GAAYD,IADhB,UAGKA,GAAW,gEAAM,mBAAGnT,UAAU,6BAC7BmT,GAAW,gEAAM,mBAAGnT,UAAU,qCAKxC,sBAAKA,UAAS,eAAd,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,0BACA,sBAAKA,UAAU,OAAf,UACI,wBACIA,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAmB,IAAX5C,KACdxM,QAAS,WACLmP,GAAetD,aAAaW,OAAS,EACrC2C,GAAetD,aAAaY,UAAY,EACxCoF,EAAU,IANlB,gBAQA,wBACIrT,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAmB,IAAX5C,KACdxM,QAAS,WACLmP,GAAetD,aAAaW,OAAS,EACrC2C,GAAetD,aAAaY,UAAY,EACxCoF,EAAU,IANlB,gBAQA,wBACIrT,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAmB,IAAX5C,KACdxM,QAAS,WACLmP,GAAetD,aAAaW,OAAS,EACrC2C,GAAetD,aAAaY,UAAY,EACxCoF,EAAU,IANlB,gBAQA,wBACIrT,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAmB,IAAX5C,KACdxM,QAAS,WACLmP,GAAetD,aAAaW,OAAS,EACrC2C,GAAetD,aAAaY,UAAY,EACxCoF,EAAU,IANlB,gBAQA,wBACIrT,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAmB,IAAX5C,KACdxM,QAAS,WACLmP,GAAetD,aAAaW,OAAS,EACrC2C,GAAetD,aAAaY,UAAY,EACxCoF,EAAU,IANlB,sBAUR,sBAAKrT,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,0BACA,sBAAKA,UAAU,OAAf,UACI,wBACIA,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,IAAVH,KACdjP,QAAS,WACLmP,GAAetD,aAAaoD,MAAQ,EACpCC,EAAS,IALjB,gBAOA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLmP,GAAetD,aAAaoD,MAAQ,GACpCC,EAAS,KALjB,kBAOA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLmP,GAAetD,aAAaoD,MAAQ,GACpCC,EAAS,KALjB,kBAOA,wBACI1Q,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAkB,KAAVH,KACdjP,QAAS,WACLmP,GAAetD,aAAaoD,MAAQ,GACpCC,EAAS,KALjB,wBASR,sBAAK1Q,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,0BACA,sBAAKA,UAAU,OAAf,UACI,wBACIA,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLiH,EAAY,GACZkI,GAAetD,aAAawB,SAAW,GAL/C,gBAOA,wBACI7O,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLiH,EAAY,GACZkI,GAAetD,aAAawB,SAAW,GAL/C,gBAOA,wBACI7O,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,MAAb/B,KACdrN,QAAS,WACLiH,EAAY,KACZkI,GAAetD,aAAawB,SAAW,KAL/C,kBAOA,wBACI7O,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,IAAb/B,KACdrN,QAAS,WACLmP,GAAetD,aAAawB,SAAW,EACvCpG,EAAY,IALpB,gBAOA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,MAAb/B,KACdrN,QAAS,WACLmP,GAAetD,aAAawB,SAAW,IACvCpG,EAAY,MALpB,kBAOA,wBACIzI,UAAW2J,IAAW,CAAC,uBACnB,CAAEiH,OAAqB,OAAb/B,KACdrN,QAAS,WACLmP,GAAetD,aAAawB,SAAW,KACvCpG,EAAY,OALpB,+CAYZ,sBAAKzI,UAAU,eAAf,yBACM,uBAAMA,UAAU,OAAhB,cAAyBgO,KAD/B,eAEM,uBAAMhO,UAAU,OAAhB,cAAyByQ,KAF/B,eAGM,sBAAMzQ,UAAU,OAAhB,SACsB,OAAb6O,EAAoB,2BAASA,EAAW,cAQ/D,qBAAK7O,UAAU,aAAf,SAEI,qBAAKA,UAAU,WAAf,SACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,eASlBuT,GAAgB,WAElB1T,qBAAU,WAcNC,EAAaC,UAAUjD,EAAMsB,mBAAmB,WAG5CoV,EAAUvG,KAAKC,eAEpB,IAEH,IAvBwB,EAwBIxN,YAAeJ,GAxBnB,mBAwBTkU,GAxBS,aAyBAvK,mBAFH,KAvBG,gCA0BUA,oBAAS,IA1BnB,mBA4BlBsH,GA5BkB,UA4BTI,GAAetD,aAAae,SAM3C,OACI,mCACI,qBAAKpO,UAAU,iBAAf,SACI,yBAAQwB,QAAS,WAmBb,IAAM+O,EAASI,GAAetD,aAAae,QAC3C/K,QAAQC,IAAI,SAAUiN,GAElBA,EACAI,GAAetC,QAEfsC,GAAexC,KAAK,CAChBC,SAAS,EACTd,SAAUrQ,EAAK4I,UAAU6H,SAAS/M,OAClCqN,OAAQ,EACRC,UAAW,KAIpBjO,UAAW2J,IAAW,CAAC,gBAAiB,CAAEiH,OAAQL,KAjCrD,UAkCKA,GAAU,qCAAE,cAAC,GAAD,IAAa,sBAAMvQ,UAAU,iBAAhB,0CACxBuQ,GAAU,mBAAGvQ,UAAU,mBAAb,SAAgC,sBAAMA,UAAU,UAAhB,gDAyB1DyT,GAAgB,WAAM,MAEY/T,YAAeL,GAF3B,mBAEjB6S,EAFiB,KAELwB,EAFK,KAIxB,OACI,mCACI,sBAAK1T,UAAU,iBAAf,UACI,wBAAQwB,QAAS,WAEbkS,EADa,OAGd1T,UAAW2J,IAAW,CAAC,qBAAsB,CAAEiH,OAAuB,OAAfsB,KAJ1D,2BAKA,wBAAQ1Q,QAAS,WAEbkS,EADa,OAGd1T,UAAW2J,IAAW,CAAC,qBAAsB,CAAEiH,OAAuB,OAAfsB,KAJ1D,gCAKA,wBAAQ1Q,QAAS,WAEbkS,EADa,OAGd1T,UAAW2J,IAAW,CAAC,qBAAsB,CAAEiH,OAAuB,OAAfsB,KAJ1D,uCAYVyB,GAAW,SAAC,GAIX,IACGC,EADJ,EAHFxI,KAIiB7K,KAAI,SAACC,EAAgBC,GAClC,OAAO,qBAAIT,UAAU,YAAd,UACH,sBAAMA,UAAU,OAAhB,SAAwBQ,EAAK,KAC7B,sBAAMR,UAAU,OAAhB,SAAwBQ,EAAK,WAGrC,OACI,oBAAIR,UAAU,aAAd,SACK4T,KAKPC,GAAU,SAAC,GAIV,IAHHxT,EAGE,EAHFA,IAIA,OACI,sBAAML,UAAU,WAAhB,SACKK,EAAM,KAKJyT,GA32BI,SAAC,GAId,EAHFnN,SAGG,IAAD,EAKwCsC,oBAAS,GALjD,mBAKK8K,EALL,KAKoBC,EALpB,KAMIC,EAAkBvC,YAAenS,GAEvCM,qBAAU,WAuCN,OAlCAC,EAAaC,UAAUjD,EAAMQ,uBAAuB,WAChD0W,GAAiB,GAEjB/W,EAAKiX,eAAe/M,MAKxBrH,EAAaC,UAAUjD,EAAMsB,mBAAmB,SAACiC,GAGxCpD,EAAK6I,oBAEN7I,EAAKkX,aAAY,SAACC,GAEd,IAAMC,EAAOC,SAAiBC,cAAjB,qBAAD,OAAqDlU,IAC3DmU,EAAKH,EAAOA,EAAII,UAAY,KACxB,OAAND,IAEJnR,QAAQC,IAAI,sBAAuB8Q,EAAQzD,GAAetD,aAAae,UAClEgG,GAAUzD,GAAetD,aAAae,SACvCsG,KAAgBF,EAAI,IAAK,CACrBG,gBAAkBL,SAAiBC,cAAc,iBAY9D,eAGR,IAlDD,MAqD0BtL,oBAAS,GArDnC,mBAqDK2L,EArDL,KAqDaC,EArDb,KAsDI/H,EAASrL,OAAOkF,SAASmG,OAC/BzJ,QAAQC,IAAI,gBAAiBwJ,GAC7B,IAAMD,EAAIC,EAAOhF,UAAU,GACrBiF,EAAe9P,EAAK+P,WAAWH,GAC/BxI,EAAO0I,GAAgBA,EAAa1I,IAAO0I,EAAa1I,IAAM,GAC9D8C,EAAQ4F,GAAgBA,EAAa5F,KAAQ4F,EAAa5F,KAAO,GACvE9G,GAAM0M,EAAa1M,IACnB2Q,GAAQ,6BAAyB3M,EAAzB,mBAAuC8C,EAAvC,WACRtH,qBAAU,WACN8Q,GAAemE,UAAU9D,MAC1B,IACH3N,QAAQC,IAAIuJ,EAAGE,EAAc1I,EAAK8C,GAChBlK,EAAK8X,aAAa1Q,EAAK8C,GAAMtD,MAAK,SAACuQ,GACjDnX,EAAK4I,UAAYuO,EAAOnX,KACxB0T,GAAetD,aAAajC,KAAOnO,EAAK4I,UACxCgP,GAAU,MAId,GAAId,EAAe,CACf,IAAM/H,EAAU5E,EAAM5E,aAAaI,WAAW2B,SAASF,GACvCpH,EAAK6J,iBAAiBzC,GAAKhE,MAAoD,IAA5CpD,EAAK6J,iBAAiBzC,GAAKhE,IAAKmK,SAElEwB,IACb9G,MAAM,6HACNjI,EAAKmU,mBAAmB/M,IAKhC,OACI,mCAEQ0P,EAEI,sBAAK/T,UAAU,aAAf,UAEQ4U,EAEI,8BAESvQ,GAAO8C,EAEJ,cAAC,GAAD,CAAgB9C,IAAKA,EAAK8C,KAAMA,IAEhC,gFACc,uBACV,wBAAQ3F,QAAS,WACbvE,EAAK8J,SAAS,IAAK,KADvB,gFAOhB,6CAEPkN,GAAmB,cAAC,GAAD,OAGxB,cAAC,GAAD,OCxHLe,GAhBA,WACX,OACI,qBAAKhV,UAAU,SAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,cAAcwB,QAAS,WAClCvE,EAAK8J,SAAS,GAAI,KADtB,UAEG,mBAAG/G,UAAU,uBAFhB,4CAGA,uBACA,oBAAG4G,KAAK,mCAAmC5G,UAAU,uBAAuB0J,OAAO,SAAnF,UAA4F,mBAAG1J,UAAU,uCAAzG,6DAAgK,uBAChK,oBAAG4G,KAAK,uBAAuB5G,UAAU,uBAAzC,UAAgE,mBAAGA,UAAU,uCAA7E,iDAAkI,6BC0DnIiV,GAnEK,WAAO,IAAD,EAC0BhM,oBAAS,GADnC,mBACfiM,EADe,KACGC,EADH,KAStB,OADA9R,QAAQC,IAAI,iBAAkB8D,EAAM9E,SAASG,OAEzC,sBAAKzC,UAAU,cAAf,UACI,8BACI,yBAAQwB,QAAS,WACb2T,GAAoB,IACrBnV,UAAU,MAFb,UAEmB,mBAAGA,UAAU,uBAFhC,IAIUoH,EAAM9E,SAASG,MAAMiC,MAAM,KAAK,QAG1CwQ,GACA,qBAAKlV,UAAU,mBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,SAAd,4CAGA,qBAAKA,UAAU,QAAf,SACI,wBAAQwB,QAAS,WACb2T,GAAoB,IACrBnV,UAAU,gBAFb,SAE6B,mBAAGA,UAAU,wBAGlD,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,UAAhB,SAA2BoH,EAAM9E,SAASG,MAAMiC,MAAM,KAAK,KAC3D,wBAAQ1E,UAAU,uBAAuBwB,QAAS,WAC9C0B,EAAYkS,UAAUvR,MAAK,WACtBpC,OAAekF,SAASC,KAAO,QAFxC,yCASJ,sBAAK5G,UAAU,gBAAf,UACI,qBAAIA,UAAU,QAAd,UAAsB,mBAAGA,UAAU,gBAAnC,6CACA,qBAAIA,UAAU,OAAd,UACI,qBAAIA,UAAU,MAAd,uEAAiC,mBAAGA,UAAU,oCAC9C,qBAAIA,UAAU,MAAd,uEAAiC,mBAAGA,UAAU,mDC1CxEqV,GAAgB,CAClB,MAAS,qBACT,KAAQ,2BACR,OAAU,2DAqSCC,GAnSM,WAAO,IAAD,EACarM,mBAAS,IADtB,mBAChBsM,EADgB,KACJC,EADI,OAEOvM,mBAAS,IAFhB,mBAEhBwM,EAFgB,KAEPC,EAFO,OAGSzM,mBAAS,IAHlB,mBAGhB0M,EAHgB,KAGNC,EAHM,OAKyB3M,oBAAS,GALlC,mBAKhBiM,EALgB,KAKEC,EALF,OAMSlM,mBAAS,SANlB,mBAMhB4M,EANgB,KAMNC,EANM,KAOvBjW,qBAAU,WACNC,EAAaC,UAAUjD,EAAMS,gBAAgB,SAAC+K,GAE1C6M,GAAoB,QAEzB,IACH,IAAMY,EAAW,SAAC/Y,GAAgB,IAAD,EAGzBA,EADA0M,OAAUsM,EAFe,EAEfA,KAAMxO,EAFS,EAETA,MAEP,UAATwO,EACAR,EAAchO,GACE,OAATwO,EACPN,EAAWlO,GACK,QAATwO,GACPJ,EAAYpO,IAGdyO,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACbD,EAAEE,iBACGb,EAFQ,uBAGTrQ,MAAM,kEAHG,6BAOI,SAAb2Q,GAAwBJ,IAAYE,EAP3B,uBAQTzQ,MAAMkC,EAAMhC,oBAAoB,CAC5BE,KAAM,uBATD,sCAeQ,SAAbuQ,EAfK,kCAiBC3S,EAAYmT,+BAA+Bd,EAAYE,GAjBxD,mCAkBe,UAAbI,EAlBF,kCAoBC3S,EAAYoT,2BAA2Bf,EAAYE,GApBpD,gCAqBe,WAAbI,GAEP3S,EAAY+B,uBAAuBsQ,GAAY1R,MAAK,WAChDqB,MAAM,4BAAD,OAASqQ,EAAT,0FACNrR,OAAM,SAACiB,GAEa,wBAAfA,EAAMG,KACNJ,MAAMkC,EAAMhC,oBAAoB,CAC5BE,KAAMH,EAAMG,QAGhBJ,MAAM,WAAaC,EAAMI,YAhC5B,0DAwCTlC,QAAQC,IAAR,MACA4B,MAAMkC,EAAMhC,oBAAN,OAzCG,0DAAH,sDAuDd,OACI,sBAAKpF,UAAU,eAAf,UACI,8BACI,wBAAQwB,QAAS,WACb2T,GAAoB,IACrBnV,UAAU,MAFb,SAEmB,mBAAGA,UAAU,qBAAb,oCAKnBkV,GACA,qBAAKlV,UAAU,cAAf,SACI,sBAAKA,UAAU,iBAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,qBAAIA,UAAU,SAAd,UAEI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKwB,QAAS,WACVsU,EAAY,UACb9V,UAAW2J,IAAW,CAAC,WAAY,CAAE,OAAuB,UAAbkM,KAFlD,+BAIQ,qBAAK7V,UAAU,iBAEvB,sBAAKwB,QAAS,WACVsU,EAAY,SACb9V,UAAW2J,IAAW,CAAC,WAAY,CAAE,OAAuB,SAAbkM,KAFlD,qCAIQ,qBAAK7V,UAAU,sBAK3B,CAAC,UAAUuE,SAASsR,IAAa,qBAAK7V,UAAU,aAAf,uDAGzC,qBAAKA,UAAU,QAAf,SACI,wBAAQwB,QAAS,WACb2T,GAAoB,IACrBnV,UAAU,gBAFb,SAE6B,mBAAGA,UAAU,wBAIlD,uBAAMiW,SAAUA,EAAhB,UACI,+BACI,6BACI,uBAAOjW,UAAU,eACbuW,YAAY,kCACZP,KAAK,QAAQQ,KAAK,OAAOT,SAAUA,EAAUvO,MAAO+N,MAGxD,CAAC,QAAS,QAAQhR,SAASsR,IAC3B,6BACI,uBAAO7V,UAAU,eACbuW,YAAY,wCACZP,KAAK,KAAKQ,KAAK,WAAWT,SAAUA,EAAUvO,MAAOiO,MAI7D,CAAC,QAAQlR,SAASsR,IAClB,6BACI,uBAAO7V,UAAU,eACbuW,YAAY,wCACZP,KAAK,MAAMQ,KAAK,WAAWT,SAAUA,EAAUvO,MAAOmO,SA+BtE,wBAAQ3V,UAAU,YAAlB,SAA+BqV,GAASQ,QAGxC,CAAC,QAAS,QAAQtR,SAASsR,IAC3B,qBAAK7V,UAAU,YAAf,SACI,wBAAQA,UAAU,oBAAoBwB,QAAS,WAE3CsU,EAAY,WAFhB,uFC9JjBW,GA3BC,WAAO,IAAD,EAEsBxN,oBAAS,GAF/B,mBAEXyN,EAFW,KAEGC,EAFH,OAGU1N,mBAAS,GAHnB,mBAGHuK,GAHG,WAclB,OAVA3T,qBAAU,WACNC,EAAaC,UAAUjD,EAAMQ,uBAAuB,SAACgF,GACjDe,QAAQC,IAAI,+BACZqT,GAAgB,GAChBnD,EAAUvG,KAAKC,aAEnB9F,EAAMwP,cAEP,IAGC,qBAAK5W,UAAU,UAAf,SAEQ0W,EAEItP,EAAM9E,SAAW,cAAC,GAAD,IAAkB,cAAC,GAAD,IAEnC,gDCVLuU,GAfA,WACX,OACI,qBAAK7W,UAAU,SAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,OAAOwB,QAAS,WAC3BvE,EAAK8J,SAAS,GAAI,KADtB,oDAGA,qBAAK/G,UAAU,YAAf,SACI,cAAC,GAAD,YCFL8W,GARA,WACX,OACI,yBCMOC,GARA,WACX,OACI,0CCMOC,GARA,WACX,OACI,0CCMOC,GARA,WACX,OACI,0CCYOC,I,OAbU,WACrB,OACI,qBAAKlX,UAAU,mBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,uBAAOwW,KAAK,aACZ,yBACA,yBACA,gC,yGCLhB,IAAI3H,GAAgB,KAoCLsI,GAnCI,WAAO,IAAD,EACGlO,mBAAS,CAC7B1D,QAAS,GACTmF,MAAO,IAHU,mBACdtJ,EADc,KACRgW,EADQ,KA0BrB,OArBAvX,qBAAU,WACNC,EAAaC,UAAUjD,EAAMiC,oBAAoB,SAACsY,GAI9CD,EAAQC,GACa,IAAjBA,EAAO3M,QACP2M,EAAO3M,MAAQ,KAEfmE,IACArG,cAAcqG,IAElBA,GAAWpG,aAAY,WACnBD,cAAcqG,IACduI,EAAQ,CACJ7R,QAAS,GACTmF,MAAO,MAEZ2M,EAAO3M,YAEf,IAEC,qBAAK1K,UAAW2J,IAAW,aAAcsC,YAAd,KACG,KAAjB7K,EAAKmE,QAAiB,SAAW,SAD9C,SAGKnE,EAAKmE,WCYH+R,GA9BG,WAMd,OAJAzX,qBAAU,cAEP,IAGC,gCAEI,cAAC,GAAD,IAEA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKG,UAAU,sCAAf,UACI,cAAC,IAAD,CAAOuX,OAAK,EAACC,KAAK,IAAIC,UAAWrL,KACjC,cAAC,IAAD,CAAOoL,KAAK,UAAUC,UAAWV,KACjC,cAAC,IAAD,CAAOS,KAAK,UAAUC,UAAWT,KACjC,cAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWR,KACjC,cAAC,IAAD,CAAOO,KAAK,cAAcC,UAAW9K,KACrC,cAAC,IAAD,CAAO6K,KAAK,cAAcC,UAAW3D,KACrC,cAAC,IAAD,CAAO0D,KAAK,UAAUC,UAAWX,KACjC,cAAC,IAAD,CAAOU,KAAK,oBAAoBC,UAAWP,QAE/C,cAAC,GAAD,Q,OCdGQ,OAxBf,WAaE,OACE,qBAAK1X,UAAU,WAAf,SAIE,cAAC,GAAD,OCTS2X,I,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhU,MAAK,YAAkD,IAA/CiU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAAS5G,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJ+C,SAAS8D,eAAe,SAM1BT,O","file":"static/js/main.f8df6e54.chunk.js","sourcesContent":["\n\n/**\n * use\n * import EventEmitter, {Event} from \"common/events/EventEmitter\";\n *\n * dispatch\n * EventEmitter.dispatch(Event.EVENT_EXAMPLE, {같이 넘길 파라메터 });\n *\n * subscribe\n * EventEmitter.subscribe(Event.EVENT_EXAMPLE, (options:any)=>{\n *  {같이 넘길 파라메터 }\n * });\n */\nexport class Event {\n\n\tpublic static ON_AUTH_STATE_CHANGED: string = \"onAuthStateChanged\";\n\tpublic static FB_START_LOGIN: string = \"fbStartLogin\";\n\tpublic static IS_APP_READY: string = \"isAppReady\";\n\tpublic static INSERT_PAGE: string = \"insertPage\";\n\tpublic static REPLACE_PAGE: string = \"replacePage\";\n\tpublic static GOTO_BACK: string = \"gotoBack\";\n\tpublic static RESET_PAGE: string = \"resetPage\";\n\tpublic static SHOW_ALERT: string = \"showAlert\";\n\tpublic static HIDE_ALERT: string = \"hideAlert\";\n\tpublic static INIT_AUDIO: string = 'initAudio';\n\tpublic static AUDIO_PLAY_PAUSE: string = 'audioPlayPause';\n\tpublic static AUDIO_STOP: string = 'audioStop';\n\tpublic static SENTENSE_PLAYING: string = 'sentensePlaying';\n\tpublic static SENTENSE_PAUSE: string = 'sentensePause';\n\tpublic static CONTROL_UI_UPDATE: string = 'controlUIUpdate';\n\tpublic static SET_BTN_PLAY_STATE: string = 'setBtnPlayState';// 외부에서 버튼 상태를 변경할때 발생\n\tpublic static CHANGE_BTN_PLAY_STATE: string = \"changeBtnPlayState\";// 버튼 자신이 변경되면 외부에 알리느라 발생\n\tpublic static SHOW_NOTI_MESSAGE: string = \"showNotiMessage\";\n\tpublic static PURCHASE_COMPLETE: string = \"purchaseComplete\";\n\tpublic static FREETIME_UPDATED: string = \"freetimeUpdated\";\n\tpublic static CLICK_HOTCLIP_THUMB: string = \"clickHotclipThumb\";\n\tpublic static SHOW_LOADING: string = \"showLoading\";\n\tpublic static HIDE_LOADING: string = \"hideLoading\";\n\tpublic static AUDIO_PLAY_COUNT: string = \"audioPlayClunt\";\n\tpublic static CHANGE_TPID: string = \"changeTPID\";\n\tpublic static SHOW_TOAST_MESSAGE: string = \"showToastMessage\";\n\n\n\tpublic events: any = {};\n\tpublic dispatch(event: string, data?: any): void {\n\t\tif (!this.events[event]) return;\n\t\tthis.events[event].forEach((callback: (arg0: any) => void) =>\n\t\t\tcallback(data)\n\t\t);\n\t}\n\tpublic subscribe(event: string, callback: any): void {\n\t\tif (!this.events[event]) this.events[event] = [];\n\t\tthis.events[event].push(callback);\n\t}\n\tpublic remove(event: string): void {\n\t\tif (this.events[event]) this.events[event] = null;\n\t}\n}\n\nexport default new Event();\n","import { atom, RecoilState } from \"recoil\";\n\n// export const config = {\n//     appid: \"com.kareui.caseteenglish\",\n//     inappIDs: {\n//         \"unlock01\": \"com.kareui.caseteenglish.unlock01\"\n//     }\n// }\n\nexport const isLoadingState = atom({\n    key: \"isLoadingState\",\n    default: false,\n})\n\n// // playControl detailPanel state\nexport const isCloseDetailPanelState = atom({\n    key: \"isCloseDetailPanelState\",\n    default: true,\n})\n\nexport const scriptModeState = atom({\n    key: \"scriptModeState\",\n    default: 'ek',\n})\n\nexport const sentenseRepeatIdxState: RecoilState<number> = atom({\n    key: \"sentenseRepeatIdxState\",\n    default: 9999,\n})\n\nexport const btnRepeatModeUpdateState: RecoilState<number> = atom({\n    key: \"btnRepeatModeUpdateState\",\n    default: 0,\n})\n\n// export const homeListSortState: RecoilState<string> = atom({\n//     key: \"homeListSortState\",\n//     default: 'reverse',\n// })\n// export const updateCntPlayState: RecoilState<number> = atom({\n//     key: \"updateCntPlayState\",\n//     default: 0,\n// })\n\n// export const wbIsOpenNavState = atom({\n//     key: \"wbIsOpenNavState\",\n//     default: false,\n// });\n\n// export const tpidState = atom({\n//     key: \"tpidState\",\n//     default: '',\n// })\n\n// export const cidState = atom({\n//     key: \"cidState\",\n//     default: '',\n// })\n\n// 강화훈련\nexport const isShowShadowingState = atom({\n    key: \"isShowShadowingState\",\n    default: false,\n})\n\nexport const printCourseIDState = atom({\n    key: \"printCourseIDState\",\n    default: '',\n})\n\n\n\n\nexport default {};","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isLoadingState } from \"../core/store\";\nconst Loading = () => {\n    const [isLoading, setIsLoading] = useRecoilState(isLoadingState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_LOADING, () => {\n            setIsLoading(true);\n        })\n        EventEmitter.subscribe(Event.HIDE_LOADING, () => {\n            setIsLoading(false);\n        })\n    }, []);\n    return (\n        <>\n            {\n                isLoading && <div className=\"loading-container\">\n                    <div className=\"lds-ellipsis\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            }\n        </>\n\n    );\n};\n\nexport default Loading;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { printCourseIDState } from '../core/store';\nconst printJSON = require('../resource/mainJSONPrint.json');\nconst PrintTable = () => {\n\n    const [printCourseID, setprintCourseID] = useRecoilState(printCourseIDState);\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n        // console.log('printJSONitem.courseID === printCourseID', item, item.info.courseID,'__', printCourseID)\n        if (item.info.courseID === printCourseID) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    // const tr = selectCourseJSON.list.map((item:any, i:number)=>{\n    //     return <div>{item.ko}, {item.en} </div>\n    // })\n    // console.log('printJSONitem1',selectCourseJSON)\n    return (\n        <div className=\"PrintTable\">\n            {\n                selectCourseJSON && <div>\n                    <div className=\"header\">\n                        <div className=\"row-right\">\n                            <button className=\"btn btn-border\" onClick={() => {\n                                setprintCourseID('');\n                            }}><i className=\"fas fa-arrow-left\"></i> 돌아가기</button>\n                            <button className=\"btn btn-border\" onClick={() => {\n                                // console.log((document as any).getElementById(\"script-print-table\"))\n                                // new TableExport((document as any).getElementById(\"script-print-table\"),{\n\n                                //     filename:'카셋회화훈련-인턴',\n                                //     formats:['xlsx'],\n                                // });\n                                (window as any).printScript('카셋회화훈련-인턴');\n                            }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                        </div>\n\n                    </div>\n                    <table id=\"script-print-table\">\n                        <thead>\n                            <tr >\n                                <td >일자</td>\n                                <td >No.</td>\n                                <td >한글</td>\n                                <td >영어</td>\n                                <td >확인</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tr}\n                            {/* <tr >\n                                <td rowSpan={3}>&nbsp;&nbsp;&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr> */}\n                        </tbody>\n                    </table>\n\n\n                </div>\n            }\n        </div>\n    );\n};\n\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className=\"tr-day\" >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n}\n\nexport default PrintTable;","import extend from 'deep-extend';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport { firebaseConfig } from \"../env\";\nimport EventEmitter, { Event } from \"../core/EventEmitter\";\n\n\n\nfirebase.initializeApp(firebaseConfig);\n\nclass FBase {\n    userInfo: any = 'loading';// loading인 경우 아예 정보 받기 전임\n    initUserInfoMerge: boolean = false;\n    userMoreInfo: {\n        email: string,\n        uid: string,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        buyCourses: string[],\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        doneSentense: string[],\n        historyClips: string[],\n    } = {\n            email: '',\n            uid: '',\n            repeatMode: '1',\n            buyCourses: [],\n            showClips: [],\n            keepClips: [],\n            keepSentense: [],\n            doneSentense: [],\n            historyClips: [],\n        };\n    initLogin() {\n        authService.onAuthStateChanged((user) => {\n\n            console.log('authService', user);\n\n            this.userInfo = user;\n\n            // 사용자 셋팅정보 조회\n            // 정보가 null인 경우 기본 정보 생성\n            // 있는경우 정보 덮어씌우기\n            if (this.userInfo) {\n\n                const docName = this.makeDocNameWithUserInfo();\n                console.log('tmplog_authService1', docName);\n                dbService.collection('userstatus').doc(docName).get().then((docs: any) => {\n                    console.log('tmplog_authService3');\n                    // console.log('docs.data()', docs.data());\n                    const data = docs.data();\n                    console.log('docs.data()', docName, data);\n                    if (data) {\n                        // data.uid = this.userMoreInfo.uid;\n                        console.log('docs.data()1');\n                        this.userMoreInfo = extend(this.userMoreInfo, data);\n                    } else {\n                        console.log('docs.data()2');\n                        // 최초 진입(데이터 생성)\n                        this.userMoreInfo = this.userMoreInfo;\n                        this.syncMoreInfo();\n                    }\n                    console.log('docs.data()-1');\n\n                    this.userMoreInfo.email = this.userInfo.email;\n                    this.userMoreInfo.uid = this.userInfo.uid;\n                    this.initUserInfoMerge = true;\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                }).catch(function (err) {\n                    // console.log('tmplog_authService4err', err);\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, null);\n                    // if (err.code == 'failed-precondition') {\n                    //     // Multiple tabs open, persistence can only be enabled\n                    //     // in one tab at a a time.\n                    //     // ...\n                    // } else if (err.code == 'unimplemented') {\n                    //     // The current browser does not support all of the\n                    //     // features required to enable persistence\n                    //     // ...\n                    // }\n                });\n                // dbService.collection('userstatus').get().then((docs: any) => {\n                //     let searchUserDocCnt = 0;// 사용자에 대한 문서가 여러개인경우 오류\n                //     docs.docs.forEach((doc: any) => {\n\n                //         const data = doc.data();\n                //         console.log('userMoreInfoa0---', data, data.uid, '-', this.userInfo.uid)\n                //         if (data.uid === this.userInfo.uid) {\n                //             searchUserDocCnt++;\n                //             console.log('userMoreInfoab', this.userMoreInfo, data);\n                //             // 현재 데이터 존재하는경우\n                //             this.userMoreInfo = extend(this.userMoreInfo, data);\n                //         } else {\n                //\n                //         }\n                //         EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n\n                //     })\n                //     // console.log('userMoreInfoac', searchUserDocCnt);\n                //     // // 최초 진입\n                //     // if (searchUserDocCnt === 0) {\n                //     //     // 최초 진입(데이터 생성)\n                //     //     this.userMoreInfo = extend(this.userMoreInfo, {\n                //     //         uid: this.userInfo.uid\n                //     //     });\n                //     //     // 저장\n                //     //     // dbService.collection('userstatus').add(this.userMoreInfo).then((res: any) => {\n                //     //     //     console.log('tmplog_dbsync', res)\n                //     //     // });\n                //     //     this.syncMoreInfo();\n                //     // }\n                //     // // 데이터 중복\n                //     // if (searchUserDocCnt > 1) {\n                //     //     alert('에러' + searchUserDocCnt)\n                //     // }\n                //     // console.log('userMoreInfoarr', this.userMoreInfo)\n                //     // EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                // });\n            } else {\n                console.log('tmplog_authService2');\n                console.log('userMoreInfoarr2', this.userMoreInfo)\n                EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n            }\n\n\n\n        });\n    }\n\n    isLogin() {\n        let r = true;\n        if (this.userInfo === null || this.userInfo === 'loading') {\n            r = false;\n        }\n        return r;\n    }\n    isAvailableBook(cid: string): 'available' | 'needLogin' | 'needPurchase' {\n\n        // 로그인이 안 된 경우\n        if (!this.isLogin()) {\n            return 'needLogin';\n        }\n        console.log('tmplog_this.userInfo', this.userMoreInfo)\n        // 구매 목록에 없는 경우\n        if (!this.userMoreInfo.buyCourses.includes(cid)) {\n            return 'needPurchase';\n        }\n        return 'available';\n    }\n    syncMoreInfo() {\n        console.log('docs.data()-sync');\n        // 유저 로그인 전이면\n        if (!this.userInfo || this.userInfo === '' || this.userInfo === 'loading') {\n            // alert(this.userInfo);\n            return;\n        }\n        // 유저 데이터를 불러오기 전이면\n        if (!this.initUserInfoMerge) return;\n\n        dbService.collection(\"userstatus\").doc(this.makeDocNameWithUserInfo()).set(this.userMoreInfo, { merge: true }).then(function () {\n            console.log(\"Document successfully written!\");\n        });\n    }\n    makeDocNameWithUserInfo() {\n        let id = this.userInfo.email.split('@')[0];\n        const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n        if (reg.test(id)) {\n            id = id.replace(reg, '');\n        }\n        id += 'mXCeNH6A5fjdrDfaOjDe';// 여유있게 자르기위해 랜덤 문자 추가\n        id = id.substr(0, 10);// 10자리로 자름\n        // console.log('this.userInfo.email', this.userInfo.email);\n        return id + this.userInfo.uid;\n    }\n    callLogin(emailPw: {\n        email: string,\n        pw: string,\n    }, callback: (userInfo: any) => void) {\n\n    }\n    sendPasswordResetEmail(email: string) {\n        var auth = firebase.auth();\n        auth.sendPasswordResetEmail(email).then(function () {\n            alert(email + '로 발송된 이메일을 확인 해 주세요.')\n        }).catch((error) => {\n            console.log(error);\n            alert(this.convertErrorMessage(error));\n        });\n    }\n    convertErrorMessage(error: any) {\n        const errorMessage: any = {\n            'auth/invalid-email': '올바른 이메일을 입력하세요.',\n            'auth/invalidNewPw': '입력한 비밀번호가 일치하지 않습니다.',\n            'auth/weak-password': '6자리 이상의 비밀번호를 입력하세요',\n            'auth/wrong-password': '비밀번호가 올바르지 않습니다.',\n            'auth/user-not-found': '해당 가입정보가 없습니다. 정보를 확인 또는 회원가입을 해주세요.',\n            'auth/email-already-in-use': '이미 가입된 이메일입니다.',\n\n        }\n        const convertMessage = errorMessage[error.code]\n        if (convertMessage) {\n            return convertMessage;\n        }\n        console.log(error);\n        return error.message;\n    }\n}\n\nexport default new FBase();\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","export const firebaseConfig = {\n    apiKey: \"AIzaSyBq__j-SvDbukmkLD5CaFo9rKa4706HHJk\",\n    authDomain: \"casetebook.firebaseapp.com\",\n    databaseURL: \"https://casetebook.firebaseio.com\",\n    projectId: \"casetebook\",\n    storageBucket: \"casetebook.appspot.com\",\n    messagingSenderId: \"863352106334\",\n    appId: \"1:863352106334:web:1a3de357b2edff427ef3cf\",\n    measurementId: \"G-0BQB2PPQBE\"\n};\n\n","import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n\nconst mainJSON = require('../resource/mainJSON.json');\nconst key = \"XDVl1SGxRn\";\nlet scrollingLazyTime: number = 0;\nlet scrollingTick: any = null;\nclass Data {\n    mainJSON: any = mainJSON;\n    topicJSON: any;\n    isSentensePressing: boolean = false;\n    public pageShadowingParam: {\n        sentenseEn: string,\n        sentenseKo: string,\n        sentenseIdx: number,\n        topicID: string,\n    } = {\n            sentenseEn: '',\n            sentenseKo: '',\n            sentenseIdx: -1,\n            topicID: '',\n        }\n\n\n    getRootPath() {\n        return '/';\n    }\n\n    // setParameter => gotoPage\n    gotoPage(inParam: string, inQuery: string) {\n        if (!inQuery || inQuery === '') {\n            window.location.href = '/';\n            return;\n        }\n        // alert('TODO:gotoPage');\n        window.location.href = `#/${inParam}?d=${inQuery}`;\n    }\n    // 코스 메인으로 가기\n    gotoCourseMainPage(cid: string) {\n        const resultItem = this.courseToMainJSON(cid);\n        this.gotoPage('CourseMain', resultItem.query);\n    }\n    // mainJson에서 해당 코스 목록 조회\n    courseToMainJSON(cid: string) {\n        return mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        });\n    }\n    // 이전/다음 가기\n    gotoNextPrev(idx: number, cid: string, dir: 'next' | 'prev') {\n        const resultItem = mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        })\n        if (idx === 0 && dir === 'prev') {\n            alert('이전 목록이 없습니다.(첫 번째 토픽)');\n            return;\n        }\n        if (idx === resultItem.item.length && dir === 'next') {\n            alert('마지막 목록 입니다.');\n            return;\n        }\n        const overIdx = dir === 'next' ? 1 : -1;\n        this.gotoPage('CoursePlay', resultItem.item[idx + overIdx].query);\n    }\n    setClipHistory(tpid: string) {\n\n        if (!fbase.userMoreInfo.historyClips) {\n            fbase.userMoreInfo.historyClips = [];\n        }\n\n        const arr = fbase.userMoreInfo.historyClips.filter((item: string) => {\n            // 동일 히스토리 존재하면 제거 \n            return item !== tpid;\n        })\n\n        arr.push(tpid);\n\n        fbase.userMoreInfo.historyClips = arr;\n        // debugger;\n        // appBridge.syncStorageData();\n        fbase.syncMoreInfo();\n    }\n    setSettingKeepClipSentense(\n        type1: 'clip' | 'sentense' | 'done',\n        type2: 'add' | 'remove',\n        value: any) {\n        console.log('setSettingKeepClipSentense', type1, type2, value);\n        let arr: string[] = [];\n        let newArr: string[] = [];\n        if (type1 === 'clip') {\n\n            arr = fbase.userMoreInfo.keepClips;\n        } else if (type1 === 'sentense') {\n            arr = fbase.userMoreInfo.keepSentense;\n        } else if (type1 === 'done') {\n            arr = fbase.userMoreInfo.doneSentense;\n        }\n        if (arr.includes(value)) {\n            // 포함되어있을때 삭제 케이스 \n            if (type2 === 'remove') {\n                // 삭제 \n                newArr = arr.filter((item, i) => {\n                    return item !== value;\n                });\n            }\n\n        } else {\n            // 불포함인데 포함 케이스 \n            if (type2 === 'add') {\n                // 포함 \n                arr.push(value)\n                newArr = JSON.parse(JSON.stringify(arr));\n            }\n\n        }\n\n        if (type1 === 'clip') {\n            fbase.userMoreInfo.keepClips = newArr;\n\n        } else if (type1 === 'sentense') {\n            fbase.userMoreInfo.keepSentense = newArr;\n\n        } else if (type1 === 'done') {\n            fbase.userMoreInfo.doneSentense = newArr;\n\n        }\n\n        fbase.syncMoreInfo();\n    }\n    decryptURL(text: string) {\n        try {\n            text = text.substring(7);\n            const bytes = CryptoJS.AES.decrypt(text, key);\n            return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n        } catch (err) {\n            console.error(err);\n            return;\n        }\n    }\n    numberWithCommas = (x: number) => {\n        let parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    }\n    showAlert(message: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: 'AlertBasic',\n            message: message,\n        });\n    }\n    showAlertModule(moduleName: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: moduleName\n        });\n    }\n    hideAlert() {\n        EventEmitter.dispatch(Event.HIDE_ALERT, {});\n    }\n    showBuyMessage({\n        courseID\n    }: {\n        courseID: string\n    }) {\n\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: \"AlertNoticeInapp\",\n            courseID: courseID,\n        })\n    }\n\n    showToastMessage(options: {\n        message: string,\n        mtime: number\n    }) {\n        EventEmitter.dispatch(Event.SHOW_TOAST_MESSAGE, options)\n    }\n    async getTopicJSON(cid: string, tpid: string) {\n        // this.topicJSON = await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {}).;\n        return await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {});\n    }\n    // sentense클릭동안 스크롤락 실행\n    sentensePressing() {\n        this.isSentensePressing = true;\n        scrollingLazyTime = 2000;// 2초\n        if (scrollingTick) {\n            clearInterval(scrollingTick);\n        }\n        scrollingTick = setInterval(() => {\n            scrollingLazyTime = scrollingLazyTime - 500;\n            if (scrollingLazyTime <= 0) {\n                this.isSentensePressing = false;\n                scrollingLazyTime = 0;\n                clearInterval(scrollingTick);\n            }\n        }, 500);\n    }\n    // 현재 화면이 스크롤링 중인가?\n    isScrolling(callback: (result: boolean) => void) {\n        const firstY = window.scrollY;\n        setTimeout(() => {\n            if (firstY === window.scrollY) {\n                callback(false);\n            } else {\n                callback(true);\n            }\n        }, 100);\n    }\n}\n\nexport default new Data();","import React from 'react';\nimport data from '../core/data';\nconst AlertBasic = () => {\n    return (\n        <div>\n            AlertBasic\n            <button onClick={() => {\n                data.hideAlert();\n            }}>close</button>\n        </div>\n    );\n};\n\nexport default AlertBasic;","import classnames from \"classnames\";\nimport QRCode from \"qrcode.react\";\nimport React, { useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n\n    MobileView\n} from \"react-device-detect\";\n// import core from '../core/Core';\nimport data from '../core/data';\n\nconst AlertBuyProduct = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n    // const [isQRInit, setIsQRInit] = useState(false);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    let price = '';\n\n\n\n\n\n    const courseInfoJSON = data.mainJSON.filter((item: any, i: number) => {\n        console.log('data.leftJSON', item.courseID, openParam.courseID)\n        return item.courseID === openParam.courseID;\n    })[0];\n\n    const qrurl = `https://qr.kakaopay.com/281006012180682200001379${courseInfoJSON.pricesCode[0]}`;\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 30 * 1000);\n    }\n\n    return (\n        <div className=\"AlertBuyProduct\">\n            <div className=\"header\">\n                <div className=\"title\">\n                    카카오페이 송금결제\n                </div>\n                <button className=\"btn btn-close\" onClick={() => {\n                    data.hideAlert();\n                }}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <div className=\"message\">\n                {courseInfoJSON.title}( {courseInfoJSON.prices[0]}원 )\n            </div>\n\n            <div className=\"step step1\">\n\n                <div className=\"step1-in\">\n                    <BrowserView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,<br></br>\n                                <small className=\"small\">카카오톡 송금 창 메세지 입력란에 <br></br>\n                            가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.</small>\n                            </li>\n                            <li className=\"qr-container\">\n                                {\n                                    stepCD > 0\n                                        ?\n                                        <QRCode value={qrurl} />\n                                        :\n                                        <div className=\"btn-create-qr\" onClick={() => {\n                                            setStepCD(1);\n\n                                        }}>\n                                            <div className=\"cover\">\n                                                <i className=\"fas fa-redo-alt\"></i>\n                                                <div className=\"desc\">송금코드생성</div>\n                                            </div>\n                                            <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                        </div>\n                                }\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </BrowserView>\n                    <MobileView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                            <li className=\"qr-container\">\n                                <a onClick={() => {\n                                    setTimeout(() => {\n                                        setStepCD(2);\n                                    }, 30 * 1000);\n                                }} className=\"btn-confirm\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </MobileView>\n                    {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n                </div>\n            </div>\n            <div className=\"step step2\">\n                {/* <div className=\"title\">STEP02-확인요청</div>\n                <div className=\"step2-in\">\n                    <button className={classnames([\"btn-confirm\",`stepCD-${stepCD}`])} onClick={() => {\n                        if(stepCD < 2){\n                            alert('송금코드 생성 > 카카오페이결제 > 결제 완료 후 승인요청을 해주세요.');\n                            return;\n                        }\n\n                    }}>승인요청</button>\n                </div> */}\n                <div className=\"notice\">\n                    문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n                <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                    if (stepCD < 2) {\n                        alert('결제 완료 후 승인요청을 해주세요.');\n                        return;\n                    }\n                    alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n\n                }}>승인요청</button>\n            </div>\n\n\n\n            {/* <button className=\"btn-confirm\" onClick={() => {\n                core.hideAlert();\n                core.insertPage(\"PageMenu\");\n            }}>구매 진행</button> */}\n\n        </div>\n    );\n};\n\nexport default AlertBuyProduct;","import React, { useEffect, useState } from 'react';\nimport AlertBasic from '../components/AlertBasic';\nimport EventEmitter, { Event } from '../core/EventEmitter';\n// import AlertNoticeInapp from '../components/AlertNoticeInapp';\nimport AlertBuyProduct from '../components/AlertBuyProduct';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n// import { sentenseRepeatIdxState } from '../core/store';\nimport data from '../core/data';\n\nlet openParam: any = null;\nconst Alert = () => {\n    const [moduleName, setModuleName] = useState('');\n    // const [updatePagePlaylist, setUpdatePagePlaylist] = useRecoilState(updatePagePlaylistState);\n    // const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_ALERT, (options: any) => {\n            openParam = options;\n            setModuleName(options.moduleName);\n            if (options.moduleName === 'AlertNoticeInapp') {\n                // setUpdatePagePlaylist(updatePagePlaylist + 1);\n                // setSentenseRepeatIdxState(9999);\n                // data.setCurrPlayBtnState('stop');\n            }\n\n        });\n        EventEmitter.subscribe(Event.HIDE_ALERT, (options: any) => {\n            setModuleName('');\n\n        });\n    }, [])\n\n    const AlertModule = (() => {\n\n        switch (moduleName) {\n            case 'AlertBasic':\n                return <AlertBasic key=\"AlertBasic\" />;\n                break;\n\n            case 'AlertBuyProduct':\n                return <AlertBuyProduct key=\"AlertBuyProduct\" openParam={openParam} />;\n                break;\n\n        }\n    })();\n    return (\n        <>\n            {\n                moduleName !== '' && <div className=\"view-Alert\">\n                    {AlertModule}\n                </div>\n            }\n        </>\n    );\n};\n\nexport default Alert;\n\n\n","import classnames from 'classnames';\nimport { padStart as _pad } from 'lodash';\nimport React from 'react';\nimport data from '../core/data';\n// import core from '../core/Core';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n// import fbase from '../fb/fbase';\n\nconst WCourseItem = ({\n    viewType,\n    itemJSON,\n    courseID,\n    idx,\n}: {\n    viewType: string,\n    itemJSON: any,\n    courseID: string,\n    idx: number,\n}) => {\n    // console.log('WCourseItem',viewType,itemJSON,idx);\n    if (viewType === 'movie') {\n        console.log('WCourseItem', itemJSON.tit);\n    }\n    const isAvailableBook = fbase.isAvailableBook(courseID); // needPurchase, available, needLogin\n\n\n    return (\n        <>\n            {\n                viewType === 'movie'\n                    ?\n                    <CItemMovie isAvailableBook={isAvailableBook} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItemMovie' + idx} />\n                    :\n                    <CItem isAvailableBook={isAvailableBook} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItem' + idx} />\n            }\n            {/* <CItem itemJSON={itemJSON} idx={idx} key={idx} /> */}\n        </>\n    );\n};\n\nconst CItemMovie = (\n    {\n        itemJSON,\n        courseID,\n        isAvailableBook,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isAvailableBook: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem movie\" onClick={() => {\n            // alert(itemJSON.query);\n\n            if (!isTrial && isAvailableBook !== 'available') {\n                // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                // if (process.env.NODE_ENV === 'development') {\n                //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n                //         moduleName: \"AlertBuyProduct\",\n                //         courseID: courseID,\n                //     });\n                // }\n\n                // return;\n\n                if (isAvailableBook === 'needLogin') {\n                    data.showToastMessage({\n                        message: \"로그인이 필요한 서비스입니다.\",\n                        mtime: 3000\n                    });\n                    EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                        from: \"buyProduct\",\n                        courseID: courseID,\n                    });\n                } else if (isAvailableBook === 'needPurchase') {\n                    // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct\",\n                        courseID: courseID,\n                    });\n                }\n                return;\n            }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {isAvailableBook}\n                {isTrial && isAvailableBook !== 'available' && <div className=\"mark-trial\">\n                    미리보기\n                </div>}\n                <img className={classnames([\"img\", { trial: isTrial }])} src={`/resource/courses/${courseID}/thumb/a${idxPad}.jpg`}></img>\n                <div className=\"sceneno\">\n                    <div className=\"t1\">DAY</div>\n                    <div className=\"t2\">{idxPad}</div>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n\n        </li>\n    );\n}\nconst CItem = (\n    {\n        itemJSON,\n        courseID,\n        isAvailableBook,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isAvailableBook: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem normal\" onClick={() => {\n            // alert(itemJSON.query);\n\n            if (!isTrial && isAvailableBook !== 'available') {\n                // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                // if (process.env.NODE_ENV === 'development') {\n                //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n                //         moduleName: \"AlertBuyProduct\",\n                //         courseID: courseID,\n                //     });\n                // }\n\n                // return;\n\n                if (isAvailableBook === 'needLogin') {\n                    data.showToastMessage({\n                        message: \"로그인이 필요한 서비스입니다.\",\n                        mtime: 3000\n                    });\n                    EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                        from: \"buyProduct\",\n                        courseID: courseID,\n                    });\n                } else if (isAvailableBook === 'needPurchase') {\n                    // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct\",\n                        courseID: courseID,\n                    });\n                }\n                return;\n            }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {isTrial && isAvailableBook !== 'available' && <div className=\"mark-trial\">\n                    미리보기\n                </div>}\n\n                <div className=\"sceneno\">\n                    <span className=\"t1\">DAY</span>\n                    <span className=\"t2\">{idxPad}</span>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n\n        </li>\n    );\n}\nexport default WCourseItem;","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport WCourseItem from './WCourseItem';\nconst WCourse = ({\n    json,\n    parentName,\n}: {\n    json: any\n    parentName: string,\n}) => {\n    let viewType = 'normal';\n    const courseID = json.courseID;\n    const topics = json.item.map((item2: any, i2: number) => {\n        if (json.itemViewType) {\n            viewType = json.itemViewType;\n        }\n        return <WCourseItem\n            viewType={viewType}\n            itemJSON={item2}\n            courseID={courseID}\n            idx={i2}\n            key={courseID + i2}\n        />\n\n    })\n    const isShowTitle = parentName === 'CourseMain' ? false : true;\n    const [isHide, setIsHide] = useState(parentName === 'CourseMain' ? false : true);\n    return (\n        <div className=\"Course\">\n            {\n                //\n                isShowTitle && <h3 className=\"title\" onClick={() => {\n                    setIsHide(!isHide);\n                }}>\n                    <Tags str={json.tags} key={courseID} />\n                    {\n                        isHide ? <i className=\"fas fa-plus i-icon\"></i> : <i className=\"fas fa-minus i-icon\"></i>\n                    }\n                    {json.title}\n                    <span className=\"badge\">{json.item.length}</span>\n                </h3>\n            }\n            <ul className={classnames(['slideup', { \"hide\": isHide }])}>\n                {!isHide && topics}\n            </ul>\n\n        </div>\n    );\n};\n\n\nconst Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WCourse;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React from 'react';\nimport data from '../core/data';\nimport fbase from '../fb/fbase';\n\nlet uniqCnt = 0;\nconst PageHome = () => {\n    // data.topicMainJSON = topicMainJSON;\n    const course1 = data.mainJSON.map((item1: any, i: number) => {\n        return <CourseItem json={item1} key={uniqCnt++} />\n    });\n    return (\n        <div className=\"PageHome\">\n            {/* <div className=\"notice\">\n                안녕하세요. 해당 서비스를 만든 개발자입니다.<br></br>\n                부득이하게 서버 운영을 위해 전체 코스는 <br></br>소정의 비용을 받고 있습니다. <br></br>\n                이용의 개선점이나 불편함은 언제든 메일로 알려주세요. <br></br>\n                <a href=\"mailto:dev@casete.in\">dev@casete.in</a>\n            </div> */}\n\n            <ul className=\"course-list\">\n                {course1}\n            </ul>\n        </div>\n    );\n};\n\nconst CourseItem = ({\n    json\n}: {\n    json: any\n}) => {\n    const isOwner = fbase.userMoreInfo.buyCourses.includes(json.courseID); // TODO\n    // const isOwner: boolean = true;\n\n    return (\n        <>\n\n            <li className=\"course-item\" onClick={() => {\n                data.gotoPage('CourseMain', json.query);\n            }}>\n                <div className={classnames([\"cover-img\", css`\n                background-image: url(\"${data.getRootPath()}resource/courses/${json.courseID}/cover.jpg\");\n            `])}>\n                </div>\n                <div className=\"info\">\n                    <h3>{json.title}</h3>\n                    <div className=\"info-sub\">\n                        <div className=\"course-num\">{json.item.length}개 코스</div>\n                        <Tags str={json.tags} key={json.courseID} />\n                        <div className=\"btns-func\">\n                            {data.numberWithCommas(parseInt(json.prices[0]))}\n                            {\n                                isOwner && <span>구매완료</span>\n                            }\n                        </div>\n\n                    </div>\n\n\n                </div>\n            </li>\n        </>\n\n    )\n}\n\nexport const Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default PageHome;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport qs from 'qs';\nimport React, { useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport WCourse from '../components/WCourse';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { printCourseIDState } from '../core/store';\nimport fbase from '../fb/fbase';\nimport { Tags } from './PageHome';\n\nconst selfName = \"CourseMain\";\nconst CourseMain = ({\n    location\n}: {\n    location: any\n}) => {\n    // const query: any = qs.parse(location.search, {\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [render, setRender] = useState(0);\n    const d = location.search.substring(3);\n    const decryptQuery = data.decryptURL(d);\n    const cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n    EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n        setRender(Math.random());\n    });\n    return (\n        <div>\n            {\n                cid\n                    ?\n                    <CourseMainList cid={cid} />\n                    :\n                    <div>\n                        없는 경로 입니다.<br></br>\n                        <button onClick={() => {\n                            data.gotoPage('/', '')\n                        }}>메인페이지로 돌아가기</button>\n                    </div>\n            }\n        </div>\n    );\n};\n\nconst CourseMainList = ({\n    cid\n}: {\n    cid: string\n}) => {\n    const setprintCourseID = useSetRecoilState(printCourseIDState);\n    const mainJSONFilter = data.mainJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    const courseItemListJSON = mainJSONFilter[0];\n    const isOwner = fbase.userMoreInfo.buyCourses.includes(courseItemListJSON.courseID);\n\n    return (\n        <div className=\"CourseMainList\">\n            <div className={css`height:20px;`}></div>\n            <div className=\"contents\">\n                <div className=\"course-item\">\n                    <div className={classnames([\"cover-img\", css`\n                        background-image: url(\"${data.getRootPath()}resource/courses/${courseItemListJSON.courseID}/cover.jpg\");\n                    `])}>\n                    </div>\n                    <div className=\"info\">\n                        <h3>{courseItemListJSON.title}</h3>\n                        <div className=\"info-sub\">\n                            <div>{courseItemListJSON.item.length}개 코스</div>\n                            <div className=\"tags\">\n                                <Tags str={courseItemListJSON.tags} key={courseItemListJSON.courseID} />\n                            </div>\n                            {\n                                isOwner\n                                    ?\n                                    <div>구매완료</div>\n                                    :\n                                    <button className=\"btn btn-border\">구매 1,300원</button>\n                            }\n                        </div>\n\n\n                    </div>\n                </div>\n                <div className=\"list-header\">\n                    <div className=\"list-info\">53개 코스</div>\n                    <div className=\"funcs\">\n                        <button className=\"btn\" onClick={() => {\n                            // alert(courseItemListJSON.courseID)\n                            setprintCourseID(courseItemListJSON.courseID);\n                        }}><i className=\"fas fa-table\"></i> 엑셀 & 프린트</button>\n                    </div>\n\n                </div>\n                {cid && <WCourse json={courseItemListJSON} parentName={selfName} />}\n            </div>\n        </div>\n    );\n}\n\nexport default CourseMain;","import EventEmitter, { Event } from \"../core/EventEmitter\";\n\nexport type TLivePlayInfo = {\n    idx?: number | null,// null이면 실행 안하는 중\n    totalIdx?:number,\n    src?: string,\n    json?: any,\n    st?: number,\n    et?: number,\n    callback?: ()=>void,\n    repeat?:number,\n    interval?: number,\n    speed?: number,\n    repeatCnt?: number,\n    allplay?: boolean,// 전체듣기\n    // allplayModoshi?: boolean,// 전체반복\n}\nlet audioTimeArr:number[];\nclass ZZAudioProgram {\n    get zzaudio() {\n        return (window as any).zzaudio;\n    }\n    livePlayInfo:TLivePlayInfo = {\n        idx: null,\n        totalIdx: 0,\n        src: '',\n    };\n    presetSrc(src:string){\n        this.livePlayInfo.src = src;\n        // this.zzaudio.presetSrc(src);\n    }\n    play(param:TLivePlayInfo){\n        const that = this;\n        this.livePlayInfo = Object.assign(this.livePlayInfo,param)\n\n        console.log('livePlayInfojson',this.livePlayInfo.json)\n        const idx = this.livePlayInfo.idx = this.livePlayInfo.idx || 0;\n        audioTimeArr = this.livePlayInfo.json.sentense[idx].timeen.split('|');\n        // this.livePlayInfo.repeatCnt = param.repeat;\n        this.livePlayInfo.callback = this.playComplete.bind(that);\n        this.livePlayInfo.st = audioTimeArr[0];\n        this.livePlayInfo.et = audioTimeArr[1];\n        if( param.repeat !== 9999 ){\n            if(this.livePlayInfo.repeatCnt)this.livePlayInfo.repeatCnt --;\n        }\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE,idx)\n        // EventEmitter.dispatch(Event.SENTENSE_PLAYING,idx)\n        this.zzaudio.play(this.livePlayInfo);\n    }\n    pause(){\n        this.livePlayInfo.idx = null;\n        this.livePlayInfo.allplay = false;\n        this.livePlayInfo.repeat = 0;\n        this.livePlayInfo.repeatCnt = 0;\n        // EventEmitter.dispatch(Event.SENTENSE_PAUSE,this.livePlayInfo.idx)\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE,this.livePlayInfo.idx)\n        this.zzaudio.pause();\n    }\n\n    async playComplete(){\n        // debugger;\n        // console.log('repeatCnt',livePlayInfo.repeatCnt)\n        //\n\n        const currentSoundTime = (audioTimeArr[1] - audioTimeArr[0]);\n        const intervalTime = (() => {\n            const settingInterval:any = this.livePlayInfo.interval;\n            if (settingInterval === 9999) {\n                return currentSoundTime;// 문장길이 +1초\n            } else {\n                return settingInterval * 1000;// 설정타임\n            }\n        })();\n        if(this.livePlayInfo.allplay || this.livePlayInfo.repeat === 9999){\n            await delay(intervalTime);\n        }\n\n\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE,this.livePlayInfo.idx)\n        console.log('allplay',this.livePlayInfo);\n        this.livePlayInfo.repeatCnt = this.livePlayInfo.repeatCnt || 0;\n        if(this.livePlayInfo.repeatCnt > 0){\n            // this.livePlayInfo.repeat = this.livePlayInfo.repeatCnt;\n            console.log('play-trigger1',this.livePlayInfo);\n            this.play(this.livePlayInfo);\n            return;\n        }\n        if(this.livePlayInfo.allplay){\n            // debugger;\n            // 다음인덱스\n            const idx = this.livePlayInfo.idx || 0;\n\n            if(this.livePlayInfo.totalIdx){\n                this.livePlayInfo.idx = idx +1;\n                // 끝에 도달\n                if(this.livePlayInfo.idx >= this.livePlayInfo.totalIdx){\n                    this.livePlayInfo.idx = 0;\n                }\n            }\n\n            // 반복 cnt복원\n            this.livePlayInfo.repeatCnt = this.livePlayInfo.repeat;\n            console.log('play-trigger2',this.livePlayInfo);\n            this.play(this.livePlayInfo);\n            return;\n        }\n        function delay(ms:number):Promise<void> {\n            return new Promise<void>(resolve => {\n              setTimeout(() => {\n                console.log(`${ms} 밀리초가 지났습니다.`);\n                resolve()\n              }, ms);\n            });\n          }\n        // if(repeatCnt > 0){\n        //     this.play();\n        //     param.repeatCnt\n        // }\n    }\n\n}\n\n\nexport default new ZZAudioProgram();","import React from 'react';\n\nconst Equalizer = () => {\n    return (\n        <div className=\"equalizer\">\n            <span className=\"eq1\"></span>\n            <span className=\"eq2\"></span>\n            <span className=\"eq3\"></span>\n        </div>\n    );\n};\n\nexport default Equalizer;","import React from 'react';\n\nconst LoadingDom = () => {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"lds-ellipsis\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingDom;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\nlet sentense = \"\";\nlet sentenseSplit: string[] = [];\nlet correctArr: string[] = [];// 답안지\nlet shuffleWords: TWord[] = [];\n\nconst MDictation = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    if (sentense !== sentenseEn) {\n        sentense = sentenseEn;\n        sentenseSplit = sentense.split(' ');\n        correctArr = sentenseSplit.slice(0);// 답안지\n        shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n            return {\n                word: item,\n                oriIdx: i,\n            }\n        }));\n    }\n\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const words = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('Wrong~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('Complete!!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    return (\n        <div className=\"MDictation\">\n            <h2>섀도잉 & 딕테이션</h2>\n            {/* <div>\n                {sentense}\n            </div> */}\n\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            <div className=\"sentenseKo\">\n                {sentenseKo}\n            </div>\n            <div className=\"words\">\n                {!isComplete && words}\n            </div>\n            <div className=\"ditaction-func\">\n                <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>Hint</button>\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>Reset</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"message-box\">\n                    <div>\n                        <div>{message}</div>\n                        {message.substr(0, 8) === 'Complete' && <div className=\"lets-shadowing\">Let's shadowing!!</div>}\n                    </div>\n\n                </div>\n            </div>}\n        </div>\n    );\n};\n\nexport default MDictation","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\n// import appBridge from './core/AppBridge';\nimport data from '../core/data';\n// import lang from \"./core/i18n\";\nimport { isShowShadowingState } from '../core/store';\nimport Equalizer from './Equalizer';\nimport MDictation from './MDictation';\n\nconst selfName = 'PageShadowing';\nlet temprepeatMode: any;\nconst PageShadowing = () => {\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    useEffect(() => {\n        // temprepeatMode = appBridge.settingInfo.repeatMode;\n        // appBridge.settingInfo.repeatMode = '1';\n        // data.setCurrPlayBtnState('play');\n        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n\n        // 아이폰에서 푸터가 안나타나서 강제로 스크롤한번\n        (window as any).scrollTo(0, 10);\n        setTimeout(() => {\n            (window as any).scrollTo(0, 0);\n        }, 1000)\n\n        return () => {\n            // data.setCurrPlayBtnState('stop');\n        }\n    }, []);\n    return (\n        <div className=\"PageShadowing\">\n            {/* <PageHeader parentSelf={selfName} /> */}\n            {/* <h2>Shadowing & Dictation</h2> */}\n            <button onClick={() => {\n                ZZAudioProgram.pause();\n                setIsShowShadowing(false);\n            }} className=\"btn btn-close\">\n                <i className=\"fas fa-times\"></i>\n            </button>\n            <MDictation\n                sentenseEn={data.pageShadowingParam.sentenseEn}\n                sentenseKo={data.pageShadowingParam.sentenseKo}\n            />\n            <ControlBtns />\n        </div>\n    );\n};\n\nconst ControlBtns = () => {\n    const [isPlay, setIsPlay] = useState(true);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    ZZAudioProgram.livePlayInfo.interval = interval;\n    ZZAudioProgram.livePlayInfo.speed = speed;\n    // data.playerSetting.interval = interval;\n    // data.playerSetting.speed = speed;\n    const isCheck = false;\n    // const [isCheck, setIsCheck] = useState((() => {\n    //     return appBridge.settingInfo.doneSentense.includes(`${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`);\n    // })());\n\n    const checkClick = (tf: boolean) => {\n        // setIsCheck(tf);\n\n        // const makeKey = `${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`;\n\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     data.pageShadowingParam.sentenseEn\n        // );\n\n    }\n    return (\n        <div className={`func-setting`}>\n            <div className=\"row\">\n                <div className=\"col1\">속도</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 1 }])}\n                        onClick={() => {\n                            setSpeed(1);\n                        }}>x1</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.9 }])}\n                        onClick={() => {\n                            setSpeed(0.9);\n                        }}>x0.9</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.8 }])}\n                        onClick={() => {\n                            setSpeed(0.8);\n                        }}>x0.8</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.7 }])}\n                        onClick={() => {\n                            setSpeed(0.7);\n                        }}>x0.7</button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col1\">간격</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 0 }])}\n                        onClick={() => {\n                            setInterval(0);\n                        }}>0s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1 }])}\n                        onClick={() => {\n                            setInterval(1);\n                        }}>1s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1.5 }])}\n                        onClick={() => {\n                            setInterval(1.5);\n                        }}>1.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2 }])}\n                        onClick={() => {\n                            setInterval(2);\n                        }}>2s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2.5 }])}\n                        onClick={() => {\n                            setInterval(2.5);\n                        }}>2.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 9999 }])}\n                        onClick={() => {\n                            setInterval(9999);\n                        }}>문장길이</button>\n                </div>\n            </div>\n\n\n            <div className=\"footer\">\n                {\n                    isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // data.setCurrPlayBtnState('stop', 'a1');\n                        // appBridge.settingInfo.repeatMode = temprepeatMode;\n                        setIsPlay(false);\n                        ZZAudioProgram.pause();\n                    }}><Equalizer /><span className=\"txt\">Stop</span></button>\n                }\n                {\n                    !isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // temprepeatMode = appBridge.settingInfo.repeatMode;\n                        // appBridge.settingInfo.repeatMode = '1';\n                        // data.setCurrPlayBtnState('play');\n                        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n                        setIsPlay(true);\n                        ZZAudioProgram.play({\n                            idx: data.pageShadowingParam.sentenseIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // totalIdx: totalIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // src: audioSrc, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            repeat: 9999,\n                            repeatCnt: 9999,\n                            allplay: false,\n                        });\n\n                    }}><i className=\"fas fa-retweet\"></i><span className=\"txt\">Play</span></button>\n                }\n\n                {/* <button className=\"btn btn-bookmark\">\n                    {isCheck\n                        ?\n                        <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                            checkClick(false);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                        :\n                        <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                            checkClick(true);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                    }\n                </button> */}\n            </div >\n\n        </div >\n    );\n}\n\nexport default PageShadowing;","import animateScrollTo from 'animated-scroll-to';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Equalizer from '../components/Equalizer';\nimport LoadingDom from '../components/LoadingDom';\nimport PageShadowing from '../components/PageShadowing';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport {\n    btnRepeatModeUpdateState,\n    isCloseDetailPanelState,\n\n    isShowShadowingState, scriptModeState\n} from \"../core/store\";\nimport fbase from '../fb/fbase';\n\n// let scriptMode = 'ek';\nlet audioSrc: string = '';\nlet idx: number;\nconst CoursePlay = ({\n    location\n}: {\n    location: any\n}) => {\n    // const query:any = qs.parse(location.search, {\n    //     charset: 'iso-8859-1',\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [isCheckedAuth, setisCheckedAuth] = useState(false);\n    const isShowShadowing = useRecoilValue(isShowShadowingState);\n\n    useEffect(() => {\n\n        // 이게먼저호출될지 userInfo가 먼저로드될지 몰라 아래처럼 구성\n        // data.setClipHistory(tpid);\n        // firebase데이터 로드해서 구성완료 후에 topic history Sync\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            setisCheckedAuth(true);\n\n            data.setClipHistory(tpid);\n\n        });\n\n\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n\n            // 화면 프레싱중이 아닌경우\n            if (!data.isSentensePressing) {\n                // 스크롤링 중 아닌경우\n                data.isScrolling((result: boolean) => {\n                    // SentenseItem num-${idx}\n                    const $el = (document as any).querySelector(`.SentenseItem.num-${idx}`);\n                    const y = ($el) ? $el.offsetTop : null;\n                    if (y === null) return;\n                    // if (!result) core.scrollTo(y, '.view-Topic');\n                    console.log('AudioProgram.livePl', result, ZZAudioProgram.livePlayInfo.allplay);\n                    if (!result && ZZAudioProgram.livePlayInfo.allplay) {\n                        animateScrollTo(y - 200, {\n                            elementToScroll: (document as any).querySelector('html')\n                        });\n                    }\n                })\n            }\n\n\n        });\n\n\n\n\n        return () => {\n\n        }\n    }, []);\n\n    // ** qs같은 파서를 쓰면 암호화 정보에 +가 망가진다\n    const [isData, setisData] = useState(false);\n    const search = window.location.search;\n    console.log('decp search: ', search)\n    const d = search.substring(3);// ?d=을 제외한 나머지\n    const decryptQuery = data.decryptURL(d);\n    const cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n    const tpid = (decryptQuery && decryptQuery.tpid) ? decryptQuery.tpid : '';\n    idx = decryptQuery.idx;\n    audioSrc = `./resource/courses/${cid}/topics/${tpid}/mm.mp3`;\n    useEffect(() => {\n        ZZAudioProgram.presetSrc(audioSrc)\n    }, [])\n    console.log(d, decryptQuery, cid, tpid);\n    const topicJSON = data.getTopicJSON(cid, tpid).then((result: any) => {\n        data.topicJSON = result.data;\n        ZZAudioProgram.livePlayInfo.json = data.topicJSON;\n        setisData(true);\n    });\n\n    // 회원정보 체크가 끝나고 렌더인 경우 퍼미션 체크 \n    if (isCheckedAuth) {\n        const isOwner = fbase.userMoreInfo.buyCourses.includes(cid);\n        const isTrial = data.courseToMainJSON(cid)[idx] && data.courseToMainJSON(cid)[idx].isTrial === true;\n        // 트라이얼도 아니고 오너도 아니다 \n        if (!isTrial && !isOwner) {\n            alert('로그인 또는 구매 후 이용가능한 페이지 입니다.');\n            data.gotoCourseMainPage(cid);\n        }\n    }\n    // console.log('sssdecryptQuery', isCheckedAuth);\n    // alert(isShowShadowing);\n    return (\n        <>\n            {\n                isCheckedAuth\n                    ?\n                    <div className=\"CoursePlay\">\n                        {\n                            isData\n                                ?\n                                <div>\n                                    {\n                                        (cid && tpid)\n                                            ?\n                                            <CoursePlayList cid={cid} tpid={tpid} />\n                                            :\n                                            <div>\n                                                없는 경로 입니다.<br></br>\n                                                <button onClick={() => {\n                                                    data.gotoPage('/', '')\n                                                }}>메인페이지로 돌아가기</button>\n                                            </div>\n                                    }\n                                </div>\n                                :\n                                <div>loading...</div>\n                        }\n                        {isShowShadowing && <PageShadowing />}\n                    </div>\n                    :\n                    <LoadingDom />\n            }\n        </>\n\n\n    );\n};\n\nconst CoursePlayList = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    return (\n        <div>\n            {/* {cid} */}\n            <TopicCover cid={cid} tpid={tpid} />\n            <div className=\"container-playlist\">\n                <PlayLists cid={cid} tpid={tpid} />\n                <GotoNextPrev cid={cid} tpid={tpid} />\n                {/* <GotoFullScript topicID={data.currJSON.id} /> */}\n            </div>\n            <PlayerControl tpid={tpid} />\n        </div>\n    );\n}\n\nconst GotoNextPrev = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    return (<ul className=\"GotoNextPrev\">\n        <li\n            onClick={() => {\n                data.gotoNextPrev(idx, cid, 'prev');\n            }}\n            className=\"btn-list prev\"><i className=\"far fa-arrow-alt-circle-left icon\"></i>이전목록</li>\n        <li\n            onClick={() => {\n                data.gotoCourseMainPage(cid);\n            }}\n            className=\"btn-list list\"><i className=\"fas fa-list-ul icon\"></i>전체목록</li>\n        <li\n            onClick={() => {\n                data.gotoNextPrev(idx, cid, 'next');\n            }}\n            className=\"btn-list next\">다음목록<i className=\"far fa-arrow-alt-circle-right icon\"></i></li>\n    </ul>);\n}\n\nconst TopicCover = ({\n    cid,\n    tpid\n}: {\n    cid: string,\n    tpid: string\n}) => {\n    // const info = data.currJSON.json.info;\n    // const tpid = useRecoilValue(tpidState);\n    // const cid = useRecoilValue(cidState);\n    // const [isKeep, setIsKeep] = useState((() => {\n    //     return fbase.userMoreInfo.keepClips.includes(tpid);\n    // })());\n\n    const courseToMainJSON = data.courseToMainJSON(cid);\n    let itemViewType = 'dialog';// movie, dialog\n    if (courseToMainJSON && courseToMainJSON.itemViewType) {\n        itemViewType = courseToMainJSON.itemViewType;\n\n    }\n    return (\n        <div className={classnames([\"TopicCover\", itemViewType, css`\n            background-image: url(\"${data.getRootPath()}resource/courses/${cid}/thumb/${tpid.substr(0, 4)}.jpg\");\n        `])}>\n            {\n                itemViewType === 'movie'\n                    ?\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> <br></br>{tpid.substr(1, 3)}\n                        </div>\n                        <div className=\"col-right\">\n\n                        </div>\n                    </div>\n                    :\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> {tpid.substr(1, 3)}\n                        </div>\n                    </div>\n            }\n\n\n\n        </div>\n    )\n}\n\nconst PlayLists = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n            console.log('rrrrrrender-idx', idx)\n            // setActiveIdx(idx);\n            setRender(render + Math.random());\n        });\n        // EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n        //     setActiveIdx(-1);\n        // });\n        return () => {\n            EventEmitter.remove(Event.CONTROL_UI_UPDATE);\n            EventEmitter.remove(Event.SENTENSE_PAUSE);\n        };\n    }, []);\n\n    const isCloseDetailPanel = useRecoilValue(isCloseDetailPanelState);\n    const [render, setRender] = useState(0);\n    // const [activeIdx, setActiveIdx] = useState(-1);\n\n    const sentense = data.topicJSON.sentense;\n    const Component = sentense.map((item: any, i: number) => {\n        return <SentenseItem\n            idx={i}\n            totalIdx={sentense.length}\n            cid={cid} tpid={tpid}\n            renderCnt={render}\n            // isActive={activeIdx === i}\n            json={item}\n            key={`sentense${i}`}\n        />;\n    });\n    // console.log('tmplog_fbase.userMoreInfo', fbase.userMoreInfo)\n    // const [forceRender, setForceRender] = useState(0);\n    // callModeChange = () => {\n    //     setForceRender(forceRender + 1);\n    // }\n    console.log('rrrrrrender-ddd')\n    return (\n        <div className={classnames([\"PlayLists\", css`\n            padding-bottom:${isCloseDetailPanel ? 30 : 267}px;\n        `])}>\n            {Component}\n        </div>\n    )\n}\n\nconst SentenseItem = ({\n\n    // isActive = false,\n    renderCnt,\n    json,\n    idx,\n    totalIdx,\n    cid,\n    tpid,\n}: {\n\n    // isActive: boolean,\n    renderCnt: number,\n    json: any,\n    idx: number,\n    totalIdx: number,\n    cid: string,\n    tpid: string,\n}) => {\n    console.log('rrrrrrender renderCnt', ZZAudioProgram.livePlayInfo.idx);\n    const [isOpenDesc, setIsOpenDesc] = useState(false);\n    const [isGlassMode, setIsGlassMode] = useState(false);\n    const scriptMode = useRecoilValue(scriptModeState);\n    const [isCheck, setIsCheck] = useState(fbase.userMoreInfo.doneSentense.includes(`${tpid}_${idx}`));\n\n    const checkClick = (tf: boolean) => {\n\n        if (!fbase.isLogin()) {\n            data.showToastMessage({\n                message: \"로그인이 필요한 서비스입니다.\",\n                mtime: 3000\n            })\n            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                from: \"buyProduct\",\n                courseID: json.courseID,\n            });\n            return;\n        }\n        setIsCheck(tf);\n\n        const makeKey = `${tpid}_${idx}`;\n\n        data.setSettingKeepClipSentense(\n            'done',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     json.en\n        // );\n\n    }\n    const isActive = idx === ZZAudioProgram.livePlayInfo.idx ? true : false;\n    const words = json.words;\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    // console.log('jsonjsonjson',json);\n    // const timeArr = json.timeen.split('|');\n    // const isOnePlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999)?false:true;\n    const isInfinityPlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999) ? true : false;\n    const playClick = () => {\n        ZZAudioProgram.play({\n            idx: idx,\n            totalIdx: totalIdx,\n            src: audioSrc,\n            repeat: 1,\n            repeatCnt: 1,\n            allplay: false,\n        });\n    }\n    return (\n        <div onTouchStart={() => {\n            data.sentensePressing();\n        }} className={classnames([`SentenseItem num-${idx}`, { active: isGlassMode }, { active: isActive }])}>\n\n            <div className={classnames([\"item-sound\", { active: isActive }])}>\n                <div className=\"item-main\">\n                    <div className=\"col-left\" onClick={() => {\n                        playClick();\n                        data.sentensePressing();\n                        // data.setCurrPlayBtnState('stop', 'a4');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                        // setTimeout(() => {\n                        //     // 1개 반복\n                        //     playOneItem();\n                        // })\n\n                    }}>\n                        <ItemCnt idx={idx} />\n                        <div>\n                            {\n                                isGlassMode\n                                    ?\n                                    <>\n                                        <div className=\"title-en\">{json.en}</div>\n                                        <div className=\"title-ko\">{json.ko}</div>\n                                    </>\n                                    :\n                                    <>\n                                        {['ek', 'e0'].includes(scriptMode) && <div className=\"title-en\">{json.en}</div>}\n                                        {['_k'].includes(scriptMode) && <div className=\"title-en_\">{json.en_}</div>}\n                                        {['0k', '00'].includes(scriptMode) && <div className=\"title-en_0\">{json.en_0}</div>}\n                                        {['00', 'e0'].includes(scriptMode) && <div className=\"title-ko_0\">{json.ko_0}</div>}\n                                        {['_k', 'ek', '0k'].includes(scriptMode) && <div className=\"title-ko\">{json.ko}</div>}\n                                    </>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-right\">\n                        {/* {idx} */}\n\n\n                    </div>\n                </div>\n                <div className=\"item-bottom\">\n                    <div>\n                        <div className=\"col\">\n                            <button onClick={() => {\n                                // data.setCurrPlayBtnState('stop', 'a3');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // setTimeout(() => {\n                                //     // 1개 반복\n                                //     playOneItem();\n                                // })\n                                playClick();\n                            }} className=\"btn\">\n                                <i className=\"fas fa-volume-up\">\n                                    <span className=\"i-label\">듣기</span>\n                                </i>\n                            </button>\n                            <button className=\"btn\">\n                                {\n                                    isInfinityPlay ?\n                                        <div className=\"stop-repeat\" onClick={() => {\n\n                                            ZZAudioProgram.pause();\n                                        }}>\n                                            <Equalizer />\n                                            <span className=\"i-label\">반복종료</span>\n                                        </div>\n                                        :\n                                        <div onClick={() => {\n\n                                            ZZAudioProgram.play({\n                                                idx: idx,\n                                                totalIdx: totalIdx,\n                                                src: audioSrc,\n                                                repeat: 9999,\n                                                repeatCnt: 9999,\n                                                allplay: false,\n                                            });\n                                        }} >\n                                            <i className=\"fas fa-retweet\"></i><span className=\"i-label\">무한반복</span>\n                                        </div>\n                                }\n                                {/* {!(sentenseRepeatIdx === idx) && <i onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a2');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                    setTimeout(() => {\n                                        temprepeatMode = fbase.userMoreInfo.repeatMode;\n                                        fbase.userMoreInfo.repeatMode = '1';\n                                        data.setCurrPlayBtnState('play');\n                                        // // setIsRepeat(true);\n                                        data.audioPlayPause(idx);\n                                        // repeat equalizer보이기 인덱스\n                                        setSentenseRepeatIdxState(idx);\n                                    })\n                                }} className=\"fas fa-retweet\">\n                                    <span className=\"i-label\">무한반복</span>\n                                </i>}\n                                {sentenseRepeatIdx === idx && <div className=\"stop-repeat\" onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a1');\n                                    fbase.userMoreInfo.repeatMode = temprepeatMode;\n                                    // setIsRepeat(false);\n                                    // repeat equalizer보이기 인덱스\n                                    setSentenseRepeatIdxState(9999);\n                                }} >\n                                    <Equalizer />\n                                    <span className=\"i-label\">반복종료</span>\n                                </div>} */}\n\n                            </button>\n                            <button className=\"btn\">\n                                {isCheck\n                                    ?\n                                    <i className=\"fas fa-check-square checkbox check\" onClick={() => {\n                                        checkClick(false);\n                                    }}><span className=\"i-label\">학습완료</span></i>\n                                    :\n                                    <i className=\"fas fa-check-square checkbox\" onClick={() => {\n                                        checkClick(true);\n                                    }}><span className=\"i-label\">학습중</span></i>\n                                }\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            {words && <button className=\"btn btn-word\" onClick={() => {\n                                setIsOpenDesc(!isOpenDesc);\n                            }}><i className=\"fas fa-plus\">\n                                    <span className=\"i-label\">단어({words.length})</span></i>\n                            </button>}\n\n                            <button onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.topicID = tpid;\n                                // data.setCurrPlayBtnState('stop', 'a10');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // // core.insertPage('PageShadowing');\n\n                                ZZAudioProgram.play({\n                                    idx: idx,\n                                    totalIdx: totalIdx,\n                                    src: audioSrc,\n                                    repeat: 9999,\n                                    repeatCnt: 9999,\n                                    allplay: false,\n                                });\n\n                                setIsShowShadowing(true);\n\n                            }} className=\"btn btn-sndtraining\">\n                                <span className=\"logo-snd\">SD</span><span className=\"i-label\">강화훈련</span>\n                            </button>\n                            {['_k', 'e0', '0k', '00'].includes(scriptMode) && <button className={classnames([\"btn btn-glass\", { glasson: isGlassMode }])} onClick={() => {\n\n                                setIsGlassMode(true);\n                                setTimeout(() => {\n                                    setIsGlassMode(false);\n                                }, 3000);\n                            }}><i className=\"fas fa-eye i-con\"><span className=\"i-label\">잠깐보기</span></i>\n                            </button>}\n                        </div>\n                    </div>\n                    {isOpenDesc && words && <div>\n                        <WordList json={words} />\n                    </div>}\n                </div>\n            </div>\n        </div >\n    );\n}\n\nconst PlayerControl = ({\n    tpid\n}: {\n    tpid: string\n}) => {\n    // alert(data.env.screenHeight);\n    const [renderCnt, setRenderCnt] = useState(0);\n    const [isClose, setIsClose] = useRecoilState(isCloseDetailPanelState);\n    const [repeat, setRepeat] = useState(1);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    // const isFreeClip: boolean = data.isFreeClip(tpid);\n    // const isAllPass: boolean = fbase.userMoreInfo.buyCourses.length === 0;\n\n    // useEffect(() => {\n    //     EventEmitter.subscribe(Event.PURCHASE_COMPLETE, () => {\n    //         setRenderCnt(renderCnt + 1);\n    //     });\n    // }, []);\n    // data.playerSetting = {\n    //     repeat: repeat,\n    //     interval: interval,\n    //     speed: speed,\n    // }\n    return (\n\n        <div className={`PlayerControl`}>\n            <div onClick={() => {\n                if (isClose) {\n                    setIsClose(!isClose);\n                }\n            }} className={classnames([\"functions\", { close: isClose }])}>\n                <div className=\"center\">\n                    <div className=\"func-header\">\n                        <button className=\"btn btn-blank btn-open\" onClick={() => {\n                            setIsClose(!isClose);\n                        }}>\n                            {isClose && <>설정열기<i className=\"fas fa-chevron-up up\"></i></>}\n                            {!isClose && <>설정닫기<i className=\"fas fa-chevron-down down\"></i></>}\n                        </button>\n\n                    </div>\n\n                    <div className={`func-setting`}>\n                        <div className=\"row\">\n                            <div className=\"col1\">반복</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 1 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.repeat = 1;\n                                        ZZAudioProgram.livePlayInfo.repeatCnt = 1;\n                                        setRepeat(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 2 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.repeat = 2;\n                                        ZZAudioProgram.livePlayInfo.repeatCnt = 2;\n                                        setRepeat(2);\n                                    }}>x2</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 3 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.repeat = 3;\n                                        ZZAudioProgram.livePlayInfo.repeatCnt = 3;\n                                        setRepeat(3);\n                                    }}>x3</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 4 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.repeat = 4;\n                                        ZZAudioProgram.livePlayInfo.repeatCnt = 4;\n                                        setRepeat(4);\n                                    }}>x4</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 5 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.repeat = 5;\n                                        ZZAudioProgram.livePlayInfo.repeatCnt = 5;\n                                        setRepeat(5);\n                                    }}>x5</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">속도</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 1 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.speed = 1;\n                                        setSpeed(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.9 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.speed = 0.9;\n                                        setSpeed(0.9);\n                                    }}>x0.9</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.8 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.speed = 0.8;\n                                        setSpeed(0.8);\n                                    }}>x0.8</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.7 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.speed = 0.7;\n                                        setSpeed(0.7);\n                                    }}>x0.7</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">간격</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 0 }])}\n                                    onClick={() => {\n                                        setInterval(0);\n                                        ZZAudioProgram.livePlayInfo.interval = 0;\n                                    }}>0s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1 }])}\n                                    onClick={() => {\n                                        setInterval(1);\n                                        ZZAudioProgram.livePlayInfo.interval = 1;\n                                    }}>1s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1.5 }])}\n                                    onClick={() => {\n                                        setInterval(1.5);\n                                        ZZAudioProgram.livePlayInfo.interval = 1.5;\n                                    }}>1.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.interval = 2;\n                                        setInterval(2);\n                                    }}>2s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2.5 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.interval = 2.5;\n                                        setInterval(2.5);\n                                    }}>2.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 9999 }])}\n                                    onClick={() => {\n                                        ZZAudioProgram.livePlayInfo.interval = 9999;\n                                        setInterval(9999);\n                                    }}>문장길이</button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"func-summary\">\n                        반복<span className=\"bold\">x{repeat}</span>\n                        속도<span className=\"bold\">x{speed}</span>\n                        간격<span className=\"bold\">{(() => {\n                            return interval === 9999 ? '문장길이' : interval + 's';\n                        })()}</span>\n\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"controller\">\n\n                <div className=\"col-left\">\n                    <div>\n                        <BtnRepeatMode />\n                        <BtnScriptMode />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nconst BtnRepeatMode = () => {\n\n    useEffect(() => {\n        // EventEmitter.subscribe(Event.CHANGE_BTN_PLAY_STATE, (sta: string) => {\n        //     // alert(sta);\n        //     if (sta === 'stop') {\n        //         setIsDisable(true);\n        //     } else {\n        //         setIsDisable(false);\n        //     }\n        // });\n        // EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n\n        //     // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n        //     setUpdate(update + 1);\n        // })\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, () => {\n\n            // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n            setUpdate(Math.random());\n        })\n    }, []);\n\n    let dataRepeatMode = '1';// TODO : fbase.userMoreInfo.repeatMode;\n    const [update, setUpdate] = useRecoilState(btnRepeatModeUpdateState);\n    const [mode, setMode] = useState(dataRepeatMode);\n    const [isDisable, setIsDisable] = useState(true);\n    // 1개 반복은 개별의 반복으로 처리해서 메인컨트롤러 플레이는 아님\n    const isPlay = ZZAudioProgram.livePlayInfo.allplay;// TODO : (data.currPlayBtnState === 'play' && fbase.userMoreInfo.repeatMode !== '1');\n\n\n\n    // const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n\n    return (\n        <>\n            <div className=\"BtnRepeatMode2\">\n                <button onClick={() => {\n                    // // 개별아이템 반복중일경우 tempRepeatMode처리\n                    // if (temprepeatMode !== 'nil') {\n                    //     fbase.userMoreInfo.repeatMode = temprepeatMode;\n                    //     temprepeatMode = 'nil';\n                    // }\n                    // fbase.userMoreInfo.repeatMode = 'ALL';\n                    // // 개별아이템 반복모드 켜진경우 중지 처리\n                    // setSentenseRepeatIdxState(9999);\n                    // if (isPlay) {\n                    //     data.setCurrPlayBtnState('stop', 'BtnRepeatMode2');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"멈춤\");\n                    // } else {\n                    //     data.setCurrPlayBtnState('play');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"play\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"실행\");\n                    // }\n                    // setUpdate(update + 1);\n                    const isPlay = ZZAudioProgram.livePlayInfo.allplay;//ZZAudioProgram.livePlayInfo.idx !== null;\n                    console.log('isPlay', isPlay);\n\n                    if (isPlay) {\n                        ZZAudioProgram.pause();\n                    } else {\n                        ZZAudioProgram.play({\n                            allplay: true,\n                            totalIdx: data.topicJSON.sentense.length,\n                            repeat: 1,\n                            repeatCnt: 1,\n                        })\n                    }\n\n                }} className={classnames([\"btn btn-sound\", { active: isPlay }])}>\n                    {isPlay && <><Equalizer /><span className=\"i-label active\">듣기중단</span></>}\n                    {!isPlay && <i className=\"fas fa-volume-up\"><span className=\"i-label\">전체듣기</span></i>}\n                </button>\n                {/* <button onClick={() => {\n                    if (dataRepeatMode === 'ALL') {\n                        // TODO: fbase.userMoreInfo.repeatMode = '';\n                    } else {\n                        // TODO: fbase.userMoreInfo.repeatMode = 'ALL'\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-repeat\", { active: dataRepeatMode === 'ALL' }])}>\n                    <i className=\"fas fa-redo-alt\"></i>\n                </button> */}\n            </div>\n\n        </>\n    )\n}\n\nconst scriptModeStr: any = {\n    // '_k': '_/한',\n    '00': '.../...',\n    'e0': '영/...',\n    '0k': '.../한',\n    'ek': '영/한',\n}\nconst BtnScriptMode = () => {\n    // const [mode, setMode] = useState(scriptMode);\n    const [scriptMode, setscriptMode] = useRecoilState(scriptModeState);\n\n    return (\n        <>\n            <div className=\"BtnScriptMode2\">\n                <button onClick={() => {\n                    const mode = 'ek';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'ek' }])}>영+한</button>\n                <button onClick={() => {\n                    const mode = 'e0';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'e0' }])}>영어만</button>\n                <button onClick={() => {\n                    const mode = '0k';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '0k' }])}>한글만 </button>\n            </div>\n\n        </>\n\n    )\n}\n\nconst WordList = ({\n    json\n}: {\n    json: any\n}) => {\n    const Itm = json.map((item: string[], i: number) => {\n        return <li className=\"item-word\">\n            <span className=\"word\">{item[0]}</span>\n            <span className=\"mean\">{item[1]}</span>\n        </li>\n    })\n    return (\n        <ul className=\"items-word\">\n            {Itm}\n        </ul>\n    );\n}\n\nconst ItemCnt = ({\n    idx,\n}: {\n    idx: number,\n}) => {\n    return (\n        <span className=\"item-cnt\">\n            {idx + 1}\n        </span>\n    )\n}\n\nexport default CoursePlay;","import React from 'react';\nimport data from '../core/data';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            <div className=\"utils-layout-marginauto0\">\n                <div className=\"logo btn-fc\" onClick={() => {\n                    data.gotoPage('', '');\n                }}><i className=\"fas fa-home i-left\"></i>카셋 회화 훈련</div>\n                <br></br>\n                <a href=\"http://pf.kakao.com/_HxlMJK/chat\" className=\"btn btn-blank btn-fc\" target=\"_blank\"><i className=\"fas fa-chevron-circle-right i-left\"></i>카카오채널 문의하기</a><br></br>\n                <a href=\"mailto:dev@casete.in\" className=\"btn btn-blank btn-fc\"><i className=\"fas fa-chevron-circle-right i-left\"></i>이메일 문의하기</a><br></br>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;","import React, { useState } from 'react';\nimport fbase, { authService, dbService } from './fbase';\n\nconst FBViewLogin = () => {\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    // 조회 \n    // dbService.collection('userstatus').get().then((docs: any) => {\n    //     docs.docs.forEach((doc: any) => {\n    //         console.log(doc.data());\n    //     })\n    // });\n    console.log('fbase.userInfo', fbase.userInfo.email)\n    return (\n        <div className=\"FBViewLogin\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className=\"btn\"><i className=\"fas fa-user-circle\">\n\n                    </i> {fbase.userInfo.email.split('@')[0]}</button>\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login-info\">\n                    <div className=\"popup-login-info-in\">\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n                                사용자정보\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n                        <div className=\"area-user\">\n                            <span className=\"user-id\">{fbase.userInfo.email.split('@')[0]}</span>\n                            <button className=\"btn btn-border round\" onClick={() => {\n                                authService.signOut().then(() => {\n                                    (window as any).location.href = \"/\";\n                                });\n                            }}>로그아웃</button>\n                        </div>\n\n\n\n                        <div className=\"purchase-list\">\n                            <h4 className=\"title\"><i className=\"fas fa-book\"></i> 구매 완료 목록</h4>\n                            <ul className=\"list\">\n                                <li className=\"btn\">1. 스크린영어-영화인턴<i className=\"fas fa-chevron-right i-right\"></i></li>\n                                <li className=\"btn\">1. 스크린영어-영화인턴<i className=\"fas fa-chevron-right i-right\"></i></li>\n                            </ul>\n                        </div>\n\n                        {/* <button onClick={() => {\n                            // 저장\n                            dbService.collection('userstatus').add({ todo: \"test\" }).then((res: any) => {\n                                console.log(res)\n                            })\n                        }}>정보변경</button> */}\n                    </div>\n\n                </div>\n            }\n\n\n        </div>\n    );\n};\n\nexport default FBViewLogin;","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase, { authService } from './fbase';\n// let tempLoginPopupParam: {\n//     from: string,\n//     courseID: string,\n// } | null = null;\nconst btnLabel: any = {\n    'login': '로그인',\n    'join': '가입신청',\n    'findpw': '이메일로 링크보내기',\n};\nconst FBViewLogout = () => {\n    const [inputEmail, setInputEmail] = useState('');\n    const [inputPw, setInputPw] = useState('');\n    const [inputPw2, setInputPw2] = useState('');\n    // const [newAccount, setNewAccount] = useState(false);\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    const [viewMode, setViewMode] = useState('login');// login, join, findpw\n    useEffect(() => {\n        EventEmitter.subscribe(Event.FB_START_LOGIN, (options: any) => {\n            // tempLoginPopupParam = options;\n            setisShowLoginPopup(true);\n        })\n    }, []);\n    const onChange = (event: any) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setInputEmail(value);\n        } else if (name === \"pw\") {\n            setInputPw(value);\n        } else if (name === \"pw2\") {\n            setInputPw2(value);\n        }\n    }\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (!inputEmail) {\n            alert('이메일을 입력해주세요.')\n            return;\n        }\n        // 신규가입인경우 비번 두번입력 비교\n        if (viewMode === 'join' && (inputPw !== inputPw2)) {\n            alert(fbase.convertErrorMessage({\n                code: 'auth/invalidNewPw'\n            }));\n            return;\n        }\n        try {\n            let data;\n            if (viewMode === 'join') {\n                // create account\n                await authService.createUserWithEmailAndPassword(inputEmail, inputPw);\n            } else if (viewMode === 'login') {\n                // log in\n                await authService.signInWithEmailAndPassword(inputEmail, inputPw);\n            } else if (viewMode === 'findpw') {\n                // 비번 찾기\n                authService.sendPasswordResetEmail(inputEmail).then(() => {\n                    alert(`입력하신 ${inputEmail}로 발송한 메일을 확인해주세요.`)\n                }).catch((error: any) => {\n\n                    if (error.code === 'auth/user-not-found') {\n                        alert(fbase.convertErrorMessage({\n                            code: error.code\n                        }));\n                    } else {\n                        alert('ERROR : ' + error.message);\n                    }\n                });\n\n            }\n\n        } catch (error) {\n            //   setError(error.message);\n            console.log(error);\n            alert(fbase.convertErrorMessage(error));\n            // alert(error.message);\n        }\n    }\n\n    // if (!isShowLoginPopup) {\n    //     if (tempLoginPopupParam !== null && tempLoginPopupParam.from === 'buyProduct') {\n    //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n    //             from: \"buyProduct\",\n    //             courseID: tempLoginPopupParam.courseID,\n    //         });\n    //     }\n    //     tempLoginPopupParam = null;\n    // }\n    return (\n        <div className=\"FBViewLogout\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className=\"btn\"><i className=\"fas fa-user-circle\">로그인</i></button>\n\n\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login\">\n                    <div className=\"popup-login-in\">\n\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n\n                                <div className=\"nav\">\n                                    <div className=\"nav-tabs\">\n                                        <div onClick={() => {\n                                            setViewMode('login');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"login\" }])}>\n                                            로그인\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                        <div onClick={() => {\n                                            setViewMode('join');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"join\" }])}>\n                                            회원가입\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    ['findpw'].includes(viewMode) && <div className=\"tit-findpw\">비밀번호 찾기 </div>\n                                }\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n\n                        <form onSubmit={onSubmit}>\n                            <ul>\n                                <li>\n                                    <input className=\"form-styling\"\n                                        placeholder=\"이메일 입력\"\n                                        name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                </li>\n                                {\n                                    ['login', 'join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 입력\"\n                                            name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                    </li>\n                                }\n                                {\n                                    ['join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 확인\"\n                                            name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                    </li>\n                                }\n\n                            </ul>\n                            {/* <table>\n                                <tbody>\n                                    <tr>\n                                        <td>이메일</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                        </td>\n                                    </tr>\n                                    {\n                                        newAccount && <>\n                                            <tr>\n                                                <td>비밀번호 확인</td>\n                                                <td>\n                                                    <input className=\"form-styling\" name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                                </td>\n                                            </tr>\n                                        </>\n                                    }\n                                </tbody>\n                            </table> */}\n                            <button className=\"btn-login\">{btnLabel[viewMode]}</button>\n                        </form>\n                        {\n                            ['login', 'join'].includes(viewMode) &&\n                            <div className=\"footer-pw\">\n                                <button className=\"btn btn-underline\" onClick={() => {\n                                    // setNewAccount(true);\n                                    setViewMode('findpw')\n                                    // fbase.sendPasswordResetEmail(inputEmail);\n                                }}>비밀번호를 잊으셨나요?</button>\n                            </div>\n                        }\n\n                        {/* <AuthLoginUI /> */}\n                    </div>\n                    {/* <FindPassword /> */}\n                </div>\n\n            }\n\n\n        </div>\n    );\n};\n\nconst AuthLoginUI = () => {\n\n    const [stepCD, setStepCD] = useState('signin');\n\n    return (\n        <div className=\"AuthLoginUI\">\n            <div className=\"kareui-template-04 kareui-wrapper\">\n\n                <div className=\"section-top\">\n                    <div className=\"btn-group\">\n                        <div className=\"nav nav-tabs\">\n                            <div onClick={() => {\n                                setStepCD('signin');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signin\" }])}>\n                                로그인\n\t\t\t\t\t        </div>\n                            <div onClick={() => {\n                                setStepCD('signup');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signup\" }])}>\n                                회원가입\n\t\t\t\t\t        </div>\n                        </div>\n                        <div className=\"nav-active\">\n                            <div className={classnames([\"underline\", stepCD])}></div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className={`tab-content ${stepCD}`}>\n\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signin\" }])} id=\"signin\">\n\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n                            {/* <label htmlFor=\"username\">사용자이메일</label> */}\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n                            <label htmlFor=\"password\">비밀번호</label>\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호\" />\n\n                            <button className=\"btn-login\">\n                                로그인하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signup\" }])} id=\"signup\">\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"email\" placeholder=\"비밀번호\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호 확인\" />\n\n                            <button className=\"btn-login\">\n                                회원가입하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst FindPassword = () => {\n    return (\n        <div>\n            <input placeholder=\"이메일 입력\"></input>\n\n\n            <button onClick={() => {\n                const emailStr = \"macaoshu@gmail.com\";\n                // authService.sendPasswordResetEmail(emailStr).then(() => {\n                //     alert(`입력하신 ${emailStr}로 발송한 메일을 확인해주세요.`)\n                // }).catch((error: any) => {\n                //     const errorMessage = error.errorMessage;\n                //     alert('ERROR : ' + errorMessage);\n                // });\n            }}>비밀번호찾기</button>\n        </div>\n    )\n}\n\nexport default FBViewLogout;","\nimport React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from './fbase';\nimport FBViewLogin from './FBViewLogin';\nimport FBViewLogout from './FBViewLogout';\n// import \"./FBState.scss\";\n\nconst FBState = () => {\n\n    const [checkedLogin, setCheckedLogin] = useState(false);\n    const [update, setUpdate] = useState(0);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, (userInfo: any) => {\n            console.log('Event.ON_AUTH_STATE_CHANGED')\n            setCheckedLogin(true);\n            setUpdate(Math.random());\n        });\n        fbase.initLogin();\n\n    }, []);\n\n    return (\n        <div className=\"FBState\">\n            {\n                checkedLogin\n                    ?\n                    fbase.userInfo ? <FBViewLogin /> : <FBViewLogout />\n                    :\n                    <div>loading...</div>\n            }\n        </div>\n    );\n};\n\nexport default FBState;","import React from 'react';\nimport data from '../core/data';\nimport FBState from '../fb/FBState';\n\nconst Header = () => {\n    return (\n        <div className=\"Header\">\n            <div className=\"utils-layout-marginauto0 header-in\">\n                <div className=\"logo\" onClick={() => {\n                    data.gotoPage('', '');\n                }}>카셋 회화 훈련</div>\n                <div className=\"user-info\">\n                    <FBState />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Mypage = () => {\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default Mypage;","import React from 'react';\n\nconst Page01 = () => {\n    return (\n        <div>\n            Page01\n        </div>\n    );\n};\n\nexport default Page01;","import React from 'react';\n\nconst Page02 = () => {\n    return (\n        <div>\nPage02\n        </div>\n    );\n};\n\nexport default Page02;","import React from 'react';\n\nconst Page03 = () => {\n    return (\n        <div>\n            Page03\n        </div>\n    );\n};\n\nexport default Page03;","import React from 'react';\nimport \"./scss/PageCSSHamburger.scss\";\n\nconst PageCSSHamburger = () => {\n    return (\n        <div className=\"PageCSSHamburger\">\n            <div className=\"hamburger\">\n                <input type=\"checkbox\"></input>\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default PageCSSHamburger;","import React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\n\nlet interval: any = null;\nconst ToastAlert = () => {\n    const [info, setInfo] = useState({\n        message: '',\n        mtime: 0,\n    });\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_TOAST_MESSAGE, (option: {\n            message: string,\n            mtime: number\n        }) => {\n            setInfo(option);\n            if (option.mtime === 0) {\n                option.mtime = 3000;\n            }\n            if (interval) {\n                clearInterval(interval);\n            }\n            interval = setInterval(() => {\n                clearInterval(interval);\n                setInfo({\n                    message: '',\n                    mtime: 0,\n                })\n            }, option.mtime)\n        });\n    }, [])\n    return (\n        <div className={classnames(\"ToastAlert\", css`\n            bottom:${info.message === '' ? '-100px' : '20px'}\n        `)}>\n            {info.message}\n        </div>\n    );\n};\n\nexport default ToastAlert;","\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport PrintTable from '../components/PrintTable';\nimport Alert from './Alert';\nimport CourseMain from './CourseMain';\nimport CoursePlay from './CoursePlay';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Mypage from './Mypage';\nimport Page01 from './Page01';\nimport Page02 from './Page02';\nimport Page03 from './Page03';\nimport PageCSSHamburger from './PageCSSHamburger';\nimport PageHome from './PageHome';\nimport ToastAlert from './ToastAlert';\n\nconst PageRoute = () => {\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            {/* <Route path=\"/\" component={Header}/> */}\n            <Header />\n            {/* <Route path=\"/\" component={GNB}/> */}\n            <Loading />\n            <ToastAlert />\n            <Alert />\n            <PrintTable />\n            <div className=\"page-group utils-layout-marginauto0\">\n                <Route exact path=\"/\" component={PageHome} />\n                <Route path=\"/Page01\" component={Page01} />\n                <Route path=\"/Page02\" component={Page02} />\n                <Route path=\"/Page03\" component={Page03} />\n                <Route path=\"/CourseMain\" component={CourseMain} />\n                <Route path=\"/CoursePlay\" component={CoursePlay} />\n                <Route path=\"/Mypage\" component={Mypage} />\n                <Route path=\"/PageCSSHamburger\" component={PageCSSHamburger} />\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default PageRoute;","import React from 'react';\nimport PageRoute from './pages/PageRoute';\nimport './scss/Main.scss';\n\n// starterKit-staticWebStyle1\nfunction App() {\n  // prevena\n  let isRen: boolean = false;\n  if (process.env.NODE_ENV === 'development') {\n    const href = (window as any).location.href;\n    if (href.split(\"localhost\").length > 1) {\n      isRen = true;\n    }\n  }\n\n  // PORT=9922\n  // == prevena\n\n  return (\n    <div className=\"App v1-1\">\n      {/* {isRen && <>\n        <PageRoute />\n      </>} */}\n      <PageRoute />\n    </div>\n  );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { RecoilRoot } from \"recoil\";\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <RecoilRoot>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}