{"version":3,"sources":["pages/PageMiniplayer.tsx"],"names":["audioSrc","showOptionPanelState","atom","key","default","eachSentensePlayIdxState","PlayerMain","useRecoilState","showOptionPanel","setShowOptionPanel","SharePanel","PlayerHeader","PlayerLists","PlayerLogo","onClick","className","linkStr","iframeStr","window","location","href","useSetRecoilState","useState","shareStr","setShareStr","shareMode","setShareMode","classnames","active","value","eachSentensePlayIdx","seteachSentensePlayIdx","ZZAudioProgram","pause","play","allplay","totalIdx","data","topicJSON","sentense","length","repeat","livePlayInfo","repeatCnt","useEffect","EventEmitter","subscribe","Event","SENTENSE_PAUSE","idx","SentenseList","map","item","i","Sentense","info","console","log","src","ko","target","rel","PageMiniplayer","isData","setisData","decryptQuery","parseQuery","cid","tpid","presetSrc","getTopicJSON","then","result","json"],"mappings":"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","file":"static/js/PageMiniplayer.206674ee.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { atom, useRecoilState, useSetRecoilState } from 'recoil';\nimport Equalizer from '../components/Equalizer';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\n\nimport \"../scss/PageMiniplayer.scss\";\n\nlet audioSrc: string = '';\nlet idx: number;\n\nconst showOptionPanelState = atom({\n    key: \"showOptionPanelState\",\n    default: false,\n})\n// 개별 문장 플레이\nconst eachSentensePlayIdxState = atom({\n    key: \"eachSentensePlayIdxState\",\n    default: -1,// -999:전체 -1:없음 1,2,3:각인덱스\n})\n\nconst PageMiniplayer = () => {\n    // const setisMiniplayer = useSetRecoilState(isMiniplayerState);\n    const [isData, setisData] = useState(false);\n    useEffect(() => {\n        const decryptQuery = data.parseQuery();\n        console.log('decryptQuerydecryptQuery', decryptQuery)\n        const cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n        const tpid = (decryptQuery && decryptQuery.tpid) ? decryptQuery.tpid : '';\n        idx = decryptQuery.idx;\n        audioSrc = `./resource/courses/${cid}/topics/${tpid}/mm.mp3`;\n        ZZAudioProgram.presetSrc(audioSrc);\n\n        data.getTopicJSON(cid, tpid).then((result: any) => {\n            data.topicJSON = result.data;\n            ZZAudioProgram.livePlayInfo.json = data.topicJSON;\n\n            setisData(true);\n        });\n    }, []);\n    console.log('render::', isData)\n    return (\n        <div className=\"PageMiniplayer\">\n            {isData && <PlayerMain />}\n        </div>\n    );\n};\n\nconst PlayerMain = () => {\n    const [showOptionPanel, setShowOptionPanel] = useRecoilState(showOptionPanelState);\n    return (\n        <div>\n            {showOptionPanel && <SharePanel />}\n            <PlayerHeader />\n            <PlayerLists />\n            <PlayerLogo />\n            <i onClick={() => {\n                setShowOptionPanel(true);\n            }} className=\"fas fa-share-alt-square btn-share\"></i>\n        </div>\n    );\n}\n\nlet linkStr = 'https://casete.in';\nlet iframeStr = 'https://casete.in';\nconst SharePanel = () => {\n    linkStr = window.location.href;\n    iframeStr = `<iframe width=\"100%\" height=\"508\" src=\"${linkStr}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n    const setShowOptionPanel = useSetRecoilState(showOptionPanelState);\n    const [shareStr, setShareStr] = useState(linkStr);// link, iframe\n    const [shareMode, setShareMode] = useState('link');// link, iframe\n\n    return (\n        <div className=\"SharePanel\">\n            <div className=\"btns2\">\n                <i onClick={() => {\n                    setShowOptionPanel(false);\n                }} className=\"fas fa-chevron-left btn-back\"> 돌아가기</i>\n                <button onClick={() => {\n                    setShareStr(linkStr);\n                    setShareMode('link');\n                }} className={classnames([\"btn btn-link\", { active: shareMode === 'link' }])}><i className=\"fas fa-link icon\"></i>링크</button>\n                <button onClick={() => {\n                    setShareStr(iframeStr);\n                    setShareMode('iframe');\n                }} className={classnames([\"btn btn-iframe\", { active: shareMode === 'iframe' }])}><i className=\"far fa-file-code icon\"></i>퍼가기</button>\n            </div>\n            <div>\n                <textarea className=\"textarea\" value={shareStr}></textarea>\n            </div>\n        </div>\n    );\n}\n\nconst PlayerHeader = () => {\n    const [eachSentensePlayIdx, seteachSentensePlayIdx] = useRecoilState(eachSentensePlayIdxState);\n    return (<div className=\"PlayerHeader\">\n        {\n            eachSentensePlayIdx === -999\n                ?\n                <button className=\"btn btn-all\" onClick={() => {\n                    ZZAudioProgram.pause();\n                    seteachSentensePlayIdx(-1);\n                }}><Equalizer />전체멈춤</button>\n                :\n                <button className=\"btn btn-all\" onClick={() => {\n                    ZZAudioProgram.play({\n                        allplay: true,\n                        totalIdx: data.topicJSON.sentense.length,\n                        repeat: ZZAudioProgram.livePlayInfo.repeat,\n                        repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                    })\n                    seteachSentensePlayIdx(-999);\n                }}><i className=\"fas fa-play-circle\"></i>전체재생</button>\n        }\n\n    </div>);\n}\n\nconst PlayerLists = () => {\n    const seteachSentensePlayIdx = useSetRecoilState(eachSentensePlayIdxState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, (idx: number) => {\n            if (!ZZAudioProgram.livePlayInfo.allplay) {\n                seteachSentensePlayIdx(-1);\n            }\n\n        });\n    });\n    const SentenseList = data.topicJSON.sentense.map((item: any, i: number) => {\n        return <Sentense info={item} key={i} idx={i} />\n    })\n    return (<ul className=\"PlayerLists\">\n        {SentenseList}\n    </ul>);\n}\n\nconst Sentense = ({\n    info, idx\n}: {\n    info: any, idx: number\n}) => {\n    const [eachSentensePlayIdx, seteachSentensePlayIdx] = useRecoilState(eachSentensePlayIdxState);\n    console.log('eachSentensePlayIdx', eachSentensePlayIdx, idx)\n    return (\n        <li className=\"sentense-item\" onClick={() => {\n            ZZAudioProgram.play({\n                idx: idx,\n                totalIdx: data.topicJSON.sentense.length,\n                src: audioSrc,\n                repeat: 1,\n                repeatCnt: 1,\n                allplay: false,\n            });\n            seteachSentensePlayIdx(idx);\n        }}>\n            <div className=\"no\">{idx + 1}</div>\n            <div className=\"str\">{info.ko}</div>\n            {\n                eachSentensePlayIdx === idx\n                    ?\n                    <Equalizer />\n                    :\n                    <button className=\"btn\"><i className=\"fas fa-play-circle\"></i></button>\n            }\n        </li>\n    );\n}\n\nconst PlayerLogo = () => {\n    return (<div className=\"PlayerLogo\">\n        <i className=\"fas fa-compact-disc fa-spin\"></i>\n        <a className=\"btn-home\" href=\"https://casete.in\" target=\"_blank\" rel=\"noreferrer\">\n            <div className=\"marquee\"><p>카셋영플 mini - 이것은 광고 입니다 광고는 여기에 흘러요 안녕하세요.</p></div>\n        </a>\n    </div>);\n}\n\nexport default PageMiniplayer;"],"sourceRoot":""}