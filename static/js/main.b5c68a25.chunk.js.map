{"version":3,"sources":["core/EventEmitter.ts","core/store.ts","components/Loading.tsx","components/PrintTable.tsx","core/Days.ts","fb/fbase.ts","env.ts","components/ZZAudioProgram.ts","core/data.ts","components/AlertBasic.tsx","components/AlertBuyProduct.tsx","components/AlertBuyProduct2.tsx","pages/Alert.tsx","components/WCourseItem.tsx","components/WCourse.tsx","pages/PageHome.tsx","pages/CourseMain.tsx","components/Equalizer.tsx","components/LoadingDom.tsx","components/MDictation.tsx","components/PageShadowing.tsx","components/YTModule.tsx","components/PageSpeedmate.tsx","components/YTSpeedModule.tsx","pages/CoursePlay.tsx","pages/CoursePrint.tsx","pages/Footer.tsx","fb/FBViewLogin.tsx","fb/FBViewLogout.tsx","fb/FBState.tsx","pages/Header.tsx","pages/Mypage.tsx","pages/PageRecord.tsx","pages/PageCSSHamburger.tsx","pages/ToastAlert.tsx","pages/PageRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Event","events","event","data","this","forEach","callback","push","splice","indexOf","ON_AUTH_STATE_CHANGED","FB_START_LOGIN","IS_APP_READY","INSERT_PAGE","REPLACE_PAGE","GOTO_BACK","RESET_PAGE","SHOW_ALERT","HIDE_ALERT","INIT_AUDIO","AUDIO_PLAY_PAUSE","AUDIO_STOP","SENTENSE_PLAYING","SENTENSE_PAUSE","CONTROL_UI_UPDATE","SET_BTN_PLAY_STATE","CHANGE_BTN_PLAY_STATE","SHOW_NOTI_MESSAGE","PURCHASE_COMPLETE","FREETIME_UPDATED","CLICK_HOTCLIP_THUMB","SHOW_LOADING","HIDE_LOADING","AUDIO_PLAY_COUNT","CHANGE_TPID","SHOW_TOAST_MESSAGE","isLoadingState","atom","key","default","isCloseDetailPanelState","scriptModeState","btnRepeatModeUpdateState","setSceneIdxState","isYTModuleState","isYTSpeedModuleState","ytbSentenseHideState","isShowSpeedmateState","isShowShadowingState","printCourseIDState","Loading","useRecoilState","isLoading","setIsLoading","useEffect","EventEmitter","subscribe","className","printJSON","require","DaySentenses","arr","idx","SentenseList","map","item","i","rowSpan","length","data-tableexport-xlsxformatid","ko","en","PrintTable","printCourseID","setprintCourseID","selectCourseJSON","find","info","courseID","tr","list","onClick","window","printScript","id","dayjs","extend","utc","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","audioTimeArr","userInfo","initUserInfoMerge","userMoreInfo","joindate","email","uid","repeatMode","subscriptionInfo","showClips","keepClips","keepSentense","doneSentense","historyClips","authService","onAuthStateChanged","user","docName","makeDocNameWithUserInfo","dbService","collection","doc","get","then","docs","Days","local","format","syncMoreInfo","console","log","dispatch","catch","err","r","isLogin","set","merge","split","reg","test","replace","substr","emailPw","auth","sendPasswordResetEmail","alert","error","convertErrorMessage","convertMessage","code","message","firestore","mainJSON","queryDivideStr","scrollingLazyTime","scrollingTick","productTable","title","price","priceQR","isHashURL","topicJSON","isSentensePressing","gaFrame","logCnt","pageShadowingParam","sentenseEn","sentenseKo","sentenseIdx","topicID","totalIdx","audioSrc","numberWithCommas","x","parts","toString","join","location","d","incryptString","hash","etcparam","qs","parse","decryptParam","decryptURL","Object","assign","inParam","inQuery","href","cid","resultItem","courseToMainJSON","gotoPage","query","animateScrollTo","elementToScroll","document","querySelector","str","tpid","findMainJSON","dir","overIdx","fbase","filter","type1","type2","value","newArr","includes","JSON","stringify","text","substring","bytes","CryptoJS","AES","decrypt","make1","enc","Utf8","moduleName","options","axios","clearInterval","setInterval","firstY","scrollY","setTimeout","obj","p","hitType","eventLabel","eventValue","host","postMessage","infoStr","subscriptionType","todayInt","parseInt","infoArr","productCD","edStr","inMessage","params","response","finally","AlertBasic","hideAlert","AlertBuyProduct","openParam","useState","isBrowser","stepCD","setStepCD","courseInfoJSON","qrurl","pricesCode","prices","target","classnames","paymentStepState","selectPlanState","sendTelemessage","sendTitle","priceCode","moreStr","sendTelelog","PayStep01","setPaymentStep","useSetRecoilState","selectPlan","setSelectPlan","active","PayStep02","src","monNum","todayStr","enddayStr","add","fbasesubscriptionInfo","reload","AlertBuyProduct2","paymentStep","useRecoilValue","Alert","setModuleName","AlertModule","CItemMovie","itemJSON","isSubscriptionInfo","Tits","tit","idxPad","_pad","String","isTrial","showToastMessage","mtime","from","trial","CItem","WCourseItem","viewType","getSubscriptionState","Tags","Tag","WCourse","json","parentName","topics","item2","i2","itemViewType","isShowTitle","isHide","setIsHide","tags","livePlayInfo","inID","inVolume","zzaudio","playEffect","param","sentense","timeen","playComplete","bind","st","et","repeat","repeatCnt","play","allplay","pause","vol","setVolume","delay","ms","Promise","resolve","currentSoundTime","intervalTime","settingInterval","interval","uniqCnt","CourseItem","css","getRootPath","ing","isMakeComplete","PageHome","course1","item1","isHomeList","CourseMainList","courseItemListJSON","openID","CourseMain","gotoTop","setRender","search","decryptQuery","Math","random","ZZAudioProgram","Equalizer","LoadingDom","sentenseSplit","correctArr","shuffleWords","MDictation","trim","slice","_shuffle","word","oriIdx","submitIdx","setSubmitIdx","submitArr","setSubmitArr","hintIdx","setHintIdx","setMessage","isComplete","setIsComplete","blanks","submitWord","words","dpWord","toLowerCase","cloneArr","ControlBtns","isPlay","setIsPlay","speed","setSpeed","PageShadowing","setIsShowShadowing","scrollTo","sentenseRepeat","_tpidx","Scene0","sceneIdx","setSceneIdx","SceneIntro","init","setInit","innerScene","setInnerScene","SceneSentense","SceneOuttro","YTModule","tpidx","setYtbSentenseHide","setIsYTModule","setUpdate","cntForRepeat","turnCnt","ceil","cnt","ls","sentenseCnt","isYTMode","PageSpeedmate","isShowSpeedmate","setisShowSpeedmate","sentensePauseHandler","remove","Number","toFixed","_cid","_tpid","YTSpeedModule","CoursePlayList","GotoNextPrev","gotoNextPrev","gotoCourseMainPage","TopicCover","courseToMainIdx","PlayLists","render","isCloseDetailPanel","Component","renderCnt","SentenseItem","isOpenDesc","setIsOpenDesc","isGlassMode","setIsGlassMode","scriptMode","isCheck","setIsCheck","checkClick","tf","makeKey","setSettingKeepClipSentense","isActive","setIsShowSpeedmate","isInfinityPlay","playClick","ytbSentenseHide","isYTModule","isYTSpeedModule","ytbHideClassEn","ytbHideClassKo","onTouchStart","sentensePressing","en_0","ko_0","glasson","modeClass","PlayerControl","isClose","setIsClose","setRepeat","close","BtnRepeatMode","BtnScriptMode","setscriptMode","WordList","Itm","ItemCnt","CoursePlay","isCheckedAuth","setisCheckedAuth","isShowShadowing","setClipHistory","isScrolling","result","$el","y","offsetTop","isData","setisData","parseQuery","presetSrc","getTopicJSON","isOwner","ytview","yt","ytspeed","CoursePrint","Footer","SubscriptionInfo","dp1","dp2","stStr","productCDtoStr","dateMyFormat","FBViewLogin","isShowLoginPopup","setisShowLoginPopup","signOut","btnLabel","FBViewLogout","inputEmail","setInputEmail","inputPw","setInputPw","inputPw2","setInputPw2","viewMode","setViewMode","setisLoading","onChange","name","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","placeholder","autoCapitalize","type","FBState","checkedLogin","setCheckedLogin","initLogin","Header","Mypage","sentenseCntHistory","currentDateState","CalNav","currentDate","setCurrentDate","WeekHeader","Day","classarr","dateStr","date","getDate","repeatPercent","concat","dateBeforeDays","days","Date","getTime","getDayDisplayInfo","inDayInfo","nyear","getFullYear","nmonth","getMonth","nday","WeekDays","showDate","firstDate","lastDate","firstWeek","getDay","dateData","dayNum","classArr","abs","PageRecord","inDay","inPlusCnt","yearArr","monthArr","updateCntHistory","PageCSSHamburger","ToastAlert","setInfo","option","PageRoute","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b5c68a25.chunk.js","sourcesContent":["\n\n/**\n * use\n * import EventEmitter, {Event} from \"common/events/EventEmitter\";\n *\n * dispatch\n * EventEmitter.dispatch(Event.EVENT_EXAMPLE, {같이 넘길 파라메터 });\n *\n * subscribe\n * EventEmitter.subscribe(Event.EVENT_EXAMPLE, (options:any)=>{\n *  {같이 넘길 파라메터 }\n * });\n */\nexport class Event {\n\n\tpublic static ON_AUTH_STATE_CHANGED: string = \"onAuthStateChanged\";\n\tpublic static FB_START_LOGIN: string = \"fbStartLogin\";\n\tpublic static IS_APP_READY: string = \"isAppReady\";\n\tpublic static INSERT_PAGE: string = \"insertPage\";\n\tpublic static REPLACE_PAGE: string = \"replacePage\";\n\tpublic static GOTO_BACK: string = \"gotoBack\";\n\tpublic static RESET_PAGE: string = \"resetPage\";\n\tpublic static SHOW_ALERT: string = \"showAlert\";\n\tpublic static HIDE_ALERT: string = \"hideAlert\";\n\tpublic static INIT_AUDIO: string = 'initAudio';\n\tpublic static AUDIO_PLAY_PAUSE: string = 'audioPlayPause';\n\tpublic static AUDIO_STOP: string = 'audioStop';\n\tpublic static SENTENSE_PLAYING: string = 'sentensePlaying';\n\tpublic static SENTENSE_PAUSE: string = 'sentensePause';\n\tpublic static CONTROL_UI_UPDATE: string = 'controlUIUpdate';\n\tpublic static SET_BTN_PLAY_STATE: string = 'setBtnPlayState';// 외부에서 버튼 상태를 변경할때 발생\n\tpublic static CHANGE_BTN_PLAY_STATE: string = \"changeBtnPlayState\";// 버튼 자신이 변경되면 외부에 알리느라 발생\n\tpublic static SHOW_NOTI_MESSAGE: string = \"showNotiMessage\";\n\tpublic static PURCHASE_COMPLETE: string = \"purchaseComplete\";\n\tpublic static FREETIME_UPDATED: string = \"freetimeUpdated\";\n\tpublic static CLICK_HOTCLIP_THUMB: string = \"clickHotclipThumb\";\n\tpublic static SHOW_LOADING: string = \"showLoading\";\n\tpublic static HIDE_LOADING: string = \"hideLoading\";\n\tpublic static AUDIO_PLAY_COUNT: string = \"audioPlayClunt\";\n\tpublic static CHANGE_TPID: string = \"changeTPID\";\n\tpublic static SHOW_TOAST_MESSAGE: string = \"showToastMessage\";\n\n\n\tpublic events: any = {};\n\tpublic dispatch(event: string, data?: any): void {\n\t\tif (!this.events[event]) return;\n\t\tthis.events[event].forEach((callback: (arg0: any) => void) =>\n\t\t\tcallback(data)\n\t\t);\n\t}\n\tpublic subscribe(event: string, callback: any): void {\n\t\tif (!this.events[event]) this.events[event] = [];\n\t\tthis.events[event].push(callback);\n\t}\n\tpublic remove(event: string, callback?: any): void {\n\t\t// if (this.events[event]) this.events[event] = null;\n\t\tif (this.events[event]) this.events[event].splice(this.events[event].indexOf(callback), 1);\n\t}\n}\n\nexport default new Event();\n","import { atom, RecoilState } from \"recoil\";\n\n// export const config = {\n//     appid: \"com.kareui.caseteenglish\",\n//     inappIDs: {\n//         \"unlock01\": \"com.kareui.caseteenglish.unlock01\"\n//     }\n// }\n\nexport const isLoadingState = atom({\n    key: \"isLoadingState\",\n    default: false,\n})\n\n// // playControl detailPanel state\nexport const isCloseDetailPanelState = atom({\n    key: \"isCloseDetailPanelState\",\n    default: true,\n})\n\nexport const scriptModeState = atom({\n    key: \"scriptModeState\",\n    default: 'ek',\n})\n\nexport const sentenseRepeatIdxState: RecoilState<number> = atom({\n    key: \"sentenseRepeatIdxState\",\n    default: 9999,\n})\n\nexport const btnRepeatModeUpdateState: RecoilState<number> = atom({\n    key: \"btnRepeatModeUpdateState\",\n    default: 0,\n})\n\nexport const setSceneIdxState: RecoilState<number> = atom({\n    key: \"setSceneIdxState\",\n    default: 0,\n})\n\nexport const isYTModuleState = atom({\n    key: \"isYTModuleState\",\n    default: false,\n})\nexport const isYTSpeedModuleState = atom({\n    key: \"isYTSpeedModuleState\",\n    default: false,\n})\n\nexport const ytbSentenseHideState: RecoilState<string> = atom({\n    key: \"ytbSentenseHideState\",\n    default: '00',\n})\n\nexport const isShowSpeedmateState = atom({\n    key: \"isShowSpeedmateState\",\n    default: false,\n})\n// export const homeListSortState: RecoilState<string> = atom({\n//     key: \"homeListSortState\",\n//     default: 'reverse',\n// })\n// export const updateCntPlayState: RecoilState<number> = atom({\n//     key: \"updateCntPlayState\",\n//     default: 0,\n// })\n\n// export const wbIsOpenNavState = atom({\n//     key: \"wbIsOpenNavState\",\n//     default: false,\n// });\n\n// export const tpidState = atom({\n//     key: \"tpidState\",\n//     default: '',\n// })\n\n// export const cidState = atom({\n//     key: \"cidState\",\n//     default: '',\n// })\n\n// 강화훈련\nexport const isShowShadowingState = atom({\n    key: \"isShowShadowingState\",\n    default: false,\n})\n\nexport const printCourseIDState = atom({\n    key: \"printCourseIDState\",\n    default: '',\n})\n\n\n\n\nexport default {};","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isLoadingState } from \"../core/store\";\nconst Loading = () => {\n    const [isLoading, setIsLoading] = useRecoilState(isLoadingState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_LOADING, () => {\n            setIsLoading(true);\n        })\n        EventEmitter.subscribe(Event.HIDE_LOADING, () => {\n            setIsLoading(false);\n        })\n    }, []);\n    return (\n        <>\n            {\n                isLoading && <div className=\"loading-container\">\n                    <div className=\"lds-ellipsis\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            }\n        </>\n\n    );\n};\n\nexport default Loading;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { printCourseIDState } from '../core/store';\nconst printJSON = require('../resource/mainJSONPrint.json');\nconst PrintTable = () => {\n\n    const [printCourseID, setprintCourseID] = useRecoilState(printCourseIDState);\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n        // console.log('printJSONitem.courseID === printCourseID', item, item.info.courseID,'__', printCourseID)\n        if (item.info.courseID === printCourseID) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    // const tr = selectCourseJSON.list.map((item:any, i:number)=>{\n    //     return <div>{item.ko}, {item.en} </div>\n    // })\n    // console.log('printJSONitem1',selectCourseJSON)\n    return (\n        <div className=\"PrintTable\">\n            {\n                selectCourseJSON && <div>\n                    <div className=\"header\">\n                        <div className=\"row-right\">\n                            <button className=\"btn btn-border\" onClick={() => {\n                                setprintCourseID('');\n                            }}><i className=\"fas fa-arrow-left\"></i> 돌아가기</button>\n                            <button className=\"btn btn-border\" onClick={() => {\n                                // console.log((document as any).getElementById(\"script-print-table\"))\n                                // new TableExport((document as any).getElementById(\"script-print-table\"),{\n\n                                //     filename:'카셋회화훈련-인턴',\n                                //     formats:['xlsx'],\n                                // });\n                                (window as any).printScript('카셋회화훈련-인턴');\n                            }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                        </div>\n\n                    </div>\n                    <table id=\"script-print-table\">\n                        <thead>\n                            <tr >\n                                <td >일자</td>\n                                <td >No.</td>\n                                <td >한글</td>\n                                <td >영어</td>\n                                <td >확인</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tr}\n                            {/* <tr >\n                                <td rowSpan={3}>&nbsp;&nbsp;&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr> */}\n                        </tbody>\n                    </table>\n\n\n                </div>\n            }\n        </div>\n    );\n};\n\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className=\"tr-day\" >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n}\n\nexport default PrintTable;","\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n\ndayjs.extend(utc)\n\n\n\nexport default dayjs;\n","import extend from 'deep-extend';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport { firebaseConfig } from \"../env\";\nimport EventEmitter, { Event } from \"../core/EventEmitter\";\nimport Days from '../core/Days';\n// import Days from '../core/Days';\n\nfirebase.initializeApp(firebaseConfig);\n\nclass FBase {\n    userInfo: any = 'loading';// loading인 경우 아예 정보 받기 전임\n    initUserInfoMerge: boolean = false;\n    userMoreInfo: {\n        joindate: string,\n        email: string,\n        uid: string,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        // buyCourses: string[],\n        subscriptionInfo: string,\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        doneSentense: string[],\n        historyClips: string[],\n    } = {\n            joindate: '',\n            email: '',\n            uid: '',\n            repeatMode: '1',\n            // buyCourses: [],\n            subscriptionInfo: '',// null\n            showClips: [],\n            keepClips: [],\n            keepSentense: [],\n            doneSentense: [],\n            historyClips: [],\n        };\n    initLogin() {\n        authService.onAuthStateChanged((user) => {\n\n            // console.log('authService', user);\n\n            this.userInfo = user;\n\n            // 사용자 셋팅정보 조회\n            // 정보가 null인 경우 기본 정보 생성\n            // 있는경우 정보 덮어씌우기\n            if (this.userInfo) {\n\n                const docName = this.makeDocNameWithUserInfo();\n\n                dbService.collection('userstatus').doc(docName).get().then((docs: any) => {\n                    // console.log('tmplog_authService3');\n                    // console.log('docs.data()', docs.data());\n                    const data = docs.data();\n                    // console.log('docs.data()', docName, data);\n                    if (data) {\n                        // data.uid = this.userMoreInfo.uid;\n                        // console.log('docs.data()1');\n                        this.userMoreInfo = extend(this.userMoreInfo, data);\n                    } else {\n                        // console.log('docs.data()2');\n                        // 최초 진입(데이터 생성)\n                        this.userMoreInfo.joindate = Days.utc().local().format('YYYYMMDD')\n                        // this.userMoreInfo = this.userMoreInfo;\n                        this.syncMoreInfo();\n                    }\n                    console.log('docs.data()-1');\n\n                    this.userMoreInfo.email = this.userInfo.email;\n                    this.userMoreInfo.uid = this.userInfo.uid;\n                    this.initUserInfoMerge = true;\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                }).catch(function (err) {\n                    // console.log('tmplog_authService4err', err);\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, null);\n                    // if (err.code == 'failed-precondition') {\n                    //     // Multiple tabs open, persistence can only be enabled\n                    //     // in one tab at a a time.\n                    //     // ...\n                    // } else if (err.code == 'unimplemented') {\n                    //     // The current browser does not support all of the\n                    //     // features required to enable persistence\n                    //     // ...\n                    // }\n                });\n                // dbService.collection('userstatus').get().then((docs: any) => {\n                //     let searchUserDocCnt = 0;// 사용자에 대한 문서가 여러개인경우 오류\n                //     docs.docs.forEach((doc: any) => {\n\n                //         const data = doc.data();\n                //         console.log('userMoreInfoa0---', data, data.uid, '-', this.userInfo.uid)\n                //         if (data.uid === this.userInfo.uid) {\n                //             searchUserDocCnt++;\n                //             console.log('userMoreInfoab', this.userMoreInfo, data);\n                //             // 현재 데이터 존재하는경우\n                //             this.userMoreInfo = extend(this.userMoreInfo, data);\n                //         } else {\n                //\n                //         }\n                //         EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n\n                //     })\n                //     // console.log('userMoreInfoac', searchUserDocCnt);\n                //     // // 최초 진입\n                //     // if (searchUserDocCnt === 0) {\n                //     //     // 최초 진입(데이터 생성)\n                //     //     this.userMoreInfo = extend(this.userMoreInfo, {\n                //     //         uid: this.userInfo.uid\n                //     //     });\n                //     //     // 저장\n                //     //     // dbService.collection('userstatus').add(this.userMoreInfo).then((res: any) => {\n                //     //     //     console.log('tmplog_dbsync', res)\n                //     //     // });\n                //     //     this.syncMoreInfo();\n                //     // }\n                //     // // 데이터 중복\n                //     // if (searchUserDocCnt > 1) {\n                //     //     alert('에러' + searchUserDocCnt)\n                //     // }\n                //     // console.log('userMoreInfoarr', this.userMoreInfo)\n                //     // EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                // });\n            } else {\n                console.log('tmplog_authService2');\n                // console.log('userMoreInfoarr2', this.userMoreInfo)\n                EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n            }\n\n\n\n        });\n    }\n\n    isLogin() {\n        let r = true;\n        if (this.userInfo === null || this.userInfo === 'loading') {\n            r = false;\n        }\n        return r;\n    }\n    isSubscriptionInfo(): string {\n\n        // 로그인이 안 된 경우\n        if (!this.isLogin()) {\n            return 'needLogin';\n        }\n        if (!this.userMoreInfo.subscriptionInfo) {\n            return 'needPurchase';\n        }\n        return this.userMoreInfo.subscriptionInfo;\n    }\n\n    // isAvailableBook(cid: string): 'available' | 'needLogin' | 'needPurchase' {\n\n    //     // 로그인이 안 된 경우\n    //     if (!this.isLogin()) {\n    //         return 'needLogin';\n    //     }\n    //     console.log('tmplog_this.userInfo', this.userMoreInfo)\n    //     // 구매 목록에 없는 경우\n    //     if (!this.userMoreInfo.buyCourses.includes(cid)) {\n    //         return 'needPurchase';\n    //     }\n    //     return 'available';\n    // }\n    syncMoreInfo() {\n        console.log('docs.data()-sync');\n        // 유저 로그인 전이면\n        if (!this.userInfo || this.userInfo === '' || this.userInfo === 'loading') {\n            // alert(this.userInfo);\n            return;\n        }\n        // 유저 데이터를 불러오기 전이면\n        if (!this.initUserInfoMerge) return;\n\n        dbService.collection(\"userstatus\").doc(this.makeDocNameWithUserInfo()).set(this.userMoreInfo, { merge: true }).then(function () {\n            console.log(\"Document successfully written!\");\n        });\n    }\n    makeDocNameWithUserInfo() {\n        let id = this.userInfo.email.split('@')[0];\n        const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n        if (reg.test(id)) {\n            id = id.replace(reg, '');\n        }\n        id += 'mXCeNH6A5fjdrDfaOjDe';// 여유있게 자르기위해 랜덤 문자 추가\n        id = id.substr(0, 10);// 10자리로 자름\n        // console.log('this.userInfo.email', this.userInfo.email);\n        return id + this.userInfo.uid;\n    }\n    callLogin(emailPw: {\n        email: string,\n        pw: string,\n    }, callback: (userInfo: any) => void) {\n\n    }\n    sendPasswordResetEmail(email: string) {\n        var auth = firebase.auth();\n        auth.sendPasswordResetEmail(email).then(function () {\n            alert(email + '로 발송된 이메일을 확인 해 주세요.')\n        }).catch((error) => {\n            console.log(error);\n            alert(this.convertErrorMessage(error));\n        });\n    }\n    convertErrorMessage(error: any) {\n        const errorMessage: any = {\n            'auth/invalid-email': '올바른 이메일을 입력하세요.',\n            'auth/invalidNewPw': '입력한 비밀번호가 일치하지 않습니다.',\n            'auth/weak-password': '6자리 이상의 비밀번호를 입력하세요',\n            'auth/wrong-password': '비밀번호가 올바르지 않습니다.',\n            'auth/user-not-found': '해당 가입정보가 없습니다. 정보를 확인 또는 회원가입을 해주세요.',\n            'auth/email-already-in-use': '이미 가입된 이메일입니다.',\n\n        }\n        const convertMessage = errorMessage[error.code]\n        if (convertMessage) {\n            return convertMessage;\n        }\n        console.log(error);\n        return error.message;\n    }\n}\n\nexport default new FBase();\n\n// export const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n// export const storageService = firebase.storage();","export const firebaseConfig = {\n    apiKey: \"AIzaSyBq__j-SvDbukmkLD5CaFo9rKa4706HHJk\",\n    authDomain: \"casetebook.firebaseapp.com\",\n    databaseURL: \"https://casetebook.firebaseio.com\",\n    projectId: \"casetebook\",\n    storageBucket: \"casetebook.appspot.com\",\n    messagingSenderId: \"863352106334\",\n    appId: \"1:863352106334:web:1a3de357b2edff427ef3cf\",\n    measurementId: \"G-0BQB2PPQBE\"\n};\n","import EventEmitter, { Event } from \"../core/EventEmitter\";\n\nexport type TLivePlayInfo = {\n    idx?: number | null,// null이면 실행 안하는 중\n    totalIdx?: number,\n    src?: string,\n    json?: any,\n    st?: number,\n    et?: number,\n    callback?: () => void,\n    repeat?: number,\n    interval?: number,\n    speed?: number,\n    repeatCnt?: number,\n    allplay?: boolean,// 전체듣기\n    // allplayModoshi?: boolean,// 전체반복\n}\nlet audioTimeArr: number[];\nclass ZZAudioProgram {\n    get zzaudio() {\n        return (window as any).zzaudio;\n    }\n    livePlayInfo: TLivePlayInfo = {\n        idx: null,\n        totalIdx: 0,\n        src: '',\n    };\n    presetSrc(src: string) {\n        this.livePlayInfo.src = src;\n        // setTimeout(() => {\n        //     this.livePlayInfo.src = src;\n        //     this.zzaudio.presetSrc(src);\n        // })\n\n    }\n    playEffect(inID: string, inVolume: number) {\n        if (!this.zzaudio) return;\n        this.zzaudio.playEffect(inID, inVolume);\n    }\n    play(param: TLivePlayInfo) {\n\n        const that = this;\n        this.livePlayInfo = Object.assign(this.livePlayInfo, param)\n\n        const idx = this.livePlayInfo.idx = this.livePlayInfo.idx || 0;\n        audioTimeArr = this.livePlayInfo.json.sentense[idx].timeen.split('|');\n        // this.livePlayInfo.repeatCnt = param.repeat;\n        this.livePlayInfo.callback = this.playComplete.bind(that);\n        this.livePlayInfo.st = audioTimeArr[0];\n        this.livePlayInfo.et = audioTimeArr[1];\n        if (param.repeat !== 9999) {\n            if (this.livePlayInfo.repeatCnt) this.livePlayInfo.repeatCnt--;\n        }\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, idx)\n        // EventEmitter.dispatch(Event.SENTENSE_PLAYING,idx)\n        this.zzaudio.play(this.livePlayInfo);\n    }\n    pause() {\n        this.livePlayInfo.idx = null;\n        this.livePlayInfo.allplay = false;\n        this.livePlayInfo.repeat = 0;\n        this.livePlayInfo.repeatCnt = 0;\n        // EventEmitter.dispatch(Event.SENTENSE_PAUSE,this.livePlayInfo.idx)\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, this.livePlayInfo.idx)\n        if (this.zzaudio) this.zzaudio.pause();\n    }\n    setVolume(vol: number) {\n        this.zzaudio.setVolume(vol);\n    }\n\n    async playComplete() {\n        // debugger;\n        // console.log('repeatCnt',livePlayInfo.repeatCnt)\n        //\n\n        const currentSoundTime = (audioTimeArr[1] - audioTimeArr[0]);\n        const intervalTime = (() => {\n            const settingInterval: any = this.livePlayInfo.interval;\n            if (settingInterval === 9999) {\n                return currentSoundTime;// 문장길이 +1초\n            } else {\n                return settingInterval * 1000;// 설정타임\n            }\n        })();\n        if (this.livePlayInfo.allplay || this.livePlayInfo.repeat === 9999) {\n            await delay(intervalTime);\n        }\n\n        EventEmitter.dispatch(Event.SENTENSE_PAUSE, this.livePlayInfo.idx)\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, this.livePlayInfo.idx)\n\n        this.livePlayInfo.repeatCnt = this.livePlayInfo.repeatCnt || 0;\n        if (this.livePlayInfo.repeatCnt > 0) {\n            // this.livePlayInfo.repeat = this.livePlayInfo.repeatCnt;\n\n            this.play(this.livePlayInfo);\n            return;\n        }\n        if (this.livePlayInfo.allplay) {\n            // debugger;\n            // 다음인덱스\n            const idx = this.livePlayInfo.idx || 0;\n\n            if (this.livePlayInfo.totalIdx) {\n                this.livePlayInfo.idx = idx + 1;\n                // 끝에 도달\n                if (this.livePlayInfo.idx >= this.livePlayInfo.totalIdx) {\n                    this.livePlayInfo.idx = 0;\n                }\n            }\n\n            // 반복 cnt복원\n            this.livePlayInfo.repeatCnt = this.livePlayInfo.repeat;\n\n            this.play(this.livePlayInfo);\n            return;\n        }\n        function delay(ms: number): Promise<void> {\n            return new Promise<void>(resolve => {\n                setTimeout(() => {\n                    console.log(`${ms} 밀리초가 지났습니다.`);\n                    resolve()\n                }, ms);\n            });\n        }\n        // if(repeatCnt > 0){\n        //     this.play();\n        //     param.repeatCnt\n        // }\n    }\n\n}\n\n\nexport default new ZZAudioProgram();","import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\nimport qs from 'qs';\nimport Days from '../core/Days';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst mainJSON = require('../resource/mainJSON.json');\nconst key = \"XDVl1SGxRn\";\nconst queryDivideStr = 'AGQpG10Xdk&';\nlet scrollingLazyTime: number = 0;\nlet scrollingTick: any = null;\n\nexport const productTable: any = {\n    \"1m\": {\n        title: \"1개월\",\n        price: 2400,\n        priceQR: '4b001708',\n    },\n    \"3m\": {\n        title: \"3개월\",\n        price: 6000,// 2000*3\n        priceQR: 'bb801565',\n    },\n    \"6m\": {\n        title: \"6개월\",\n        price: 9000,//1500*6\n        priceQR: '119404860',\n    },\n    \"12m\": {\n        title: \"12개월\",\n        price: 14400,// 1200*12,// \n        priceQR: '1c2008196',\n    },\n}\n\nclass Data {\n    isHashURL: boolean = true;\n    mainJSON: any = mainJSON;\n    topicJSON: any;\n    isSentensePressing: boolean = false;\n    gaFrame: any;\n    logCnt: number = 0;\n    public pageShadowingParam: {\n        sentenseEn: string,\n        sentenseKo: string,\n        sentenseIdx: number,\n        topicID: string,\n        totalIdx: number,\n        audioSrc: string,\n    } = {\n            sentenseEn: '',\n            sentenseKo: '',\n            sentenseIdx: -1,\n            topicID: '',\n            totalIdx: 0,\n            audioSrc: '',\n        }\n\n\n    getRootPath() {\n        return '/';\n    }\n\n    parseQuery() {\n        // const queryDivideStr = 'AGQpG10Xdk&';\n        console.log('(window as any).location', (window as any).location);\n        const isHashMode = true;\n        let d = '';\n        if (isHashMode) {\n            const hash = (window as any).location.hash;\n            d = hash.split('?d=')[1];\n        } else {\n            d = (window as any).location.search.substring(3);\n        }\n\n        const incryptString = d.split(queryDivideStr)[0];\n        const etcparam = qs.parse(d.split(queryDivideStr)[1]);\n        const decryptParam = this.decryptURL(incryptString);\n        return Object.assign({}, decryptParam, etcparam);\n    }\n\n    // setParameter => gotoPage\n    gotoPage(inParam: string, inQuery: string) {\n        if (!inQuery || inQuery === '') {\n            window.location.href = '/';\n            return;\n        }\n        // alert('TODO:gotoPage');\n        window.location.href = `#/${inParam}?d=${inQuery}`;\n    }\n    // 코스 메인으로 가기\n    gotoCourseMainPage(cid: string) {\n        const resultItem = this.courseToMainJSON(cid);\n        this.gotoPage('CourseMain', resultItem.query);\n    }\n    gotoTop() {\n        animateScrollTo(0, {\n            elementToScroll: (document as any).querySelector('html')\n        });\n    }\n    dateMyFormat(str: string) {\n        return `${str.substr(0, 4)}.${str.substr(4, 2)}.${str.substr(6, 2)}`\n    }\n    // mainJson에서 해당 코스 목록 조회\n    courseToMainJSON(cid: string) {\n        return mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        });\n    }\n\n    courseToMainIdx(cid: string, tpid: string) {\n        let returnIdx = 0;\n        if (!mainJSON) return returnIdx;\n        const findMainJSON = mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n            // console.log('item.courseID === cid', item.courseID, cid);\n            // if (item.courseID === cid) {\n            //     returnIdx = i;\n            // }\n        });\n        console.log('findMainJSONfindMainJSON,', findMainJSON);\n        // findMainJSON.item.forEach((item: any, i: number) => {\n\n        // })\n        return returnIdx;\n    }\n\n    // 이전/다음 가기\n    gotoNextPrev(idx: number, cid: string, dir: 'next' | 'prev') {\n        const resultItem = mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        })\n        if (idx === 0 && dir === 'prev') {\n            alert('이전 목록이 없습니다.(첫 번째 토픽)');\n            return;\n        }\n        if (idx === resultItem.item.length && dir === 'next') {\n            alert('마지막 목록 입니다.');\n            return;\n        }\n        const overIdx = dir === 'next' ? 1 : -1;\n        const nextItem = resultItem.item[idx + overIdx];\n        if (!nextItem) {\n            alert((dir === 'next' ? '다음' : '이전') + \" 목록이 없습니다.\");\n            return;\n        }\n\n        this.gotoPage('CoursePlay', resultItem.item[idx + overIdx].query);\n    }\n    setClipHistory(tpid: string) {\n\n        if (!fbase.userMoreInfo.historyClips) {\n            fbase.userMoreInfo.historyClips = [];\n        }\n\n        const arr = fbase.userMoreInfo.historyClips.filter((item: string) => {\n            // 동일 히스토리 존재하면 제거 \n            return item !== tpid;\n        })\n\n        arr.push(tpid);\n\n        fbase.userMoreInfo.historyClips = arr;\n        // debugger;\n        // appBridge.syncStorageData();\n        fbase.syncMoreInfo();\n    }\n    setSettingKeepClipSentense(\n        type1: 'clip' | 'sentense' | 'done',\n        type2: 'add' | 'remove',\n        value: any) {\n        console.log('setSettingKeepClipSentense', type1, type2, value);\n        let arr: string[] = [];\n        let newArr: string[] = [];\n        if (type1 === 'clip') {\n\n            arr = fbase.userMoreInfo.keepClips;\n        } else if (type1 === 'sentense') {\n            arr = fbase.userMoreInfo.keepSentense;\n        } else if (type1 === 'done') {\n            arr = fbase.userMoreInfo.doneSentense;\n        }\n        if (arr.includes(value)) {\n            // 포함되어있을때 삭제 케이스 \n            if (type2 === 'remove') {\n                // 삭제 \n                newArr = arr.filter((item, i) => {\n                    return item !== value;\n                });\n            }\n\n        } else {\n            // 불포함인데 포함 케이스 \n            if (type2 === 'add') {\n                // 포함 \n                arr.push(value)\n                newArr = JSON.parse(JSON.stringify(arr));\n            }\n\n        }\n\n        if (type1 === 'clip') {\n            fbase.userMoreInfo.keepClips = newArr;\n\n        } else if (type1 === 'sentense') {\n            fbase.userMoreInfo.keepSentense = newArr;\n\n        } else if (type1 === 'done') {\n            fbase.userMoreInfo.doneSentense = newArr;\n\n        }\n\n        fbase.syncMoreInfo();\n    }\n    decryptURL(text: string) {\n        try {\n            text = text.substring(7);\n            const bytes = CryptoJS.AES.decrypt(text, key);\n            let parse = null;\n            const make1 = bytes.toString(CryptoJS.enc.Utf8);\n            parse = JSON.parse(make1);\n            return parse;\n        } catch (err) {\n            // console.error(err);\n            return;\n        }\n    }\n    numberWithCommas = (x: number) => {\n        let parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    }\n    showAlert(message: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: 'AlertBasic',\n            message: message,\n        });\n    }\n    showAlertModule(moduleName: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: moduleName\n        });\n    }\n    hideAlert() {\n        EventEmitter.dispatch(Event.HIDE_ALERT, {});\n    }\n    showBuyMessage({\n        courseID\n    }: {\n        courseID: string\n    }) {\n\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: \"AlertNoticeInapp\",\n            courseID: courseID,\n        })\n    }\n\n    showToastMessage(options: {\n        message: string,\n        mtime: number\n    }) {\n        EventEmitter.dispatch(Event.SHOW_TOAST_MESSAGE, options)\n    }\n    async getTopicJSON(cid: string, tpid: string) {\n        // this.topicJSON = await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {}).;\n        return await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {});\n    }\n    // sentense클릭동안 스크롤락 실행\n    sentensePressing() {\n        this.isSentensePressing = true;\n        scrollingLazyTime = 2000;// 2초\n        if (scrollingTick) {\n            clearInterval(scrollingTick);\n        }\n        scrollingTick = setInterval(() => {\n            scrollingLazyTime = scrollingLazyTime - 500;\n            if (scrollingLazyTime <= 0) {\n                this.isSentensePressing = false;\n                scrollingLazyTime = 0;\n                clearInterval(scrollingTick);\n            }\n        }, 500);\n    }\n    // 현재 화면이 스크롤링 중인가?\n    isScrolling(callback: (result: boolean) => void) {\n        const firstY = window.scrollY;\n        setTimeout(() => {\n            if (firstY === window.scrollY) {\n                callback(false);\n            } else {\n                callback(true);\n            }\n        }, 100);\n    }\n    ga(obj: {\n        hitType?: 'event',\n        eventCategory?: string,\n        eventAction: string,\n        eventLabel: string,\n        eventValue: string,\n    }) {\n        this.logCnt++;\n        // localStorage.setItem('karelcnt', logCnt)\n\n\n        const p = Object.assign({\n            hitType: 'event', //이벤트 종류 \n            // eventCategory: appBridge.settingInfo.kuid, //화면명(나는 고객 아이디) \n            // eventCategory: this.gaPageName, //화면명(나는 고객 아이디) \n            // eventAction: this.gaPageSubName, //서브화면명 \n            eventLabel: '', //이벤트명\n            eventValue: '',\n        }, obj);\n        // if (!p.eventCategory || String(p.eventCategory) == 'null') p.eventCategory = KUID;\n        // p.eventAction = logYMD + '#' + logCnt + '#' + p.eventAction;\n        // ka.log('ga:', p);\n        // 로컬 테스트는 로그 안쌓도록 \n        const host = (window as any).location.host;\n        if (host.indexOf('172.20.10') != -1) return;\n        if (host.indexOf('10.0.1') != -1) return;\n\n\n        if (this.gaFrame) {\n\n            // (this.gaFrame as any).eventLog(p);\n            this.gaFrame.postMessage(p, '*');\n        }\n\n        // ga('send', p.hitType, p.eventCategory, );\n        // (window as any).gtag(\n        //     p.hitType,\n        //     p.eventAction, {\n        //     event_category: p.eventCategory,\n        //     event_label: p.eventLabel\n        // })\n    }\n    // 구독상태 empty: 정보없음 on:구독중 expired01:기간만료\n    getSubscriptionState(infoStr: string) {\n        let subscriptionType = 'empty';\n        if (['needLogin', 'needPurchase'].includes(infoStr)) {\n            subscriptionType = infoStr;\n        } else {\n            let todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n            const infoArr = infoStr.split('##');\n\n            let [productCD, stStr, edStr] = infoArr;\n            if (infoArr.length === 3) {\n                if (productCD.substr(0, 1) === 't') {\n                    // 임시코드인 경우 \n                    productCD = productCD.substr(1);\n                }\n                const productCDtoStr: string = productTable[productCD].title;\n                subscriptionType = 'on'\n\n                if (todayInt > parseInt(edStr)) {\n                    // 기간 지난경우\n                    subscriptionType = 'expired01';\n\n                }\n            } else {\n                subscriptionType = 'empty';\n\n            }\n\n        }\n        return subscriptionType;\n    }\n    sendTelelog(inMessage: string) {\n        // https://us-central1-loop-fa69b.cloudfunctions.net/sendTelegraf?message=testmessage\n        axios.get('https://us-central1-loop-fa69b.cloudfunctions.net/sendTelegraf', {\n            params: {\n                message: `${inMessage}`\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n            .finally(function () {\n                // always executed\n            });\n    }\n}\n\nexport default new Data();","import React from 'react';\nimport data from '../core/data';\nconst AlertBasic = () => {\n    return (\n        <div>\n            AlertBasic\n            <button onClick={() => {\n                data.hideAlert();\n            }}>close</button>\n        </div>\n    );\n};\n\nexport default AlertBasic;","import classnames from \"classnames\";\nimport QRCode from \"qrcode.react\";\nimport React, { useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n\n    MobileView\n} from \"react-device-detect\";\n// import core from '../core/Core';\nimport data from '../core/data';\nimport fbase from \"../fb/fbase\";\n\nconst AlertBuyProduct = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n    // const [isQRInit, setIsQRInit] = useState(false);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    let price = '';\n\n\n\n\n\n    const courseInfoJSON = data.mainJSON.filter((item: any, i: number) => {\n        console.log('data.leftJSON', item.courseID, openParam.courseID)\n        return item.courseID === openParam.courseID;\n    })[0];\n\n    const qrurl = `https://qr.kakaopay.com/281006012180682200001379${courseInfoJSON.pricesCode[0]}`;\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 30 * 1000);\n    }\n\n    return (\n        <div className=\"AlertBuyProduct\">\n            <div className=\"header\">\n                <div className=\"title\">\n                    카카오페이 송금결제\n                </div>\n                <button className=\"btn btn-close\" onClick={() => {\n                    data.hideAlert();\n                }}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <div className=\"message\">\n                {courseInfoJSON.title}( {courseInfoJSON.prices[0]}원 )\n            </div>\n\n            <div className=\"step step1\">\n\n                <div className=\"step1-in\">\n                    <BrowserView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,<br></br>\n                                <small className=\"small\">카카오톡 송금 창 메세지 입력란에 <br></br>\n                            가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.</small>\n                            </li>\n                            <li className=\"qr-container\">\n                                {\n                                    stepCD > 0\n                                        ?\n                                        <QRCode value={qrurl} />\n                                        :\n                                        <div className=\"btn-create-qr\" onClick={() => {\n                                            setStepCD(1);\n\n                                        }}>\n                                            <div className=\"cover\">\n                                                <i className=\"fas fa-redo-alt\"></i>\n                                                <div className=\"desc\">송금코드생성</div>\n                                            </div>\n                                            <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                        </div>\n                                }\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </BrowserView>\n                    <MobileView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                            <li className=\"qr-container\">\n                                <a onClick={() => {\n                                    setTimeout(() => {\n                                        setStepCD(2);\n                                    }, 15 * 1000);\n                                }} className=\"btn-confirm\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </MobileView>\n                    {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n                </div>\n            </div>\n            <div className=\"step step2\">\n                {/* <div className=\"title\">STEP02-확인요청</div>\n                <div className=\"step2-in\">\n                    <button className={classnames([\"btn-confirm\",`stepCD-${stepCD}`])} onClick={() => {\n                        if(stepCD < 2){\n                            alert('송금코드 생성 > 카카오페이결제 > 결제 완료 후 승인요청을 해주세요.');\n                            return;\n                        }\n\n                    }}>승인요청</button>\n                </div> */}\n                <div className=\"notice\">\n                    문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n                <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                    if (stepCD < 2) {\n                        alert('결제 완료 후 승인요청을 해주세요.');\n                        return;\n                    }\n                    alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n                    console.log('fbasesssInfo', fbase.userMoreInfo);\n                }}>승인요청</button>\n            </div>\n\n\n\n            {/* <button className=\"btn-confirm\" onClick={() => {\n                core.hideAlert();\n                core.insertPage(\"PageMenu\");\n            }}>구매 진행</button> */}\n\n        </div>\n    );\n};\n\nexport default AlertBuyProduct;","import classnames from 'classnames';\nimport { send } from 'process';\nimport QRCode from \"qrcode.react\";\nimport React, { useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n    MobileView\n} from \"react-device-detect\";\nimport { atom, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport data, { productTable } from '../core/data';\nimport Days from '../core/Days';\nimport fbase from '../fb/fbase';\n\nconst paymentStepState = atom({\n    key: \"paymentStepState\",\n    default: 0,\n})\nconst selectPlanState = atom({\n    key: \"selectPlanState\",\n    default: '',\n})\n\nconst sendTelemessage = ({\n    sendTitle,\n    email,\n    uid,\n    priceCode,\n    moreStr,\n}: {\n    sendTitle: string,\n    email: string\n    uid: string\n    priceCode: string,\n    moreStr: string,\n}) => {\n    data.sendTelelog(`${sendTitle}::${email}##${uid}##${priceCode}##${moreStr}`)\n}\nconst AlertBuyProduct2 = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n\n    const paymentStep = useRecoilValue(paymentStepState);\n\n    return (\n        <div className=\"AlertBuyProduct2\">\n            {paymentStep === 0 && <PayStep01 />}\n            {paymentStep === 1 && <PayStep02 />}\n        </div>\n    );\n};\n\nconst PayStep01 = () => {\n    const setPaymentStep = useSetRecoilState(paymentStepState);\n    const [selectPlan, setSelectPlan] = useRecoilState(selectPlanState);\n    return (<div className=\"PayStep01\">\n        <div className=\"header\">\n            <div className=\"title\">\n                구독기간 선택\n                </div>\n            <button className=\"btn btn-close\" onClick={() => {\n                data.hideAlert();\n            }}><i className=\"fas fa-times\"></i></button>\n        </div>\n        <div className=\"notice\">\n            안녕하세요. 해당 서비스를 만든 개발자입니다.<br></br>\n                부득이하게 서버 운영을 위해 전체 코스는 <br></br>소정의 비용을 받고 있습니다. <br></br>\n                이용의 개선점이나 불편함은 언제든 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 알려주세요. <br></br>\n\n        </div>\n        <ul className=\"plan-list\">\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '1m' }])} onClick={() => {\n                setSelectPlan('1m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>1개월 구독<div className=\"price\">{data.numberWithCommas(productTable['1m'].price)}원<span className=\"per-month\">(=2,400원/월)</span></div></div>\n\n            </li>\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '3m' }])} onClick={() => {\n                setSelectPlan('3m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>3개월 구독<div className=\"price\">{data.numberWithCommas(productTable['3m'].price)}원<span className=\"per-month\">(=2,000원/월)</span></div></div>\n\n            </li>\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '6m' }])} onClick={() => {\n                setSelectPlan('6m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>6개월 구독<div className=\"price\">{data.numberWithCommas(productTable['6m'].price)}원<span className=\"per-month\">(=1,500원/월)</span></div></div>\n\n            </li>\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '12m' }])} onClick={() => {\n                setSelectPlan('12m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>12개월 구독<div className=\"price\">{data.numberWithCommas(productTable['12m'].price)}원<span className=\"per-month\">(=1,200원/월)</span></div></div>\n            </li>\n        </ul>\n        <div className=\"footer\">\n            <button className={classnames([\"btn-confirm\", { active: selectPlan !== '' }])} onClick={() => {\n                if (selectPlan === '') {\n                    alert('구독기간을 선택해 주세요.');\n                    return;\n                }\n                // console.log('fbase.userMoreInfo', fbase.userMoreInfo)\n                sendTelemessage({\n                    sendTitle: '결제진행버튼',\n                    email: fbase.userMoreInfo.email,\n                    uid: fbase.userMoreInfo.uid,\n                    priceCode: selectPlan,\n                    moreStr: '',\n                });\n                setPaymentStep(1)\n            }}>결제진행</button>\n        </div>\n\n    </div>);\n}\n\nconst PayStep02 = () => {\n    const [buyStep, setBuyStep] = useState(0);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    const [selectPlan, setSelectPlan] = useRecoilState(selectPlanState);\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 15 * 1000);\n    }\n    const qrurl = 'https://qr.kakaopay.com/281006012180682200001379' + productTable[selectPlan].priceQR;\n    return (<div className=\"PayStep02\">\n        <div className=\"header\">\n            <div className=\"title\">\n                <img className=\"kakaopay-logo\" src=\"https://img.etnews.com/photonews/2009/1337259_20200915103744_396_0001.jpg\"></img>카카오페이 송금결제\n                </div>\n            <button className=\"btn btn-close\" onClick={() => {\n                data.hideAlert();\n            }}><i className=\"fas fa-times\"></i></button>\n        </div>\n\n        <div className=\"message\">\n            {productTable[selectPlan].title} 구독( {data.numberWithCommas(productTable[selectPlan].price)}원 )\n            </div>\n\n        <div className=\"step step1\">\n\n            <div className=\"step1-in\">\n                <BrowserView>\n                    <ul>\n                        <li className=\"title\">\n                            <div className=\"message-no\">\n                                <div className=\"bullet-no\">1</div>\n                                <div>휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,</div>\n                            </div>\n\n                            <div className=\"small\">\n                                <div>카카오톡 송금 창 메세지 입력란에</div>\n                                <div>가입하신 이메일({fbase.userMoreInfo.email})을 꼭 입력해 주세요.</div>\n                            </div>\n\n                        </li>\n                        <li className=\"qr-container\">\n                            {\n                                stepCD > 0\n                                    ?\n                                    <QRCode value={qrurl} />\n                                    :\n                                    <div className=\"btn-create-qr\" onClick={() => {\n                                        setStepCD(1);\n\n                                    }}>\n                                        <div className=\"cover\">\n                                            <i className=\"fas fa-redo-alt\"></i>\n                                            <div className=\"desc\">송금코드생성</div>\n                                        </div>\n                                        <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                    </div>\n                            }\n\n                        </li>\n                        <li className=\"title\">\n                            <div className=\"message-no\">\n                                <div className=\"bullet-no\">2</div>\n                                <div>결제 후 승인요청 버튼을 눌러주세요.</div>\n                            </div>\n\n                        </li>\n                    </ul>\n\n                </BrowserView>\n                <MobileView>\n                    <ul>\n                        <li className=\"title\">\n                            <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                        <li className=\"qr-container\">\n                            <a onClick={() => {\n                                setTimeout(() => {\n                                    setStepCD(2);\n                                }, 15 * 1000);\n                            }} className=\"btn-gotokakao\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                        </li>\n                        <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                    </ul>\n\n                </MobileView>\n                {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n            </div>\n        </div>\n\n        <div className=\"step step2\">\n            <div className=\"notice\">\n                문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n            <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                if (stepCD < 2) {\n                    alert('결제 완료 후 승인요청을 해주세요.');\n                    return;\n                }\n                alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n                const monNum = ({\n                    \"1m\": 1,\n                    \"3m\": 3,\n                    \"6m\": 6,\n                    \"12m\": 12\n                } as any)[selectPlan];\n                const todayStr = Days.utc().local().format('YYYYMMDD');\n                const enddayStr = Days(todayStr).add(monNum, 'month').format('YYYYMMDD')\n                const fbasesubscriptionInfo = `t${selectPlan}##${todayStr}##${enddayStr}`;\n                fbase.userMoreInfo.subscriptionInfo = fbasesubscriptionInfo;\n                sendTelemessage({\n                    sendTitle: '승인요청',\n                    email: fbase.userMoreInfo.email,\n                    uid: fbase.userMoreInfo.uid,\n                    priceCode: selectPlan,\n                    moreStr: fbasesubscriptionInfo,\n                });\n                fbase.syncMoreInfo();\n                setTimeout(() => {\n                    data.hideAlert();\n                    window.location.reload();\n                }, 1000);\n            }}>승인요청</button>\n        </div>\n\n    </div>);\n}\n\n// export default AlertBasic;\nexport default AlertBuyProduct2;","import React, { useEffect, useState } from 'react';\nimport AlertBasic from '../components/AlertBasic';\nimport EventEmitter, { Event } from '../core/EventEmitter';\n// import AlertNoticeInapp from '../components/AlertNoticeInapp';\nimport AlertBuyProduct from '../components/AlertBuyProduct';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n// import { sentenseRepeatIdxState } from '../core/store';\nimport data from '../core/data';\nimport AlertBuyProduct2 from '../components/AlertBuyProduct2';\n\nlet openParam: any = null;\nconst Alert = () => {\n    const [moduleName, setModuleName] = useState('');\n    // const [updatePagePlaylist, setUpdatePagePlaylist] = useRecoilState(updatePagePlaylistState);\n    // const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_ALERT, (options: any) => {\n            openParam = options;\n            setModuleName(options.moduleName);\n            if (options.moduleName === 'AlertNoticeInapp') {\n                // setUpdatePagePlaylist(updatePagePlaylist + 1);\n                // setSentenseRepeatIdxState(9999);\n                // data.setCurrPlayBtnState('stop');\n            }\n\n        });\n        EventEmitter.subscribe(Event.HIDE_ALERT, (options: any) => {\n            setModuleName('');\n\n        });\n    }, [])\n\n    const AlertModule = (() => {\n\n        switch (moduleName) {\n            case 'AlertBasic':\n                return <AlertBasic key=\"AlertBasic\" />;\n                break;\n\n            case 'AlertBuyProduct':\n                return <AlertBuyProduct key=\"AlertBuyProduct\" openParam={openParam} />;\n                break;\n\n            case 'AlertBuyProduct2':\n                return <AlertBuyProduct2 key=\"AlertBuyProduct2\" openParam={openParam} />;\n                break;\n        }\n    })();\n    return (\n        <>\n            {\n                moduleName !== '' && <div className=\"view-Alert\">\n                    {AlertModule}\n                </div>\n            }\n        </>\n    );\n};\n\nexport default Alert;\n\n\n","import classnames from 'classnames';\nimport { padStart as _pad } from 'lodash';\nimport React from 'react';\nimport data from '../core/data';\n// import core from '../core/Core';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n// import fbase from '../fb/fbase';\n\nconst WCourseItem = ({\n    viewType,\n    itemJSON,\n    courseID,\n    idx,\n}: {\n    viewType: string,\n    itemJSON: any,\n    courseID: string,\n    idx: number,\n}) => {\n    // console.log('WCourseItem',viewType,itemJSON,idx);\n    if (viewType === 'movie') {\n        console.log('WCourseItem', itemJSON.tit);\n    }\n    // const isAvailableBook = fbase.isAvailableBook(courseID); // needPurchase, available, needLogin\n    const isSubscriptionInfo = fbase.isSubscriptionInfo();\n    const getSubscriptionState = data.getSubscriptionState(isSubscriptionInfo);\n    console.log('isSubscriptionInfo', isSubscriptionInfo)\n    return (\n        <>\n            {\n                viewType === 'movie'\n                    ?\n                    <CItemMovie isSubscriptionInfo={getSubscriptionState} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItemMovie' + idx} />\n                    :\n                    <CItem isSubscriptionInfo={getSubscriptionState} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItem' + idx} />\n            }\n            {/* <CItem itemJSON={itemJSON} idx={idx} key={idx} /> */}\n        </>\n    );\n};\n\nconst CItemMovie = (\n    {\n        itemJSON,\n        courseID,\n        isSubscriptionInfo,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isSubscriptionInfo: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem movie\" onClick={() => {\n            // alert(itemJSON.query);\n\n            if (!isTrial && isSubscriptionInfo !== 'on') {\n                // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                // if (process.env.NODE_ENV === 'development') {\n                //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n                //         moduleName: \"AlertBuyProduct\",\n                //         courseID: courseID,\n                //     });\n                // }\n\n                // return;\n\n                if (isSubscriptionInfo === 'needLogin') {\n                    data.showToastMessage({\n                        message: \"로그인이 필요한 서비스입니다.\",\n                        mtime: 3000\n                    });\n                    EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                        from: \"buyProduct\",\n                        courseID: courseID,\n                    });\n                } else {\n                    // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct2\",\n                        courseID: courseID,\n                    });\n                }\n                return;\n            }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {/* {isAvailableBook} */}\n                {isTrial && isSubscriptionInfo !== 'on' && <div className=\"mark-trial\">\n                    무료보기\n                </div>}\n                <img className={classnames([\"img\", { trial: isTrial }])} src={`/resource/courses/${courseID}/thumb/a${idxPad}.jpg`}></img>\n                <div className=\"sceneno\">\n                    <div className=\"t1\">DAY</div>\n                    <div className=\"t2\">{idxPad}</div>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n\n        </li>\n    );\n}\nconst CItem = (\n    {\n        itemJSON,\n        courseID,\n        isSubscriptionInfo,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isSubscriptionInfo: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem normal\" onClick={() => {\n            // alert(itemJSON.query);\n\n            if (!isTrial && isSubscriptionInfo !== 'on') {\n                // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                // if (process.env.NODE_ENV === 'development') {\n                //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n                //         moduleName: \"AlertBuyProduct\",\n                //         courseID: courseID,\n                //     });\n                // }\n\n                // return;\n\n                if (isSubscriptionInfo === 'needLogin') {\n                    data.showToastMessage({\n                        message: \"로그인이 필요한 서비스입니다.\",\n                        mtime: 3000\n                    });\n                    EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                        from: \"buyProduct\",\n                        courseID: courseID,\n                    });\n                } else {\n                    // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                        moduleName: \"AlertBuyProduct2\",\n                        courseID: courseID,\n                    });\n                }\n                return;\n            }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {isTrial && isSubscriptionInfo !== 'on' && <div className=\"mark-trial\">\n                    무료보기\n                </div>}\n\n                <div className=\"sceneno\">\n                    <span className=\"t1\">DAY</span>\n                    <span className=\"t2\">{idxPad}</span>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">\n                <div className=\"sentense\">[{itemJSON.tit[0]}]</div>\n                <div className=\"sentense\">{itemJSON.tit[1]}</div>\n            </div>\n\n        </li>\n    );\n}\nexport default WCourseItem;","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport WCourseItem from './WCourseItem';\nconst WCourse = ({\n    json,\n    parentName,\n}: {\n    json: any\n    parentName: string,\n}) => {\n    let viewType = 'normal';\n    const courseID = json.courseID;\n    const topics = json.item.map((item2: any, i2: number) => {\n        if (json.itemViewType) {\n            viewType = json.itemViewType;\n        }\n        return <WCourseItem\n            viewType={viewType}\n            itemJSON={item2}\n            courseID={courseID}\n            idx={i2}\n            key={courseID + i2}\n        />\n\n    })\n    const isShowTitle = parentName === 'CourseMain' ? false : true;\n    const [isHide, setIsHide] = useState(parentName === 'CourseMain' ? false : true);\n    return (\n        <div className=\"Course\">\n            {\n                //\n                isShowTitle && <h3 className=\"title\" onClick={() => {\n                    setIsHide(!isHide);\n                }}>\n                    <Tags str={json.tags} key={courseID} />\n                    {\n                        isHide ? <i className=\"fas fa-plus i-icon\"></i> : <i className=\"fas fa-minus i-icon\"></i>\n                    }\n                    {json.title}\n                    <span className=\"badge\">{json.item.length}</span>\n                </h3>\n            }\n            <ul className={classnames(['slideup', { \"hide\": isHide }])}>\n                {!isHide && topics}\n            </ul>\n\n        </div>\n    );\n};\n\n\nconst Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WCourse;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React from 'react';\nimport data from '../core/data';\nimport fbase from '../fb/fbase';\nimport {\n    BrowserView, isBrowser,\n    MobileView\n} from \"react-device-detect\";\n\nlet uniqCnt = 0;\nconst PageHome = () => {\n    // data.topicMainJSON = topicMainJSON;\n    const course1 = data.mainJSON.map((item1: any, i: number) => {\n        if (item1.isHomeList === \"true\") {\n            return <CourseItem json={item1} key={uniqCnt++} />\n        }\n\n    });\n    return (\n        <div className=\"PageHome\">\n            <div className=\"notice\">\n                <BrowserView>\n                    <div className=\"tit-main\">\n                        <div className=\"pc-br\">나는 빈도 높은 표현만 뽑아서 </div>\n                        <div className=\"pc-br\"><span className=\"em\">❝카셋❞으로 반복 쉐도잉</span> 한다!</div>\n                    </div>\n                    <div className=\"tit-sub\">\n                        <div className=\"pc-br\">다양한 영어 공부 방법 중 쉐도잉에 집중하였습니다.</div>\n                        <div className=\"pc-br\">쉐도잉에 최적화된 표현을 선별한 반복 학습 플레이어를 경험하세요.</div>\n                    </div>\n                </BrowserView>\n                <MobileView>\n                    <div className=\"tit-main\">\n                        나는 빈도 높은 표현만 뽑아서 <span className=\"em\">❝카셋❞으로 반복 쉐도잉</span> 한다!\n                    </div>\n                    <div className=\"tit-sub\">\n                        다양한 영어 공부 방법 중 쉐도잉에 집중하였습니다. 쉐도잉에 최적화된 표현을 선별한 반복 학습 플레이어를 경험하세요.\n                    </div>\n                </MobileView>\n\n                <button onClick={() => {\n                    data.gotoPage('CourseMain', 'fOICLMmU2FsdGVkX1/4I7rfm74h2kmq+Q4IVv7MCO6OQUOvV+WSk/YThnQu8EQAqMped1ANlDHsQuCZHUjXi/3kfRTvqg==');\n                }} className=\"btn btn-start-free\">무료 토픽으로 시작하기 <i className=\"fas fa-long-arrow-alt-right\"></i></button>\n            </div>\n\n            <ul className=\"course-list\">\n                {course1}\n            </ul>\n        </div>\n    );\n};\n\nconst CourseItem = ({\n    json\n}: {\n    json: any\n}) => {\n    const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n    // const isOwner: boolean = true;\n\n    return (\n        <>\n\n            <li className=\"course-item\" onClick={() => {\n                data.gotoPage('CourseMain', json.query);\n            }}>\n                <div className={classnames([\"cover-img\", css`\n                background-image: url(\"${data.getRootPath()}resource/courses/${json.courseID}/cover.png\");\n            `])}>\n                    <div className={classnames([\"tag-iscomplete\", { ing: json.isMakeComplete === \"false\" }])}>\n                        {json.isMakeComplete === \"false\" ? \"연재중\" : \"연재완료\"}\n                    </div>\n                </div>\n                <div className=\"info\">\n                    <h3>{json.title}</h3>\n                    <div className=\"info-sub\">\n                        <div className=\"course-num\">{json.item.length}개 코스</div>\n                        <Tags str={json.tags} key={json.courseID} />\n                        {/* <div className=\"btns-func\">\n                            {data.numberWithCommas(parseInt(json.prices[0]))}원\n                            {\n                                isOwner && <span>구매완료</span>\n                            }\n                        </div> */}\n\n                    </div>\n\n\n                </div>\n            </li>\n        </>\n\n    )\n}\n\nexport const Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default PageHome;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport WCourse from '../components/WCourse';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { printCourseIDState } from '../core/store';\nimport fbase from '../fb/fbase';\nimport { Tags } from './PageHome';\n\nconst selfName = \"CourseMain\";\nconst CourseMain = ({\n    location\n}: {\n    location: any\n}) => {\n    useEffect(() => {\n        data.gotoTop();\n    }, [])\n    // const query: any = qs.parse(location.search, {\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [render, setRender] = useState(0);\n    const d = location.search.substring(3);\n    const decryptQuery = data.decryptURL(d);\n    const cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n    EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n        setRender(Math.random());\n    });\n    ZZAudioProgram.pause();\n    return (\n        <div>\n            {\n                cid\n                    ?\n                    <CourseMainList cid={cid} />\n                    :\n                    <div>\n                        없는 경로 입니다.<br></br>\n                        <button onClick={() => {\n                            data.gotoPage('/', '')\n                        }}>메인페이지로 돌아가기</button>\n                    </div>\n            }\n        </div>\n    );\n};\n\nconst CourseMainList = ({\n    cid\n}: {\n    cid: string\n}) => {\n    const setprintCourseID = useSetRecoilState(printCourseIDState);\n    const mainJSONFilter = data.mainJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    const courseItemListJSON = mainJSONFilter[0];\n    const getSubscriptionState = data.getSubscriptionState(fbase.isSubscriptionInfo());\n    const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n\n    return (\n        <div className=\"CourseMainList\">\n            <div className={css`height:20px;`}></div>\n            <div className=\"contents\">\n                <div className=\"course-item\">\n                    <div className={classnames([\"cover-img\", css`\n                        background-image: url(\"${data.getRootPath()}resource/courses/${courseItemListJSON.courseID}/cover.png\");\n                    `])}>\n                    </div>\n                    <div className=\"info\">\n                        <h3>{courseItemListJSON.title}</h3>\n                        <div className=\"info-sub\">\n                            <div>{courseItemListJSON.item.length}개 코스</div>\n                            <div className=\"tags\">\n                                <Tags str={courseItemListJSON.tags} key={courseItemListJSON.courseID} />\n                            </div>\n                            {/* {\n                                isOwner\n                                    ?\n                                    <div>구매완료</div>\n                                    :\n                                    <button className=\"btn btn-border\">구매 1,300원</button>\n                            } */}\n                        </div>\n\n\n                    </div>\n                </div>\n                <div className=\"list-header\">\n                    <div className=\"list-info\">{courseItemListJSON.item.length}개 코스</div>\n                    <div className=\"funcs\">\n                        <button className=\"btn\" onClick={() => {\n                            // alert(courseItemListJSON.courseID)\n                            // setprintCourseID(courseItemListJSON.courseID);\n                            // data.gotoPage('CoursePrint',)\n                            window.location.href = `#/CoursePrint?id=${courseItemListJSON.openID}`;\n                        }}><i className=\"fas fa-table\"></i> 엑셀 & 프린트</button>\n                    </div>\n                </div>\n                {cid && <WCourse json={courseItemListJSON} parentName={selfName} />}\n            </div>\n        </div>\n    );\n}\n\nexport default CourseMain;","import React from 'react';\n\nconst Equalizer = () => {\n    return (\n        <div className=\"equalizer\">\n            <span className=\"eq1\"></span>\n            <span className=\"eq2\"></span>\n            <span className=\"eq3\"></span>\n        </div>\n    );\n};\n\nexport default Equalizer;","import React from 'react';\n\nconst LoadingDom = () => {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"lds-ellipsis\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingDom;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\nlet sentense = \"\";\nlet sentenseSplit: string[] = [];\nlet correctArr: string[] = [];// 답안지\nlet shuffleWords: TWord[] = [];\n\nconst MDictation = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    if (sentense !== sentenseEn) {\n        sentense = sentenseEn;\n        sentenseSplit = sentense.split(' ');\n        correctArr = sentenseSplit.slice(0);// 답안지\n        shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n            return {\n                word: item,\n                oriIdx: i,\n            }\n        }));\n    }\n\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const words = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('Wrong~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('Complete!!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    return (\n        <div className=\"MDictation\">\n            <h2>섀도잉 & 딕테이션</h2>\n            {/* <div>\n                {sentense}\n            </div> */}\n\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            <div className=\"sentenseKo\">\n                {sentenseKo}\n            </div>\n            <div className=\"words\">\n                {!isComplete && words}\n            </div>\n            <div className=\"ditaction-func\">\n                <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>Hint</button>\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>Reset</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"message-box\">\n                    <div>\n                        <div>{message}</div>\n                        {message.substr(0, 8) === 'Complete' && <div className=\"lets-shadowing\">Let's shadowing!!</div>}\n                    </div>\n\n                </div>\n            </div>}\n        </div>\n    );\n};\n\nexport default MDictation","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\n// import appBridge from './core/AppBridge';\nimport data from '../core/data';\n// import lang from \"./core/i18n\";\nimport { isShowShadowingState } from '../core/store';\nimport Equalizer from './Equalizer';\nimport MDictation from './MDictation';\n\nconst selfName = 'PageShadowing';\nlet temprepeatMode: any;\nconst PageShadowing = () => {\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    useEffect(() => {\n\n        ZZAudioProgram.play({\n            idx: data.pageShadowingParam.sentenseIdx,\n            totalIdx: data.pageShadowingParam.totalIdx,\n            src: data.pageShadowingParam.audioSrc,\n            repeat: 9999,\n            repeatCnt: 9999,\n            allplay: false,\n        });\n\n        // temprepeatMode = appBridge.settingInfo.repeatMode;\n        // appBridge.settingInfo.repeatMode = '1';\n        // data.setCurrPlayBtnState('play');\n        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n\n        // 아이폰에서 푸터가 안나타나서 강제로 스크롤한번\n        (window as any).scrollTo(0, 10);\n        setTimeout(() => {\n            (window as any).scrollTo(0, 0);\n        }, 1000)\n\n        return () => {\n            // data.setCurrPlayBtnState('stop');\n        }\n    }, []);\n    return (\n        <div className=\"PageShadowing\">\n            {/* <PageHeader parentSelf={selfName} /> */}\n            {/* <h2>Shadowing & Dictation</h2> */}\n            <button onClick={() => {\n                ZZAudioProgram.pause();\n                setIsShowShadowing(false);\n            }} className=\"btn btn-close\">\n                <i className=\"fas fa-times\"></i>\n            </button>\n            <MDictation\n                sentenseEn={data.pageShadowingParam.sentenseEn}\n                sentenseKo={data.pageShadowingParam.sentenseKo}\n            />\n            <ControlBtns />\n        </div>\n    );\n};\n\nconst ControlBtns = () => {\n    const [isPlay, setIsPlay] = useState(true);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    ZZAudioProgram.livePlayInfo.interval = interval;\n    ZZAudioProgram.livePlayInfo.speed = speed;\n    // data.playerSetting.interval = interval;\n    // data.playerSetting.speed = speed;\n    const isCheck = false;\n    // const [isCheck, setIsCheck] = useState((() => {\n    //     return appBridge.settingInfo.doneSentense.includes(`${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`);\n    // })());\n\n    const checkClick = (tf: boolean) => {\n        // setIsCheck(tf);\n\n        // const makeKey = `${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`;\n\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     data.pageShadowingParam.sentenseEn\n        // );\n\n    }\n    return (\n        <div className={`func-setting`}>\n            <div className=\"row\">\n                <div className=\"col1\">속도</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 1 }])}\n                        onClick={() => {\n                            setSpeed(1);\n                        }}>x1</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.9 }])}\n                        onClick={() => {\n                            setSpeed(0.9);\n                        }}>x0.9</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.8 }])}\n                        onClick={() => {\n                            setSpeed(0.8);\n                        }}>x0.8</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.7 }])}\n                        onClick={() => {\n                            setSpeed(0.7);\n                        }}>x0.7</button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col1\">간격</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 0 }])}\n                        onClick={() => {\n                            setInterval(0);\n                        }}>0s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1 }])}\n                        onClick={() => {\n                            setInterval(1);\n                        }}>1s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1.5 }])}\n                        onClick={() => {\n                            setInterval(1.5);\n                        }}>1.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2 }])}\n                        onClick={() => {\n                            setInterval(2);\n                        }}>2s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2.5 }])}\n                        onClick={() => {\n                            setInterval(2.5);\n                        }}>2.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 9999 }])}\n                        onClick={() => {\n                            setInterval(9999);\n                        }}>문장길이</button>\n                </div>\n            </div>\n\n\n            <div className=\"footer\">\n                {\n                    isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // data.setCurrPlayBtnState('stop', 'a1');\n                        // appBridge.settingInfo.repeatMode = temprepeatMode;\n                        setIsPlay(false);\n                        ZZAudioProgram.pause();\n                    }}><Equalizer /><span className=\"txt\">Stop</span></button>\n                }\n                {\n                    !isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // temprepeatMode = appBridge.settingInfo.repeatMode;\n                        // appBridge.settingInfo.repeatMode = '1';\n                        // data.setCurrPlayBtnState('play');\n                        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n                        setIsPlay(true);\n                        ZZAudioProgram.play({\n                            idx: data.pageShadowingParam.sentenseIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // totalIdx: totalIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // src: audioSrc, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            repeat: 9999,\n                            repeatCnt: 9999,\n                            allplay: false,\n                        });\n\n                    }}><i className=\"fas fa-retweet\"></i><span className=\"txt\">Play</span></button>\n                }\n\n                {/* <button className=\"btn btn-bookmark\">\n                    {isCheck\n                        ?\n                        <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                            checkClick(false);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                        :\n                        <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                            checkClick(true);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                    }\n                </button> */}\n            </div >\n\n        </div >\n    );\n}\n\nexport default PageShadowing;","import { padStart as _pad } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { setSceneIdxState, isYTModuleState, ytbSentenseHideState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\n\n// let courseIdx = 0;\nconst sentenseRepeat: number = 10;// 문장 반복횟수 즉 듣기+말하기 이므로 결국 (5*2)10번 재생\nlet courseToMainJSON: any = {};\nlet _cid = '';\nlet _tpid = '';\nlet _tpidx = 0;\nconst YTModule = ({\n    cid,\n    tpid,\n    tpidx,\n}: {\n    cid: string,\n    tpid: string,\n    tpidx: number,\n}) => {\n    const setYtbSentenseHide = useSetRecoilState(ytbSentenseHideState);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const [isYTModule, setIsYTModule] = useRecoilState(isYTModuleState);\n    const [update, setUpdate] = useState(0);\n    courseToMainJSON = data.courseToMainJSON(cid);\n    _cid = cid;\n    _tpid = tpid;\n    _tpidx = tpidx;\n    console.log('cid, tpid', cid, tpid);\n    useEffect(() => {\n\n        setIsYTModule(true);\n        // courseIdx = data.courseToMainIdx(cid, tpid);\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n            let cntForRepeat = ZZAudioProgram.livePlayInfo.repeatCnt;\n            if (!cntForRepeat) cntForRepeat = sentenseRepeat * 2;\n            const turnCnt = Math.ceil(cntForRepeat / 2);\n\n            if (turnCnt > 8) {\n                setYtbSentenseHide('00');\n\n            } else if (turnCnt > 6) {\n                setYtbSentenseHide('e0');\n\n            } else {\n                setYtbSentenseHide('ek');\n\n            }\n            const cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n            console.log('iiinfo :: ', cnt, cnt! % 2, ZZAudioProgram.livePlayInfo.idx, ZZAudioProgram.livePlayInfo.totalIdx! - 1);\n            ZZAudioProgram.setVolume(1);\n            if (cnt! % 2 === 1) {\n                ZZAudioProgram.setVolume(0.15);\n            }\n            // 마지막인 경우\n            if (cnt === 0 && ZZAudioProgram.livePlayInfo.idx === ZZAudioProgram.livePlayInfo.totalIdx! - 1) {\n                ZZAudioProgram.pause();\n                setSceneIdx(3);\n            }\n\n            setUpdate(Math.random());\n        })\n    }, [])\n    const ls = ZZAudioProgram.livePlayInfo.repeatCnt! % 2 === 1 ? 'speak' : 'listen';\n    return (\n        <div className=\"YTModule\">\n\n            <SceneIntro />\n            <SceneOuttro />\n            <SceneSentense />\n            <Scene0 />\n\n            {\n                sceneIdx === 2 &&\n                <>\n                    <div className=\"yt-header\">\n                        <div className=\"yt-header-in\">\n                            <span className=\"logo\">카셋 영어 회화</span>\n                            <span className=\"divide\">/</span>\n                            영화 인턴편\n                            <span className=\"divide\">/</span>\n                            <span className=\"day\">DAY{_pad(String(_tpidx + 1), 3, '0')}</span>\n                        </div>\n                    </div>\n\n\n                    <div className=\"yt-footer\">\n                        <div className=\"repeat-cnt\">{(() => {\n                            let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n                            if (!cnt) cnt = sentenseRepeat * 2;\n                            return Math.ceil(cnt / 2);\n                        })()}<span className=\"repeat-cnt-tot\">/{sentenseRepeat}</span></div>\n                        <div className=\"pill-listen-speak\">\n                            <div className=\"pill-item\">듣기</div>\n                            <div className=\"pill-item\">말하기</div>\n                            <div className={`pill-active ${ls}`}>{ls === 'speak' ? '말하기' : '듣기'}</div>\n                        </div>\n\n                    </div>\n                </>\n            }\n\n\n        </div>\n    );\n};\n\nconst Scene0 = () => {\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const pauseAndNextstep = () => {\n        setSceneIdx(sceneIdx + 1);\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 0 && <div className=\"scene scene-0\">\n                <div className=\"scene-in scene-0-in\">\n                    <span className=\"font1\">명조폰트</span>\n                    <span className=\"font2\">고딕폰트</span>\n                    <button onClick={() => {\n                        setTimeout(() => {\n                            setSceneIdx(1);\n                            // ZZAudioProgram.playEffect('mp3-effect1');\n\n                        }, 3000);\n                        data.sendTelelog('test casete hello');\n                    }}>시작</button>\n                </div>\n            </div>}\n        </>\n\n    )\n}\nconst SceneIntro = () => {\n    // debugger;\n    // courseIdx = data.courseToMainIdx(_cid, _tpid);\n\n    const [init, setInit] = useState(false);\n    const [innerScene, setInnerScene] = useState(0);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 1) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n\n            setTimeout(() => {\n                ZZAudioProgram.playEffect('effect_short1', 0.7);\n                // 이너씬 1로 전환\n                setInnerScene(1);\n            }, 3000);\n            setTimeout(() => {\n\n                // 메인씬 2로 전환\n                setSceneIdx(2);\n            }, 8000);\n        }\n\n    }\n    // console.log('ZZAudioProgram.livePlayInfo', ZZAudioProgram.livePlayInfo)\n    return (\n        <>\n            {sceneIdx === 1 && <div className=\"scene scene-intro\">\n                <div className=\"scene-in scene-intro-in\">\n                    {\n                        innerScene === 0 && <div className=\"innerscene0\">\n                            <div className=\"section-main\">\n                                {/* <div className=\"txt0\">카셋 영어 회화</div> */}\n                                <div className=\"txt1\">영화 인턴 편</div>\n                                <div className=\"txt2\"><span className=\"day\">\n                                    {_pad(String(_tpidx + 1), 3, '0')}\n                                </span><div className=\"divide\"></div><div className=\"tot\">51</div></div>\n                            </div>\n                            <div className=\"section-footer\">\n                                <div>카셋 영어 회화</div>\n                            </div>\n                        </div>\n                    }\n                    {\n                        innerScene === 1 && <div className=\"innerscene1\">\n                            <ul>\n                                <li><i className=\"fas fa-check\"></i>총 {courseToMainJSON.item[_tpidx].tit.length}개의 문장</li>\n                                <li><i className=\"fas fa-check\"></i>한 문장당 <div className=\"pill-listen-speak\">\n                                    <div className=\"pill-item\">듣기</div>\n                                    <div className=\"pill-item\">말하기</div>\n                                </div> {sentenseRepeat}세트로 구성</li>\n                            </ul>\n                            <div className=\"txt0\">영화 인턴 <span className=\"pb\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <br></br><span className=\"pb\">카셋 홈페이지</span>를 방문해 주세요.</div>\n                            {/* * 총 3개의 문장\n                            * 1 문장당 [듣고/말하기] 5세트로 구성\n                            *\n                            * 영화 인턴 플레이어 북은 홈페이지를 방문해 주세요. */}\n                        </div>\n                    }\n\n                </div>\n            </div>}\n        </>\n    )\n}\n\nconst SceneSentense = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 2) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n\n            setInit(true);\n            setTimeout(() => {\n\n                // 시작\n                ZZAudioProgram.livePlayInfo.repeat = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.repeatCnt = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.interval = 1;\n\n                ZZAudioProgram.play({\n                    allplay: true,\n                    totalIdx: data.topicJSON.sentense.length,\n                    repeat: ZZAudioProgram.livePlayInfo.repeat,\n                    repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                })\n\n            }, 1000);\n        }\n\n\n    }\n    return (\n        <>\n            {sceneIdx === 2 && <div className=\"scene guide-frame\">\n                <div className=\"scene-in guide-frame-in\"></div>\n            </div>}\n        </>\n    )\n}\nconst SceneOuttro = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 3) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n            ZZAudioProgram.playEffect('effect_ending', 0.5);\n            setTimeout(() => {\n                // 이너씬 1로 전환\n                alert('eot')\n            }, 10000);\n        }\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 3 && <div className=\"scene scene-outtro\">\n                <div className=\"scene-in scene-outtro-in\">\n                    <div>\n                        <div className=\"txt0\"><i className=\"fas fa-check\"></i>영상이 마음에 드셨다면 <span className=\"em\">좋아요,구독</span> 잊지 마세요!</div>\n                        {/* <div className=\"txt1\">채널을 운영하는 힘이 됩니다!</div> */}\n                        <div className=\"txt1\"><i className=\"fas fa-check\"></i>영화 인턴 <span className=\"em\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <span className=\"pb\">카셋 홈페이지</span>방문!</div>\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default YTModule;","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isShowSpeedmateState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\nlet sentenseCnt = 0;\nlet speed = 0.7;\nconst isYTMode = false;\nconst cntSetObj: any = {\n    '0.7': 10,\n    '0.8': 10,\n    '0.9': 10,\n    '1.0': 60,\n    '1': 60,\n    '1.1': 10,\n}\nconst PageSpeedmate = () => {\n    const [isShowSpeedmate, setisShowSpeedmate] = useRecoilState(isShowSpeedmateState);\n    const [update, setUpdate] = useState(0);\n\n    const sentensePauseHandler = () => {\n\n        // let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n        sentenseCnt++;\n        if (isYTMode) {\n            if (sentenseCnt > 90) {\n                speed = 1.1;\n            } else if (sentenseCnt > 30) {\n                speed = 1;\n            } else if (sentenseCnt > 20) {\n                speed = 0.9;\n            } else if (sentenseCnt > 10) {\n                speed = 0.8;\n            }\n        }\n\n        ZZAudioProgram.livePlayInfo.speed = speed;\n        // console.log('ZZAudioProgramcnt', sentenseCnt, ZZAudioProgram.livePlayInfo.speed);\n\n        setUpdate(Math.random);\n\n    }\n    /// dddd-2\n    useEffect(() => {\n\n        ZZAudioProgram.play({\n            idx: data.pageShadowingParam.sentenseIdx,\n            totalIdx: data.pageShadowingParam.totalIdx,\n            src: data.pageShadowingParam.audioSrc,\n            speed: 0.7,\n            repeat: 9999,\n            repeatCnt: 9999,\n            allplay: false,\n        });\n        sentenseCnt = 0;\n        speed = 0.7;\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, sentensePauseHandler);\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PAUSE, sentensePauseHandler);\n        }\n    }, [])\n    /// dddd-3\n    return (\n        <>\n            {\n                isShowSpeedmate && <div className=\"PageSpeedmate\">\n                    <button onClick={() => {\n                        ZZAudioProgram.pause();\n                        ZZAudioProgram.livePlayInfo.speed = 1;\n\n                        setisShowSpeedmate(false);\n                    }} className=\"btn btn-close\">\n                        <i className=\"fas fa-times\"></i>\n                    </button>\n                    <h2>쉐도잉 속도적응 훈련</h2>\n                    <div className=\"box-sentense\">\n                        <div className=\"box-sentense-in\">\n                            <div className=\"en\">{data.pageShadowingParam.sentenseEn}</div>\n                            <div className=\"ko\">{data.pageShadowingParam.sentenseKo}</div>\n                        </div>\n                        <div className=\"box-state\">\n                            <div className=\"dp-state\">속도 : x{speed}</div>\n                            <div className=\"dp-state\">총 반복 : {sentenseCnt + 1}</div>\n                        </div>\n\n                    </div>\n\n\n                    {isYTMode && <StepPill />}\n                    {!isYTMode && <>\n                        <div className=\"box-btn-speed\">\n                            <button className=\"btn btn-speed slow\" onClick={() => {\n                                speed = Number((speed - 0.1).toFixed(1));\n                                ZZAudioProgram.livePlayInfo.speed = speed;\n                                setUpdate(Math.random);\n                            }}>더 <br></br>느리게</button>\n                            <button className=\"btn btn-speed fast\" onClick={() => {\n                                speed = Number((speed + 0.1).toFixed(1));\n                                ZZAudioProgram.livePlayInfo.speed = speed;\n                                setUpdate(Math.random);\n                            }}>더 <br></br>빠르게</button>\n                        </div>\n                    </>}\n                </div>\n            }\n        </>\n    );\n};\n/// dddd-4\nconst getStateClass = (inSpeed: number, inSetSpeed: number) => {\n    if (inSpeed === inSetSpeed) {\n        return 'active';\n    } else if (inSpeed > inSetSpeed) {\n        return 'done';\n    }\n    return 'need';// done, active,\n}\nconst getStateCnt = (inSetSpeed: number) => {\n    if (speed < inSetSpeed) {\n        return cntSetObj[String(inSetSpeed)];\n    }\n    const cnt = sentenseCnt;\n    if (inSetSpeed === 0.7) {\n        if (cnt < 10) {\n            return 10 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 0.8) {\n        if (cnt < 20) {\n            return 20 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 0.9) {\n        if (cnt < 30) {\n            return 30 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 1.0) {\n        if (cnt < 90) {\n            return 90 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 1.1) {\n        if (cnt < 100) {\n            return 100 - cnt;\n        } else {\n            return 'done';\n        }\n    }\n    return 'done';\n}\n/// dddd-5\nconst cntDisplay = (inStepSpeed: number) => {\n    const getState = getStateCnt(inStepSpeed);\n    if (getState === 'done') {\n        return '완료';\n    }\n    return getState + '/' + cntSetObj[String(inStepSpeed)] + '회 반복';\n}\nconst StepPill = () => {\n    console.log('renStepPill');\n    return (<div className=\"pill-scroll\">\n        <ul className=\"pills\">\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.7)])}>\n                <div>x0.7 배속</div>\n                <div>{cntDisplay(0.7)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.7)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.8)])}>\n                <div>x0.8 배속</div>\n                <div>{cntDisplay(0.8)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.8)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.9)])}>\n                <div>x0.9 배속</div>\n                <div>{cntDisplay(0.9)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.9)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 1.0)])}>\n                <div>x1 배속</div>\n                <div>{cntDisplay(1.0)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 1.0)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 1.1)])}>\n                <div>x1.1 배속</div>\n                <div>{cntDisplay(1.1)}</div>\n            </li>\n        </ul>\n    </div>);\n}\n\nexport default PageSpeedmate;","import { padStart as _pad } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { setSceneIdxState, isYTModuleState, ytbSentenseHideState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\n\n// let courseIdx = 0;\nconst sentenseRepeat: number = 10;// 문장 반복횟수 즉 듣기+말하기 이므로 결국 (5*2)10번 재생\nlet courseToMainJSON: any = {};\nlet _cid = '';\nlet _tpid = '';\nlet _tpidx = 0;\nconst YTSpeedModule = ({\n    cid,\n    tpid,\n    tpidx,\n}: {\n    cid: string,\n    tpid: string,\n    tpidx: number,\n}) => {\n    const setYtbSentenseHide = useSetRecoilState(ytbSentenseHideState);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const [isYTModule, setIsYTModule] = useRecoilState(isYTModuleState);\n    const [update, setUpdate] = useState(0);\n    courseToMainJSON = data.courseToMainJSON(cid);\n    _cid = cid;\n    _tpid = tpid;\n    _tpidx = tpidx;\n    console.log('cid, tpid', cid, tpid);\n    useEffect(() => {\n\n        setIsYTModule(true);\n        // courseIdx = data.courseToMainIdx(cid, tpid);\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n            let cntForRepeat = ZZAudioProgram.livePlayInfo.repeatCnt;\n            if (!cntForRepeat) cntForRepeat = sentenseRepeat * 2;\n            const turnCnt = Math.ceil(cntForRepeat / 2);\n\n            if (turnCnt > 8) {\n                setYtbSentenseHide('00');\n\n            } else if (turnCnt > 6) {\n                setYtbSentenseHide('e0');\n\n            } else {\n                setYtbSentenseHide('ek');\n\n            }\n            const cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n            console.log('iiinfo :: ', cnt, cnt! % 2, ZZAudioProgram.livePlayInfo.idx, ZZAudioProgram.livePlayInfo.totalIdx! - 1);\n            ZZAudioProgram.setVolume(1);\n            if (cnt! % 2 === 1) {\n                ZZAudioProgram.setVolume(0.15);\n            }\n            // 마지막인 경우\n            if (cnt === 0 && ZZAudioProgram.livePlayInfo.idx === ZZAudioProgram.livePlayInfo.totalIdx! - 1) {\n                ZZAudioProgram.pause();\n                setSceneIdx(3);\n            }\n\n            setUpdate(Math.random());\n        })\n    }, [])\n    const ls = ZZAudioProgram.livePlayInfo.repeatCnt! % 2 === 1 ? 'speak' : 'listen';\n    return (\n        <div className=\"YTModule\">\n\n            <SceneIntro />\n            <SceneOuttro />\n            <SceneSentense />\n            <Scene0 />\n\n            {\n                sceneIdx === 2 &&\n                <>\n                    <div className=\"yt-header\">\n                        <div className=\"yt-header-in\">\n                            <span className=\"logo\">카셋 영어 회화</span>\n                            <span className=\"divide\">/</span>\n                            영화 인턴편\n                            <span className=\"divide\">/</span>\n                            <span className=\"day\">DAY{_pad(String(_tpidx + 1), 3, '0')}</span>\n                        </div>\n                    </div>\n\n\n                    <div className=\"yt-footer\">\n                        <div className=\"repeat-cnt\">{(() => {\n                            let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n                            if (!cnt) cnt = sentenseRepeat * 2;\n                            return Math.ceil(cnt / 2);\n                        })()}<span className=\"repeat-cnt-tot\">/{sentenseRepeat}</span></div>\n                        <div className=\"pill-listen-speak\">\n                            <div className=\"pill-item\">듣기</div>\n                            <div className=\"pill-item\">말하기</div>\n                            <div className={`pill-active ${ls}`}>{ls === 'speak' ? '말하기' : '듣기'}</div>\n                        </div>\n\n                    </div>\n                </>\n            }\n\n\n        </div>\n    );\n};\n\nconst Scene0 = () => {\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const pauseAndNextstep = () => {\n        setSceneIdx(sceneIdx + 1);\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 0 && <div className=\"scene scene-0\">\n                <div className=\"scene-in scene-0-in\">\n                    <span className=\"font1\">명조폰트</span>\n                    <span className=\"font2\">고딕폰트</span>\n                    <button onClick={() => {\n                        setTimeout(() => {\n                            setSceneIdx(1);\n                            // ZZAudioProgram.playEffect('mp3-effect1');\n\n                        }, 3000);\n                        data.sendTelelog('test casete hello');\n                    }}>시작</button>\n                </div>\n            </div>}\n        </>\n\n    )\n}\nconst SceneIntro = () => {\n    // debugger;\n    // courseIdx = data.courseToMainIdx(_cid, _tpid);\n    console.log('courseIdx2', _cid, _tpid);\n    const [init, setInit] = useState(false);\n    const [innerScene, setInnerScene] = useState(0);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 1) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n\n            setTimeout(() => {\n                ZZAudioProgram.playEffect('effect_short1', 0.7);\n                // 이너씬 1로 전환\n                setInnerScene(1);\n            }, 3000);\n            setTimeout(() => {\n\n                // 메인씬 2로 전환\n                setSceneIdx(2);\n            }, 8000);\n        }\n\n    }\n    // console.log('ZZAudioProgram.livePlayInfo', ZZAudioProgram.livePlayInfo)\n    return (\n        <>\n            {sceneIdx === 1 && <div className=\"scene scene-intro\">\n                <div className=\"scene-in scene-intro-in\">\n                    {\n                        innerScene === 0 && <div className=\"innerscene0\">\n                            <div className=\"section-main\">\n                                {/* <div className=\"txt0\">카셋 영어 회화</div> */}\n                                <div className=\"txt1\">영화 인턴 편</div>\n                                <div className=\"txt2\"><span className=\"day\">\n                                    {_pad(String(_tpidx + 1), 3, '0')}\n                                </span><div className=\"divide\"></div><div className=\"tot\">51</div></div>\n                            </div>\n                            <div className=\"section-footer\">\n                                <div>카셋 영어 회화</div>\n                            </div>\n                        </div>\n                    }\n                    {\n                        innerScene === 1 && <div className=\"innerscene1\">\n                            <ul>\n                                <li><i className=\"fas fa-check\"></i>총 {courseToMainJSON.item[_tpidx].tit.length}개의 문장</li>\n                                <li><i className=\"fas fa-check\"></i>한 문장당 <div className=\"pill-listen-speak\">\n                                    <div className=\"pill-item\">듣기</div>\n                                    <div className=\"pill-item\">말하기</div>\n                                </div> {sentenseRepeat}세트로 구성</li>\n                            </ul>\n                            <div className=\"txt0\">영화 인턴 <span className=\"pb\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <br></br><span className=\"pb\">카셋 홈페이지</span>를 방문해 주세요.</div>\n                            {/* * 총 3개의 문장\n                            * 1 문장당 [듣고/말하기] 5세트로 구성\n                            *\n                            * 영화 인턴 플레이어 북은 홈페이지를 방문해 주세요. */}\n                        </div>\n                    }\n\n                </div>\n            </div>}\n        </>\n    )\n}\n\nconst SceneSentense = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 2) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n\n            setInit(true);\n            setTimeout(() => {\n\n                // 시작\n                ZZAudioProgram.livePlayInfo.repeat = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.repeatCnt = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.interval = 1;\n\n                ZZAudioProgram.play({\n                    allplay: true,\n                    totalIdx: data.topicJSON.sentense.length,\n                    repeat: ZZAudioProgram.livePlayInfo.repeat,\n                    repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                })\n\n            }, 1000);\n        }\n\n\n    }\n    return (\n        <>\n            {sceneIdx === 2 && <div className=\"scene guide-frame\">\n                <div className=\"scene-in guide-frame-in\"></div>\n            </div>}\n        </>\n    )\n}\nconst SceneOuttro = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 3) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n            ZZAudioProgram.playEffect('effect_ending', 0.5);\n            setTimeout(() => {\n                // 이너씬 1로 전환\n                alert('eot')\n            }, 10000);\n        }\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 3 && <div className=\"scene scene-outtro\">\n                <div className=\"scene-in scene-outtro-in\">\n                    <div>\n                        <div className=\"txt0\"><i className=\"fas fa-check\"></i>영상이 마음에 드셨다면 <span className=\"em\">좋아요,구독</span> 잊지 마세요!</div>\n                        {/* <div className=\"txt1\">채널을 운영하는 힘이 됩니다!</div> */}\n                        <div className=\"txt1\"><i className=\"fas fa-check\"></i>영화 인턴 <span className=\"em\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <span className=\"pb\">카셋 홈페이지</span>방문!</div>\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default YTSpeedModule;","import animateScrollTo from 'animated-scroll-to';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Equalizer from '../components/Equalizer';\nimport LoadingDom from '../components/LoadingDom';\nimport PageShadowing from '../components/PageShadowing';\nimport YTModule from '../components/YTModule';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { padStart as _pad } from 'lodash';\nimport {\n    btnRepeatModeUpdateState,\n    isCloseDetailPanelState,\n    ytbSentenseHideState,\n    isShowSpeedmateState,\n    isShowShadowingState, isYTModuleState, scriptModeState, isYTSpeedModuleState\n} from \"../core/store\";\nimport fbase from '../fb/fbase';\nimport PageSpeedmate from '../components/PageSpeedmate';\nimport YTSpeedModule from '../components/YTSpeedModule';\n\n// let scriptMode = 'ek';\nlet audioSrc: string = '';\nlet tpidx: number;\nconst CoursePlay = ({\n    location\n}: {\n    location: any\n}) => {\n    // const query:any = qs.parse(location.search, {\n    //     charset: 'iso-8859-1',\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [isCheckedAuth, setisCheckedAuth] = useState(false);\n    const isShowShadowing = useRecoilValue(isShowShadowingState);\n    const isShowSpeedmate = useRecoilValue(isShowSpeedmateState);\n\n    useEffect(() => {\n        // 이게먼저호출될지 userInfo가 먼저로드될지 몰라 아래처럼 구성\n        // data.setClipHistory(tpid);\n        // firebase데이터 로드해서 구성완료 후에 topic history Sync\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            setisCheckedAuth(true);\n            data.setClipHistory(tpid);\n        });\n        if (fbase.userInfo !== 'loading') {\n            setisCheckedAuth(true);\n            data.setClipHistory(tpid);\n        }\n\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n\n            // 화면 프레싱중이 아닌경우\n            if (!data.isSentensePressing) {\n                // 스크롤링 중 아닌경우\n                data.isScrolling((result: boolean) => {\n                    // SentenseItem num-${idx}\n                    const $el = (document as any).querySelector(`.SentenseItem.num-${idx}`);\n                    const y = ($el) ? $el.offsetTop : null;\n                    if (y === null) return;\n\n                    // if (!result) core.scrollTo(y, '.view-Topic');\n                    // console.log('AudioProgram.livePl', result, ZZAudioProgram.livePlayInfo.allplay);\n                    if (!result && ZZAudioProgram.livePlayInfo.allplay) {\n                        animateScrollTo(y - 200, {\n                            elementToScroll: (document as any).querySelector('html')\n                        });\n                    }\n                })\n            }\n\n\n        });\n\n\n\n\n        return () => {\n\n        }\n    }, []);\n    ZZAudioProgram.pause();\n    // ** qs같은 파서를 쓰면 암호화 정보에 +가 망가진다\n    const [isData, setisData] = useState(false);\n    const search = window.location.search;\n    // console.log('decp search: ', search)\n    const d = search.substring(3);// ?d=을 제외한 나머지\n    const decryptQuery = data.parseQuery();\n    const cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n    const tpid = (decryptQuery && decryptQuery.tpid) ? decryptQuery.tpid : '';\n    tpidx = decryptQuery.idx;\n\n    audioSrc = `./resource/courses/${cid}/topics/${tpid}/mm.mp3`;\n    useEffect(() => {\n        ZZAudioProgram.presetSrc(audioSrc)\n        const topicJSON = data.getTopicJSON(cid, tpid).then((result: any) => {\n\n            data.topicJSON = result.data;\n            ZZAudioProgram.livePlayInfo.json = data.topicJSON;\n            setisData(true);\n\n        });\n    }, [])\n\n\n    useEffect(() => {\n\n        // 회원정보 체크가 끝나고 렌더인 경우 퍼미션 체크 \n        if (isCheckedAuth) {\n            const getSubscriptionState = data.getSubscriptionState(fbase.isSubscriptionInfo());\n            const isOwner = getSubscriptionState === 'on';\n            // const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n            const isTrial = data.courseToMainJSON(cid).item[tpidx] && data.courseToMainJSON(cid).item[tpidx].isTrial === \"true\";\n            // console.log('isTrial::', isOwner, isTrial, data.courseToMainJSON(cid).item[tpidx]);\n            // http://localhost:9822/CoursePlay?d=bXGcdmvU2FsdGVkX1/RDiNcHUhQPzaHjYBCYYmxNUxPvAZqurx7qDzXwOh5qPzHtidb+bHvP0KKwkMukD3fLrFKQrA4bA==\n            // 트라이얼도 아니고 오너도 아니다 \n            if (!isTrial && !isOwner) {\n                alert('로그인 또는 구독 후 이용가능한 페이지 입니다.');\n                data.gotoCourseMainPage(cid);\n            }\n        }\n    }, [isCheckedAuth])\n\n\n\n\n\n    return (\n        <>\n            {\n                isCheckedAuth\n                    ?\n                    <div className={classnames([\"CoursePlay\", { ytview: decryptQuery.yt }])}>\n                        {decryptQuery.yt === 'true' && <YTModule cid={cid} tpid={tpid} tpidx={tpidx} />}\n                        {decryptQuery.ytspeed === 'true' && <YTSpeedModule cid={cid} tpid={tpid} tpidx={tpidx} />}\n                        {\n                            isData\n                                ?\n                                <div>\n                                    {\n                                        (cid && tpid)\n                                            ?\n                                            <CoursePlayList cid={cid} tpid={tpid} />\n                                            :\n                                            <div>\n                                                없는 경로 입니다.<br></br>\n                                                <button onClick={() => {\n                                                    data.gotoPage('/', '')\n                                                }}>메인페이지로 돌아가기</button>\n                                            </div>\n                                    }\n                                </div>\n                                :\n                                <div>loading...</div>\n                        }\n                        {isShowShadowing && <PageShadowing />}\n                        {isShowSpeedmate && <PageSpeedmate />}\n                    </div>\n                    :\n                    <LoadingDom />\n            }\n        </>\n\n\n    );\n};\n\nconst CoursePlayList = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n\n    return (\n        <div>\n            {/* {cid} */}\n            <TopicCover cid={cid} tpid={tpid} />\n            <div className=\"container-playlist\">\n                <PlayLists cid={cid} tpid={tpid} />\n                <GotoNextPrev cid={cid} tpid={tpid} />\n                {/* <GotoFullScript topicID={data.currJSON.id} /> */}\n            </div>\n            <PlayerControl tpid={tpid} />\n        </div>\n    );\n}\n\nconst GotoNextPrev = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    return (<ul className=\"GotoNextPrev\">\n        <li\n            onClick={() => {\n                data.gotoNextPrev(tpidx, cid, 'prev');\n                data.gotoTop();\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            }}\n            className=\"btn-list prev\"><i className=\"far fa-arrow-alt-circle-left icon\"></i>이전목록</li>\n        <li\n            onClick={() => {\n                data.gotoCourseMainPage(cid);\n            }}\n            className=\"btn-list list\"><i className=\"fas fa-list-ul icon\"></i>전체목록</li>\n        <li\n            onClick={() => {\n                data.gotoNextPrev(tpidx, cid, 'next');\n                data.gotoTop();\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            }}\n            className=\"btn-list next\">다음목록<i className=\"far fa-arrow-alt-circle-right icon\"></i></li>\n    </ul>);\n}\n\nconst TopicCover = ({\n    cid,\n    tpid\n}: {\n    cid: string,\n    tpid: string\n}) => {\n    // const info = data.currJSON.json.info;\n    // const tpid = useRecoilValue(tpidState);\n    // const cid = useRecoilValue(cidState);\n    // const [isKeep, setIsKeep] = useState((() => {\n    //     return fbase.userMoreInfo.keepClips.includes(tpid);\n    // })());\n\n    const courseToMainJSON = data.courseToMainJSON(cid);\n    const courseToMainIdx = data.courseToMainIdx(cid, tpid);\n    let itemViewType = 'dialog';// movie, dialog\n    if (courseToMainJSON && courseToMainJSON.itemViewType) {\n        itemViewType = courseToMainJSON.itemViewType;\n\n    }\n    return (\n        <div className={classnames([\"TopicCover\", itemViewType, css`\n            background-image: url(\"${data.getRootPath()}resource/courses/${cid}/thumb/${tpid.substr(0, 4)}.jpg\");\n        `])}>\n            {\n                itemViewType === 'movie'\n                    ?\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> <br></br>{_pad(String(tpidx + 1), 3, '0')}\n                        </div>\n                        <div className=\"col-right\">\n\n                        </div>\n                    </div>\n                    :\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> {_pad(String(tpidx + 1), 3, '0')}\n                        </div>\n                    </div>\n            }\n\n\n\n        </div>\n    )\n}\n\nconst PlayLists = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n\n            // setActiveIdx(idx);\n            setRender(render + Math.random());\n        });\n        // EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n        //     setActiveIdx(-1);\n        // });\n        return () => {\n            EventEmitter.remove(Event.CONTROL_UI_UPDATE);\n            EventEmitter.remove(Event.SENTENSE_PAUSE);\n        };\n    }, []);\n\n    const isCloseDetailPanel = useRecoilValue(isCloseDetailPanelState);\n    const [render, setRender] = useState(0);\n    // const [activeIdx, setActiveIdx] = useState(-1);\n    // console.log(\"data.topicJSON\", data.topicJSON)\n    const sentense = data.topicJSON.sentense;\n    const Component = sentense.map((item: any, i: number) => {\n        return <SentenseItem\n            idx={i}\n            totalIdx={sentense.length}\n            cid={cid} tpid={tpid}\n            renderCnt={render}\n            // isActive={activeIdx === i}\n            json={item}\n            key={`sentense${i}`}\n        />;\n    });\n    // console.log('tmplog_fbase.userMoreInfo', fbase.userMoreInfo)\n    // const [forceRender, setForceRender] = useState(0);\n    // callModeChange = () => {\n    //     setForceRender(forceRender + 1);\n    // }\n\n    return (\n        <div className={classnames([\"PlayLists\", css`\n            padding-bottom:${isCloseDetailPanel ? 30 : 267}px;\n        `])}>\n            {Component}\n        </div>\n    )\n}\n\nconst SentenseItem = ({\n\n    // isActive = false,\n    renderCnt,\n    json,\n    idx,\n    totalIdx,\n    cid,\n    tpid,\n}: {\n\n    // isActive: boolean,\n    renderCnt: number,\n    json: any,\n    idx: number,\n    totalIdx: number,\n    cid: string,\n    tpid: string,\n}) => {\n\n\n    const [isOpenDesc, setIsOpenDesc] = useState(false);\n    const [isGlassMode, setIsGlassMode] = useState(false);\n    const scriptMode = useRecoilValue(scriptModeState);\n    const [isCheck, setIsCheck] = useState(fbase.userMoreInfo.doneSentense.includes(`${tpid}_${idx}`));\n\n    const checkClick = (tf: boolean) => {\n\n        if (!fbase.isLogin()) {\n            data.showToastMessage({\n                message: \"로그인이 필요한 서비스입니다.\",\n                mtime: 3000\n            })\n            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                from: \"buyProduct\",\n                courseID: json.courseID,\n            });\n            return;\n        }\n        setIsCheck(tf);\n\n        const makeKey = `${tpid}_${idx}`;\n\n        data.setSettingKeepClipSentense(\n            'done',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     json.en\n        // );\n\n    }\n    const isActive = idx === ZZAudioProgram.livePlayInfo.idx ? true : false;\n    const words = json.words;\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    const setIsShowSpeedmate = useSetRecoilState(isShowSpeedmateState);\n    // console.log('jsonjsonjson',json);\n    // const timeArr = json.timeen.split('|');\n    // const isOnePlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999)?false:true;\n    const isInfinityPlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999) ? true : false;\n    const playClick = () => {\n\n\n        ZZAudioProgram.play({\n            idx: idx,\n            totalIdx: totalIdx,\n            src: audioSrc,\n            repeat: 1,\n            repeatCnt: 1,\n            allplay: false,\n        });\n    }\n\n    const ytbSentenseHide = useRecoilValue(ytbSentenseHideState);\n    const isYTModule = useRecoilValue(isYTModuleState);\n    const isYTSpeedModule = useRecoilValue(isYTSpeedModuleState);\n    let ytbHideClassEn = '';\n    let ytbHideClassKo = '';\n    if (isYTModule || isYTSpeedModule) {\n\n        if (ZZAudioProgram.livePlayInfo.idx === null) {\n            // 최초에 아직 결정되기 전에도 blur로 처리\n            ytbHideClassEn = 'blur';\n            ytbHideClassKo = 'blur';\n        }\n\n        // console.log('dioProgram.livePlayInf', idx, ZZAudioProgram.livePlayInfo.idx);\n\n        if (isActive) {\n            // 활성화 & 하이드 턴이면\n            ytbHideClassEn = ytbSentenseHide.substr(0, 1) === '0' ? 'blur' : '';\n            ytbHideClassKo = ytbSentenseHide.substr(1, 1) === '0' ? 'blur' : '';\n        } else if (idx > ZZAudioProgram.livePlayInfo.idx!) {\n            // 아직 진행 전 문장이면\n            ytbHideClassEn = 'blur';\n            ytbHideClassKo = 'blur';\n        }\n\n    }\n\n    return (\n        <div onTouchStart={() => {\n            data.sentensePressing();\n        }} className={classnames([`SentenseItem num-${idx}`, { active: isGlassMode }, { active: isActive }])}>\n\n            <div className={classnames([\"item-sound\", { active: isActive }])}>\n                <div className=\"item-main\">\n                    <div className=\"col-left\" onClick={() => {\n                        playClick();\n                        data.sentensePressing();\n                        // data.setCurrPlayBtnState('stop', 'a4');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                        // setTimeout(() => {\n                        //     // 1개 반복\n                        //     playOneItem();\n                        // })\n\n                    }}>\n                        <ItemCnt idx={idx} />\n                        <div>\n                            {\n                                isGlassMode\n                                    ?\n                                    <>\n                                        <div className=\"title-en\">{json.en}</div>\n                                        <div className=\"title-ko\">{json.ko}</div>\n                                    </>\n                                    :\n                                    <>\n                                        {['ek', 'e0'].includes(scriptMode) && <div className={classnames([\"enko title-en\", ytbHideClassEn])}>{json.en}</div>}\n                                        {/* {['_k'].includes(scriptMode) && <div className={classnames([\"title-en_\", ytbHideClassEn])}>{json.en_}</div>} */}\n                                        {['0k', '00'].includes(scriptMode) && <div className={classnames([\"enko title-en_0\", ytbHideClassEn])}>{json.en_0}</div>}\n                                        {['00', 'e0'].includes(scriptMode) && <div className={classnames([\"enko title-ko_0\", ytbHideClassKo])}>{json.ko_0}</div>}\n                                        {['_k', 'ek', '0k'].includes(scriptMode) && <div className={classnames([\"enko title-ko\", ytbHideClassKo])}>{json.ko}</div>}\n                                    </>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-right\">\n                        {/* {idx} */}\n\n\n                    </div>\n                </div>\n                <div className=\"item-bottom\">\n                    <div>\n                        <div className=\"col\">\n                            <button onClick={() => {\n                                // data.setCurrPlayBtnState('stop', 'a3');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // setTimeout(() => {\n                                //     // 1개 반복\n                                //     playOneItem();\n                                // })\n                                playClick();\n                            }} className=\"btn\">\n                                <i className=\"fas fa-volume-up\">\n                                    <span className=\"i-label\">듣기</span>\n                                </i>\n                            </button>\n                            <button className=\"btn\">\n                                {\n                                    isInfinityPlay ?\n                                        <div className=\"stop-repeat\" onClick={() => {\n\n                                            ZZAudioProgram.pause();\n                                        }}>\n                                            <Equalizer />\n                                            <span className=\"i-label\">반복종료</span>\n                                        </div>\n                                        :\n                                        <div onClick={() => {\n\n                                            ZZAudioProgram.play({\n                                                idx: idx,\n                                                totalIdx: totalIdx,\n                                                src: audioSrc,\n                                                repeat: 9999,\n                                                repeatCnt: 9999,\n                                                allplay: false,\n                                            });\n                                        }} >\n                                            <i className=\"fas fa-retweet\"></i><span className=\"i-label\">무한반복</span>\n                                        </div>\n                                }\n                                {/* {!(sentenseRepeatIdx === idx) && <i onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a2');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                    setTimeout(() => {\n                                        temprepeatMode = fbase.userMoreInfo.repeatMode;\n                                        fbase.userMoreInfo.repeatMode = '1';\n                                        data.setCurrPlayBtnState('play');\n                                        // // setIsRepeat(true);\n                                        data.audioPlayPause(idx);\n                                        // repeat equalizer보이기 인덱스\n                                        setSentenseRepeatIdxState(idx);\n                                    })\n                                }} className=\"fas fa-retweet\">\n                                    <span className=\"i-label\">무한반복</span>\n                                </i>}\n                                {sentenseRepeatIdx === idx && <div className=\"stop-repeat\" onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a1');\n                                    fbase.userMoreInfo.repeatMode = temprepeatMode;\n                                    // setIsRepeat(false);\n                                    // repeat equalizer보이기 인덱스\n                                    setSentenseRepeatIdxState(9999);\n                                }} >\n                                    <Equalizer />\n                                    <span className=\"i-label\">반복종료</span>\n                                </div>} */}\n\n                            </button>\n                            <button className=\"btn\">\n                                {isCheck\n                                    ?\n                                    <i className=\"fas fa-check-square checkbox check\" onClick={() => {\n                                        checkClick(false);\n                                    }}><span className=\"i-label\">학습완료</span></i>\n                                    :\n                                    <i className=\"fas fa-check-square checkbox\" onClick={() => {\n                                        checkClick(true);\n                                    }}><span className=\"i-label\">학습중</span></i>\n                                }\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            {words && <button className=\"btn btn-word\" onClick={() => {\n                                setIsOpenDesc(!isOpenDesc);\n                            }}><i className=\"fas fa-plus\">\n                                    <span className=\"i-label\">단어({words.length})</span></i>\n                            </button>}\n\n                            <button className=\"btn btn-sndtraining\" onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.totalIdx = totalIdx;\n                                data.pageShadowingParam.audioSrc = audioSrc;\n                                data.pageShadowingParam.topicID = tpid;\n\n                                setIsShowSpeedmate(true);\n\n                            }}>\n                                <span className=\"logo-snd\">S</span><span className=\"i-label\">속도적응훈련</span>\n                                {/* <i className=\"fas fa-retweet\"></i><span className=\"i-label\">속도적응훈련</span> */}\n                            </button>\n\n                            <button onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.totalIdx = totalIdx;\n                                data.pageShadowingParam.audioSrc = audioSrc;\n                                data.pageShadowingParam.topicID = tpid;\n\n                                setIsShowShadowing(true);\n                                // setIsShowSpeedmate(true);\n\n                            }} className=\"btn btn-sndtraining\">\n                                <span className=\"logo-snd\">D</span><span className=\"i-label\">받아쓰기훈련</span>\n                            </button>\n                            {['_k', 'e0', '0k', '00'].includes(scriptMode) && <button className={classnames([\"btn btn-glass\", { glasson: isGlassMode }])} onClick={() => {\n\n                                setIsGlassMode(true);\n                                setTimeout(() => {\n                                    setIsGlassMode(false);\n                                }, 3000);\n                            }}><i className=\"fas fa-eye i-con\"><span className=\"i-label\">잠깐보기</span></i>\n                            </button>}\n                        </div>\n                    </div>\n                    {isOpenDesc && words && <div>\n                        <WordList json={words} modeClass=\"\" />\n                    </div>}\n                </div>\n                {(isYTModule || isYTSpeedModule) && isActive && words && <div>\n                    <WordList json={words} modeClass=\"yt-words\" />\n                </div>}\n            </div>\n        </div >\n    );\n}\n\nconst PlayerControl = ({\n    tpid\n}: {\n    tpid: string\n}) => {\n    // alert(data.env.screenHeight);\n    const isYTModule = useRecoilValue(isYTModuleState);\n    const isYTSpeedModule = useRecoilValue(isYTSpeedModuleState);\n    const [renderCnt, setRenderCnt] = useState(0);\n    const [isClose, setIsClose] = useRecoilState(isCloseDetailPanelState);\n    const [repeat, setRepeat] = useState(1);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    // const isFreeClip: boolean = data.isFreeClip(tpid);\n    // const isAllPass: boolean = fbase.userMoreInfo.buyCourses.length === 0;\n\n    // useEffect(() => {\n    //     EventEmitter.subscribe(Event.PURCHASE_COMPLETE, () => {\n    //         setRenderCnt(renderCnt + 1);\n    //     });\n    // }, []);\n    // data.playerSetting = {\n    //     repeat: repeat,\n    //     interval: interval,\n    //     speed: speed,\n    // }\n    return (\n        <>\n            {\n                !(isYTModule || isYTSpeedModule) &&\n                <div className={`PlayerControl`}>\n                    <div onClick={() => {\n                        if (isClose) {\n                            setIsClose(!isClose);\n                        }\n                    }} className={classnames([\"functions\", { close: isClose }])}>\n                        <div className=\"center\">\n                            <div className=\"func-header\">\n                                <button className=\"btn btn-blank btn-open\" onClick={() => {\n                                    setIsClose(!isClose);\n                                }}>\n                                    {isClose && <>설정열기<i className=\"fas fa-chevron-up up\"></i></>}\n                                    {!isClose && <>설정닫기<i className=\"fas fa-chevron-down down\"></i></>}\n                                </button>\n\n                            </div>\n\n                            <div className={`func-setting`}>\n                                <div className=\"row\">\n                                    <div className=\"col1\">반복</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 1 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 1;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 1;\n                                                setRepeat(1);\n                                            }}>x1</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 2 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 2;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 2;\n                                                setRepeat(2);\n                                            }}>x2</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 3 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 3;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 3;\n                                                setRepeat(3);\n                                            }}>x3</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 4 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 4;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 4;\n                                                setRepeat(4);\n                                            }}>x4</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 5 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 5;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 5;\n                                                setRepeat(5);\n                                            }}>x5</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 10 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 10;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 10;\n                                                setRepeat(10);\n                                            }}>x10</button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col1\">속도</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 1 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 1;\n                                                setSpeed(1);\n                                            }}>x1</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.9 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.9;\n                                                setSpeed(0.9);\n                                            }}>x0.9</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.8 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.8;\n                                                setSpeed(0.8);\n                                            }}>x0.8</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.7 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.7;\n                                                setSpeed(0.7);\n                                            }}>x0.7</button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col1\">간격</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 0 }])}\n                                            onClick={() => {\n                                                setInterval(0);\n                                                ZZAudioProgram.livePlayInfo.interval = 0;\n                                            }}>0s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 1 }])}\n                                            onClick={() => {\n                                                setInterval(1);\n                                                ZZAudioProgram.livePlayInfo.interval = 1;\n                                            }}>1s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 1.5 }])}\n                                            onClick={() => {\n                                                setInterval(1.5);\n                                                ZZAudioProgram.livePlayInfo.interval = 1.5;\n                                            }}>1.5s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 2 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 2;\n                                                setInterval(2);\n                                            }}>2s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 2.5 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 2.5;\n                                                setInterval(2.5);\n                                            }}>2.5s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 9999 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 9999;\n                                                setInterval(9999);\n                                            }}>쉐도잉타임</button>\n\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"func-summary\">\n                                반복<span className=\"bold\">x{repeat}</span>\n                        속도<span className=\"bold\">x{speed}</span>\n                        간격<span className=\"bold\">{(() => {\n                                    return interval === 9999 ? '쉐도잉타임' : interval + 's';\n                                })()}</span>\n\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"controller\">\n\n                        <div className=\"col-left\">\n                            <div>\n                                <BtnRepeatMode />\n                                <BtnScriptMode />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n        </>\n\n    )\n}\n\nconst BtnRepeatMode = () => {\n\n    useEffect(() => {\n        // EventEmitter.subscribe(Event.CHANGE_BTN_PLAY_STATE, (sta: string) => {\n        //     // alert(sta);\n        //     if (sta === 'stop') {\n        //         setIsDisable(true);\n        //     } else {\n        //         setIsDisable(false);\n        //     }\n        // });\n        // EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n\n        //     // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n        //     setUpdate(update + 1);\n        // })\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, () => {\n\n            // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n            setUpdate(Math.random());\n        })\n    }, []);\n\n    let dataRepeatMode = '1';// TODO : fbase.userMoreInfo.repeatMode;\n    const [update, setUpdate] = useRecoilState(btnRepeatModeUpdateState);\n    const [mode, setMode] = useState(dataRepeatMode);\n    const [isDisable, setIsDisable] = useState(true);\n    // 1개 반복은 개별의 반복으로 처리해서 메인컨트롤러 플레이는 아님\n    const isPlay = ZZAudioProgram.livePlayInfo.allplay;// TODO : (data.currPlayBtnState === 'play' && fbase.userMoreInfo.repeatMode !== '1');\n\n\n\n    // const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n\n    return (\n        <>\n            <div className=\"BtnRepeatMode2\">\n                <button onClick={() => {\n                    // // 개별아이템 반복중일경우 tempRepeatMode처리\n                    // if (temprepeatMode !== 'nil') {\n                    //     fbase.userMoreInfo.repeatMode = temprepeatMode;\n                    //     temprepeatMode = 'nil';\n                    // }\n                    // fbase.userMoreInfo.repeatMode = 'ALL';\n                    // // 개별아이템 반복모드 켜진경우 중지 처리\n                    // setSentenseRepeatIdxState(9999);\n                    // if (isPlay) {\n                    //     data.setCurrPlayBtnState('stop', 'BtnRepeatMode2');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"멈춤\");\n                    // } else {\n                    //     data.setCurrPlayBtnState('play');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"play\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"실행\");\n                    // }\n                    // setUpdate(update + 1);\n                    const isPlay = ZZAudioProgram.livePlayInfo.allplay;//ZZAudioProgram.livePlayInfo.idx !== null;\n                    // console.log('isPlay', isPlay);\n\n                    if (isPlay) {\n                        ZZAudioProgram.pause();\n                    } else {\n                        ZZAudioProgram.play({\n                            allplay: true,\n                            totalIdx: data.topicJSON.sentense.length,\n                            repeat: ZZAudioProgram.livePlayInfo.repeat,\n                            repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                        })\n                    }\n\n                }} className={classnames([\"btn btn-sound\", { active: isPlay }])}>\n                    {isPlay && <><Equalizer /><span className=\"i-label active\">듣기중단</span></>}\n                    {!isPlay && <i className=\"fas fa-volume-up\"><span className=\"i-label\">전체듣기</span></i>}\n                </button>\n                {/* <button onClick={() => {\n                    if (dataRepeatMode === 'ALL') {\n                        // TODO: fbase.userMoreInfo.repeatMode = '';\n                    } else {\n                        // TODO: fbase.userMoreInfo.repeatMode = 'ALL'\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-repeat\", { active: dataRepeatMode === 'ALL' }])}>\n                    <i className=\"fas fa-redo-alt\"></i>\n                </button> */}\n            </div>\n\n        </>\n    )\n}\n\nconst scriptModeStr: any = {\n    // '_k': '_/한',\n    '00': '.../...',\n    'e0': '영/...',\n    '0k': '.../한',\n    'ek': '영/한',\n}\nconst BtnScriptMode = () => {\n    // const [mode, setMode] = useState(scriptMode);\n    const [scriptMode, setscriptMode] = useRecoilState(scriptModeState);\n\n    return (\n        <>\n            <div className=\"BtnScriptMode2\">\n                <button onClick={() => {\n                    const mode = 'ek';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'ek' }])}>영+한</button>\n                <button onClick={() => {\n                    const mode = 'e0';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'e0' }])}>영어만</button>\n                <button onClick={() => {\n                    const mode = '0k';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '0k' }])}>한글만 </button>\n            </div>\n\n        </>\n\n    )\n}\n\nconst WordList = ({\n    json,\n    modeClass,\n}: {\n    json: any,\n    modeClass: string,\n}) => {\n    const Itm = json.map((item: string[], i: number) => {\n        return <li className=\"item-word\">\n            <span className=\"word\">{item[0]}</span>\n            <span className=\"mean\">{item[1]}</span>\n        </li>\n    })\n    return (\n        <ul className={classnames([\"items-word\", modeClass])}>\n            {Itm}\n        </ul>\n    );\n}\n\nconst ItemCnt = ({\n    idx,\n}: {\n    idx: number,\n}) => {\n    return (\n        <span className=\"item-cnt\">\n            {idx + 1}\n        </span>\n    )\n}\n\nexport default CoursePlay;","import qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport data from '../core/data';\nconst printJSON = require('../resource/mainJSONPrint.json');\nconst CoursePrint = () => {\n    let param: any = null;\n    if (data.isHashURL) {\n        param = qs.parse(window.location.hash.split('?')[1]);\n    } else {\n        param = qs.parse(window.location.search.substr(1));\n    }\n    console.log('paramparam', param)\n    // const param = qs.parse(window.location.search.substr(1));\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n\n        if (item.info.openID === param.id) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    useEffect(() => {\n\n    }, [])\n\n    return (\n        <div className=\"CoursePrint\">\n            {\n                selectCourseJSON && <div>\n                    <div className=\"header\">\n                        <div className=\"row-right\">\n                            <button className=\"btn btn-border\" onClick={() => {\n\n                                (window as any).printScript('카셋회화훈련-인턴');\n                            }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                        </div>\n\n                    </div>\n                    <table id=\"script-print-table\">\n                        <thead>\n                            <tr >\n                                <td >일자</td>\n                                <td >No.</td>\n                                <td >한글</td>\n                                <td >영어</td>\n                                <td >확인</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tr}\n\n                        </tbody>\n                    </table>\n\n\n                </div>\n            }\n        </div>\n    );\n};\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className={`tr-day n-${i}`} >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n}\n\n\nexport default CoursePrint;","import React from 'react';\nimport data from '../core/data';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            <div className=\"utils-layout-marginauto0\">\n                <div className=\"logo btn-fc\" onClick={() => {\n                    data.gotoPage('', '');\n                }}><i className=\"fas fa-home i-left\"></i>카셋 영어 플레이</div>\n                <br></br>\n                <a href=\"http://pf.kakao.com/_HxlMJK/chat\" className=\"btn btn-blank btn-fc\" target=\"_blank\"><i className=\"fas fa-chevron-circle-right i-left\"></i>카카오채널 문의하기</a><br></br>\n                <a href=\"mailto:dev@casete.in\" className=\"btn btn-blank btn-fc\"><i className=\"fas fa-chevron-circle-right i-left\"></i>이메일 문의하기</a><br></br>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;","\nimport React, { useState } from 'react';\nimport data, { productTable } from '../core/data';\nimport fbase, { authService, dbService } from './fbase';\nimport Days from '../core/Days';\nimport classnames from 'classnames';\nimport EventEmitter, { Event } from '../core/EventEmitter';\n\n\nconst FBViewLogin = () => {\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    const isSubscriptionInfo = fbase.isSubscriptionInfo();\n    // const isOwner = !['needLogin', 'needPurchase'].includes(isSubscriptionInfo);\n    // 조회 \n    // dbService.collection('userstatus').get().then((docs: any) => {\n    //     docs.docs.forEach((doc: any) => {\n    //         console.log(doc.data());\n    //     })\n    // });\n    // console.log('fbase.userInfo', fbase.userMoreInfo.buyCourses)\n    // let Purchased: any[] = [];\n    // JSON을 서치하는 비용이 커서 팝업 뜰때만 실행 \n    // if (isShowLoginPopup) {\n    //     Purchased = fbase.userMoreInfo.buyCourses.map((inCid: any, i: number) => {\n    //         const json = data.mainJSON.find((itemJ: any, iJ: number) => {\n    //             return itemJ.courseID === inCid;\n    //         })\n    //         return <li className=\"btn\" onClick={() => {\n    //             data.gotoPage('CourseMain', json.query);\n    //         }}>{i + 1}. {json.title}<i className=\"fas fa-chevron-right i-right\"></i></li>;\n    //     });\n    // }\n    const isOwner = data.getSubscriptionState(fbase.userMoreInfo.subscriptionInfo) === 'on';\n    return (\n        <div className=\"FBViewLogin\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className={classnames([\"btn btn-userinfo\", { \"login\": isOwner }])}><i className=\"fas fa-user-circle\">\n\n                    </i>\n                    <div className=\"print-user\">\n                        {/* <div className=\"user-id\">maca222oshu</div> */}\n                        <div className=\"user-id\">{fbase.userInfo.email.split('@')[0]}</div>\n                        <span className=\"purchase-state\">({isOwner ? \"구독 이용 중\" : \"무료 이용 중\"})</span>\n                    </div>\n                </button>\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login-info\">\n                    <div className=\"popup-login-info-in\">\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n                                사용자정보\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n                        <div className=\"area-user\">\n                            <span className=\"user-id\">{fbase.userInfo.email.split('@')[0]}</span>\n                            <button className=\"btn btn-border round\" onClick={() => {\n                                authService.signOut().then(() => {\n                                    (window as any).location.href = \"/\";\n                                });\n                            }}>로그아웃</button>\n                        </div>\n\n\n\n                        <div className=\"purchase-list\">\n                            <h4 className=\"title\"><i className=\"fas fa-book\"></i>구독정보</h4>\n\n                            <SubscriptionInfo infoStr={fbase.userMoreInfo.subscriptionInfo} />\n                        </div>\n\n                        {/* <button onClick={() => {\n                            // 저장\n                            dbService.collection('userstatus').add({ todo: \"test\" }).then((res: any) => {\n                                console.log(res)\n                            })\n                        }}>정보변경</button> */}\n                    </div>\n\n                </div>\n            }\n\n\n        </div>\n    );\n};\n\nconst SubscriptionInfo = ({\n    infoStr,\n}: {\n    infoStr: string\n}) => {\n\n    let subscriptionType = data.getSubscriptionState(infoStr);\n    let dp1 = '';\n    let dp2 = '';\n\n    if (subscriptionType === 'empty') {\n        dp1 = '구독 내역 없음';\n    } else {\n        let todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n        const infoArr = infoStr.split('##');\n\n        let [productCD, stStr, edStr] = infoArr;\n        if (productCD.substr(0, 1) === 't') {\n            productCD = productCD.substr(1);\n        }\n        const productCDtoStr: string = productTable[productCD].title;\n        dp2 = `${data.dateMyFormat(stStr)} ~ ${data.dateMyFormat(edStr)}`\n        if (subscriptionType === 'on') {\n            dp1 = productCDtoStr + ' 구독 이용 중';\n        } else if (subscriptionType === 'expired01') {\n            dp1 = '구독 만료';\n        }\n    }\n\n\n\n    // if (subscriptionType === 'empty') {\n    //     dp1 = '구독 내역 없음';\n    // } else {\n    //     let todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n    //     const infoArr = infoStr.split('##');\n    //     // const todayInt = parseInt(format(new Date(), 'yyyyMMdd'));\n    //     const [productCD, stStr, edStr] = infoArr;\n    //     if (infoArr.length === 3) {\n    //         // const productCD = infoArr[0];\n    //         // const stStr = infoArr[1];\n    //         // const edStr = infoArr[2];\n\n    //         // alert(a+b+c);\n\n    //         const productCDtoStr: string = productTable[productCD].title;\n    //         subscriptionType = 'on'\n    //         dp1 = productCDtoStr + ' 구독 이용 중';\n    //         dp2 = `${data.dateMyFormat(stStr)} ~ ${data.dateMyFormat(edStr)}`\n    //         if (todayInt > parseInt(edStr)) {\n    //             // 기간 지난경우\n    //             subscriptionType = 'expired01';\n    //             dp1 = '구독 만료';\n    //             // dp2 = '';\n    //         }\n    //     } else {\n    //         subscriptionType = 'empty';\n    //         // 구독내역 없음\n    //         dp1 = '';\n    //         dp2 = '';\n    //     }\n\n\n    //     console.log('dp1,dp2', dp1, dp2, todayInt, parseInt(edStr), infoArr.length);\n    // }\n    return (\n        <ul className={classnames([\"list\", subscriptionType])}>\n            <li className=\"dp1\">\n                {dp1}\n                {\n                    [\"empty\"].includes(subscriptionType) &&\n                    <button onClick={() => {\n                        EventEmitter.dispatch(Event.SHOW_ALERT, {\n                            moduleName: \"AlertBuyProduct2\",\n                            courseID: '',\n                        });\n                    }} className=\"btn btn-border btn-buy\">\n                        <i className=\"fas fa-plus-square\"></i>구독하기\n                    </button>\n                }\n                {\n                    [\"expired01\"].includes(subscriptionType) &&\n                    <button onClick={() => {\n                        EventEmitter.dispatch(Event.SHOW_ALERT, {\n                            moduleName: \"AlertBuyProduct2\",\n                            courseID: '',\n                        });\n                    }} className=\"btn btn-border btn-buy\">\n                        <i className=\"fas fa-plus-square\"></i>다시 구독하기\n                    </button>\n                }\n            </li>\n            {\n                dp2 && <li className=\"dp2\">{dp2}</li>\n            }\n\n        </ul>\n    );\n}\n\nexport default FBViewLogin;","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isLoadingState } from '../core/store';\nimport fbase, { authService } from './fbase';\n// let tempLoginPopupParam: {\n//     from: string,\n//     courseID: string,\n// } | null = null;\nconst btnLabel: any = {\n    'login': '로그인',\n    'join': '가입신청',\n    'findpw': '이메일로 링크보내기',\n};\nconst FBViewLogout = () => {\n    const [inputEmail, setInputEmail] = useState('');\n    const [inputPw, setInputPw] = useState('');\n    const [inputPw2, setInputPw2] = useState('');\n    // const [newAccount, setNewAccount] = useState(false);\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    const [viewMode, setViewMode] = useState('login');// login, join, findpw\n    const setisLoading = useSetRecoilState(isLoadingState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.FB_START_LOGIN, (options: any) => {\n            // tempLoginPopupParam = options;\n            setisShowLoginPopup(true);\n        })\n    }, []);\n    const onChange = (event: any) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setInputEmail(value);\n        } else if (name === \"pw\") {\n            setInputPw(value);\n        } else if (name === \"pw2\") {\n            setInputPw2(value);\n        }\n    }\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (!inputEmail) {\n            alert('이메일을 입력해주세요.')\n            return;\n        }\n        // 신규가입인경우 비번 두번입력 비교\n        if (viewMode === 'join' && (inputPw !== inputPw2)) {\n            alert(fbase.convertErrorMessage({\n                code: 'auth/invalidNewPw'\n            }));\n            return;\n        }\n        try {\n            let data;\n            if (viewMode === 'join') {\n                setisLoading(true);\n                // create account\n                await authService.createUserWithEmailAndPassword(inputEmail, inputPw);\n                setisLoading(false);\n            } else if (viewMode === 'login') {\n                // log in\n                await authService.signInWithEmailAndPassword(inputEmail, inputPw);\n            } else if (viewMode === 'findpw') {\n                // 비번 찾기\n                authService.sendPasswordResetEmail(inputEmail).then(() => {\n                    alert(`입력하신 ${inputEmail}로 발송한 메일을 확인해주세요.`)\n                }).catch((error: any) => {\n\n                    if (error.code === 'auth/user-not-found') {\n                        alert(fbase.convertErrorMessage({\n                            code: error.code\n                        }));\n                    } else {\n                        alert('ERROR : ' + error.message);\n                    }\n                });\n\n            }\n\n        } catch (error) {\n            //   setError(error.message);\n            console.log(error);\n            alert(fbase.convertErrorMessage(error));\n            // alert(error.message);\n        }\n    }\n\n    // if (!isShowLoginPopup) {\n    //     if (tempLoginPopupParam !== null && tempLoginPopupParam.from === 'buyProduct') {\n    //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n    //             from: \"buyProduct\",\n    //             courseID: tempLoginPopupParam.courseID,\n    //         });\n    //     }\n    //     tempLoginPopupParam = null;\n    // }\n    return (\n        <div className=\"FBViewLogout\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                }} className=\"btn btn-login\"><i className=\"fas fa-user-circle i-left\"></i>로그인</button>\n\n\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login\">\n                    <div className=\"popup-login-in\">\n\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n\n                                <div className=\"nav\">\n                                    <div className=\"nav-tabs\">\n                                        <div onClick={() => {\n                                            setViewMode('login');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"login\" }])}>\n                                            로그인\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                        <div onClick={() => {\n                                            setViewMode('join');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"join\" }])}>\n                                            회원가입\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    ['findpw'].includes(viewMode) && <div className=\"tit-findpw\">비밀번호 찾기 </div>\n                                }\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n\n                        <form onSubmit={onSubmit}>\n                            <ul>\n                                <li>\n                                    <input className=\"form-styling\"\n                                        placeholder=\"이메일 입력\"\n                                        autoCapitalize=\"false\"\n                                        name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                </li>\n                                {\n                                    ['login', 'join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 입력\"\n                                            name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                    </li>\n                                }\n                                {\n                                    ['join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 확인\"\n                                            name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                    </li>\n                                }\n\n                            </ul>\n                            {/* <table>\n                                <tbody>\n                                    <tr>\n                                        <td>이메일</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                        </td>\n                                    </tr>\n                                    {\n                                        newAccount && <>\n                                            <tr>\n                                                <td>비밀번호 확인</td>\n                                                <td>\n                                                    <input className=\"form-styling\" name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                                </td>\n                                            </tr>\n                                        </>\n                                    }\n                                </tbody>\n                            </table> */}\n                            <button className=\"btn-login\">{btnLabel[viewMode]}</button>\n                        </form>\n                        {\n                            ['login', 'join'].includes(viewMode) &&\n                            <div className=\"footer-pw\">\n                                <button className=\"btn btn-underline\" onClick={() => {\n                                    // setNewAccount(true);\n                                    setViewMode('findpw')\n                                    // fbase.sendPasswordResetEmail(inputEmail);\n                                }}>비밀번호를 잊으셨나요?</button>\n                            </div>\n                        }\n\n                        {/* <AuthLoginUI /> */}\n                    </div>\n                    {/* <FindPassword /> */}\n                </div>\n\n            }\n\n\n        </div>\n    );\n};\n\nconst AuthLoginUI = () => {\n\n    const [stepCD, setStepCD] = useState('signin');\n\n    return (\n        <div className=\"AuthLoginUI\">\n            <div className=\"kareui-template-04 kareui-wrapper\">\n\n                <div className=\"section-top\">\n                    <div className=\"btn-group\">\n                        <div className=\"nav nav-tabs\">\n                            <div onClick={() => {\n                                setStepCD('signin');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signin\" }])}>\n                                로그인\n\t\t\t\t\t        </div>\n                            <div onClick={() => {\n                                setStepCD('signup');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signup\" }])}>\n                                회원가입\n\t\t\t\t\t        </div>\n                        </div>\n                        <div className=\"nav-active\">\n                            <div className={classnames([\"underline\", stepCD])}></div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className={`tab-content ${stepCD}`}>\n\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signin\" }])} id=\"signin\">\n\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n                            {/* <label htmlFor=\"username\">사용자이메일</label> */}\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n                            <label htmlFor=\"password\">비밀번호</label>\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호\" />\n\n                            <button className=\"btn-login\">\n                                로그인하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signup\" }])} id=\"signup\">\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"email\" placeholder=\"비밀번호\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호 확인\" />\n\n                            <button className=\"btn-login\">\n                                회원가입하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst FindPassword = () => {\n    return (\n        <div>\n            <input placeholder=\"이메일 입력\" autoCapitalize=\"false\"></input>\n\n\n            <button onClick={() => {\n                const emailStr = \"macaoshu@gmail.com\";\n                // authService.sendPasswordResetEmail(emailStr).then(() => {\n                //     alert(`입력하신 ${emailStr}로 발송한 메일을 확인해주세요.`)\n                // }).catch((error: any) => {\n                //     const errorMessage = error.errorMessage;\n                //     alert('ERROR : ' + errorMessage);\n                // });\n            }}>비밀번호찾기</button>\n        </div>\n    )\n}\n\nexport default FBViewLogout;","\nimport React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from './fbase';\nimport FBViewLogin from './FBViewLogin';\nimport FBViewLogout from './FBViewLogout';\n// import \"./FBState.scss\";\n\nconst FBState = () => {\n\n    const [checkedLogin, setCheckedLogin] = useState(false);\n    const [update, setUpdate] = useState(0);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, (userInfo: any) => {\n            console.log('Event.ON_AUTH_STATE_CHANGED')\n            setCheckedLogin(true);\n            setUpdate(Math.random());\n        });\n        fbase.initLogin();\n\n    }, []);\n\n    return (\n        <div className=\"FBState\">\n            {\n                checkedLogin\n                    ?\n                    fbase.userInfo ? <FBViewLogin /> : <FBViewLogout />\n                    :\n                    <div>loading...</div>\n            }\n        </div>\n    );\n};\n\nexport default FBState;","import React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport data from '../core/data';\nimport { isYTModuleState } from '../core/store';\nimport FBState from '../fb/FBState';\n\nconst Header = () => {\n    const isYTModule = useRecoilValue(isYTModuleState);\n    return (\n\n        <>\n            {!isYTModule && <div className=\"Header\">\n                <div className=\"utils-layout-marginauto0 header-in\">\n                    <div className=\"logo\" onClick={() => {\n                        data.gotoPage('', '');\n                    }}><i className=\"fas fa-compact-disc i-icon fa-spin\"></i>카셋영플</div>\n                    <div className=\"user-info\">\n                        <FBState />\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n};\n\nexport default Header;","import React from 'react';\n\nconst Mypage = () => {\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default Mypage;","import classnames from 'classnames';\nimport dayjs from 'dayjs';\nimport { css } from 'emotion';\nimport React, { useState } from 'react';\nimport { atom, useRecoilState, useRecoilValue } from 'recoil';\n\nconst sentenseCntHistory: any = {\n    \"2020\": [\n        [2, 0, 100,],\n        null,\n        [],\n    ],\n    \"2021\": [\n        [4, 0, 120, null, 10, 0, 0, 0, 3, 2, 3],\n        null,\n        [],\n    ]\n}\n\nconst updateCntHistory = (inDay: string, inPlusCnt: number) => {\n    // year\n    let yearArr = sentenseCntHistory[inDay.substr(0, 4)];\n    if (!yearArr) yearArr = sentenseCntHistory[inDay.substr(0, 4)] = [];\n    // month\n    let monthArr = yearArr[parseInt(inDay.substr(4, 2)) - 1];\n    // console.log('tempa-- ',monthArr)\n    if (!monthArr) monthArr = yearArr[parseInt(inDay.substr(4, 2)) - 1] = [];\n    // day\n    let dayNum = monthArr[parseInt(inDay.substr(6, 2)) - 1];\n    if (!dayNum) dayNum = 0;\n    monthArr[parseInt(inDay.substr(6, 2)) - 1] = dayNum + inPlusCnt;\n\n}\nconst goalCnt: number = 20;\nconst currentDateState = atom({\n    key: \"currentDateState\",\n    default: dayjs.utc().local(),\n})\n\nconst PageRecord = () => {\n    const [update, setUpdate] = useState(0);\n    return (\n        <div className=\"PageRecord\">\n            <div className=\"calendar\">\n                <div>\n                    <CalNav />\n                </div>\n                <div className=\"cal-table\">\n                    <WeekHeader />\n                    <WeekDays />\n                </div>\n\n                {/* <div>\n                    guide 조금만 더 노력해요\n                    목표 달성중이네요 이대로 쭉쭉\n                </div> */}\n\n                <button onClick={() => {\n                    updateCntHistory(\"20210127\", 1);\n                    setUpdate(Math.random());\n\n                }}>오늘+1</button>\n            </div>\n        </div>\n    );\n};\nconst CalNav = () => {\n    const [currentDate, setCurrentDate] = useRecoilState(currentDateState);\n    let todayStr = currentDate.format('YYYY.MM');\n    return (\n        <div className=\"CalNav\">\n            <div className=\"child l\">\n                <button className=\"btn\" onClick={() => {\n                    setCurrentDate(currentDate.add(-1, \"month\"));\n                }}><i className=\"fas fa-arrow-alt-circle-left\"></i></button>\n            </div>\n            <div className=\"child c\">{todayStr}</div>\n            <div className=\"child r\">\n                <button className=\"btn\" onClick={() => {\n                    setCurrentDate(currentDate.add(1, \"month\"));\n                }}><i className=\"fas fa-arrow-alt-circle-right\"></i></button>\n            </div>\n        </div>\n    )\n}\n\nconst WeekHeader = () => {\n\n    return (\n        <>\n            {/* temp <div>\n                다짐 : 나는 매일 100개의 문장을 반복 한다!\n                <div>수정</div>\n            </div> */}\n\n            <ul className=\"tr-week th-week\">\n                <li className=\"td-day\">S</li>\n                <li className=\"td-day\">M</li>\n                <li className=\"td-day\">T</li>\n                <li className=\"td-day\">W</li>\n                <li className=\"td-day\">T</li>\n                <li className=\"td-day\">F</li>\n                <li className=\"td-day\">S</li>\n            </ul>\n        </>\n\n    );\n}\ntype DayDisplayInfo = {\n    date: Date,\n    repeatPercent: number,\n    repeatCnt: number,// 문장 반복 횟수\n}\n\nconst Day = ({ info, classarr }: { info: DayDisplayInfo, classarr: string[] }) => {\n    let dateStr = info.date.getDate();\n\n    if (info.repeatPercent > 100) info.repeatPercent = 100;\n    return (<li className={classnames(classarr.concat([\"td-day\"]))}>\n        <div>{dateStr}</div>\n        <div className=\"graph-border\">\n            <div className=\"cnt\">{info.repeatCnt > 0 ? info.repeatCnt : ''}</div>\n            <div className={classnames(\"graph-bar\", css`\n                width: ${info.repeatPercent}%;\n            `)}></div>\n        </div>\n    </li>);\n}\n\nconst dateBeforeDays = (date: Date, days: number) => {\n    return new Date((date as Date).getTime() - 60 * 60 * 24 * 1000 * days);\n}\nconst getDayDisplayInfo = (inDayInfo: Date): DayDisplayInfo => {\n    // sentenseCntHistory\n    const nyear = inDayInfo.getFullYear();\n    const nmonth = inDayInfo.getMonth();\n    const nday = inDayInfo.getDate();\n    let repeatCnt = 0;\n    try {\n        repeatCnt = sentenseCntHistory[nyear][nmonth][nday - 1];\n    } catch (e) {\n\n    }\n    if (!repeatCnt) repeatCnt = 0;\n    return {\n        date: inDayInfo,\n        repeatCnt: repeatCnt,\n        repeatPercent: (repeatCnt / goalCnt) * 100,\n    }\n\n}\nconst WeekDays = () => {\n    const currentDate = useRecoilValue(currentDateState);\n    const Days: any = [];\n    const showDate = new Date(currentDate.format('YYYY-MM-DD'));\n    const firstDate = new Date(showDate.getFullYear(), showDate.getMonth(), 1); // 시작일\n    const lastDate = new Date(\n        showDate.getFullYear(),\n        showDate.getMonth() + 1,\n        0\n    ).getDate(); // 마지막일\n    let firstWeek = firstDate.getDay();\n\n    for (let i = 1, max = 7 * 6; i <= max; i++) {\n        let dateData: Date;\n        let dayNum: number;\n        let classArr: Array<string> = [];\n\n        // ? 날짜버튼에 넣을 Date 객체 생성, 지난달, 다음달 구분 class 추가\n        if (i <= firstWeek) {\n            // 지난달 - 날짜 계산\n            dayNum = dateBeforeDays(firstDate, Math.abs(i - firstWeek - 1)).getDate(); // 증가값 - 시작요일 - 1;\n            dateData = dateBeforeDays(firstDate, Math.abs(i - firstWeek - 1));\n            classArr.push('before');\n        } else if (i > firstWeek + lastDate) {\n            // 다음달\n            dayNum = i - firstWeek - lastDate; // 증가값 - 시작요일 - 마지막날짜;\n            dateData = new Date(showDate.getFullYear(), showDate.getMonth() + 1, dayNum);\n            classArr.push('after');\n        } else {\n            // 이번달\n            dayNum = i - firstWeek; // 증가값 - 시작요일;\n            dateData = new Date(showDate.getFullYear(), showDate.getMonth(), dayNum); // 시작일\n        }\n\n\n\n        Days.push(\n            <Day info={getDayDisplayInfo(dateData)}\n                classarr={classArr}\n                key={String(dayNum)}\n            />\n        );\n    }\n    return (<div>\n        <ul className=\"tr-week\">{Days.slice(0, 7)}</ul>\n        <ul className=\"tr-week\">{Days.slice(7, 14)}</ul>\n        <ul className=\"tr-week\">{Days.slice(14, 21)}</ul>\n        <ul className=\"tr-week\">{Days.slice(21, 28)}</ul>\n        <ul className=\"tr-week\">{Days.slice(28, 35)}</ul>\n        <ul className=\"tr-week\">{Days.slice(35, 42)}</ul>\n    </div>);\n}\n\n\n\nexport default PageRecord;","import React from 'react';\nimport \"./scss/PageCSSHamburger.scss\";\n\nconst PageCSSHamburger = () => {\n    return (\n        <div className=\"PageCSSHamburger\">\n            <div className=\"hamburger\">\n                <input type=\"checkbox\"></input>\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default PageCSSHamburger;","import React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\n\nlet interval: any = null;\nconst ToastAlert = () => {\n    const [info, setInfo] = useState({\n        message: '',\n        mtime: 0,\n    });\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_TOAST_MESSAGE, (option: {\n            message: string,\n            mtime: number\n        }) => {\n            setInfo(option);\n            if (option.mtime === 0) {\n                option.mtime = 3000;\n            }\n            if (interval) {\n                clearInterval(interval);\n            }\n            interval = setInterval(() => {\n                clearInterval(interval);\n                setInfo({\n                    message: '',\n                    mtime: 0,\n                })\n            }, option.mtime)\n        });\n    }, [])\n    return (\n        <div className={classnames(\"ToastAlert\", css`\n            bottom:${info.message === '' ? '-100px' : '20px'}\n        `)}>\n            {info.message}\n        </div>\n    );\n};\n\nexport default ToastAlert;","\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport PrintTable from '../components/PrintTable';\nimport Alert from './Alert';\nimport CourseMain from './CourseMain';\nimport CoursePlay from './CoursePlay';\nimport CoursePrint from './CoursePrint';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Mypage from './Mypage';\n\nimport PageRecord from './PageRecord';\nimport PageCSSHamburger from './PageCSSHamburger';\nimport PageHome from './PageHome';\nimport ToastAlert from './ToastAlert';\n\nconst PageRoute = () => {\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            {/* <Route path=\"/\" component={Header}/> */}\n            <Header />\n            {/* <Route path=\"/\" component={GNB}/> */}\n            <Loading />\n            <ToastAlert />\n            <Alert />\n            <PrintTable />\n            <div className=\"page-group utils-layout-marginauto0\">\n                <Route exact path=\"/\" component={PageHome} />\n\n                <Route path=\"/CourseMain\" component={CourseMain} />\n                <Route path=\"/CoursePlay\" component={CoursePlay} />\n                <Route path=\"/CoursePrint\" component={CoursePrint} />\n                <Route path=\"/record\" component={PageRecord} />\n                <Route path=\"/Mypage\" component={Mypage} />\n                <Route path=\"/PageCSSHamburger\" component={PageCSSHamburger} />\n            </div>\n\n            <Footer />\n        </div>\n    );\n};\n\nexport default PageRoute;","import React from 'react';\nimport PageRoute from './pages/PageRoute';\nimport './scss/Main.scss';\n\n// starterKit-staticWebStyle1\nfunction App() {\n  // prevena\n  let isRen: boolean = false;\n  if (process.env.NODE_ENV === 'development') {\n    const href = (window as any).location.href;\n    if (href.split(\"localhost\").length > 1) {\n      isRen = true;\n    }\n  }\n\n  // PORT=9922\n  // == prevena\n\n  return (\n    <div className=\"App v1-2\">\n      {/* <Iframe\n        url={`https://loop-fa69b.web.app/indextg.html?ver=${appBridge.publishingInfo.webVersion}`}\n        width=\"1px\"\n        height=\"1px\"\n        id=\"gaiframe\"\n        position=\"absolute\" /> */}\n      {/* {isRen && <>\n        <PageRoute />\n      </>} */}\n      <PageRoute />\n    </div>\n  );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { RecoilRoot } from \"recoil\";\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <RecoilRoot>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}