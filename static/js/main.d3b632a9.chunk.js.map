{"version":3,"sources":["resource/topics sync /^/.//.*//mm/.json$","views/core/EventEmitter.tsx","views/core/store.ts","views/core/Core.ts","views/core/i18n.ts","views/core/AppBridge.ts","views/core/Data.ts","views/component/AudioPlayer.tsx","views/wh/WCourseItem.tsx","views/wh/WCourse.tsx","views/wh/WCourseMain.tsx","views/wh/WHeader.tsx","views/wh/WMain.tsx","views/component/Equalizer.tsx","views/PagePlaylist.tsx","views/PageShadowing.tsx","views/wh/WPlayer.tsx","views/component/MDictation.tsx","views/wh/WShadowing.tsx","views/wh/WHome.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Event","events","event","data","this","forEach","callback","push","IS_APP_READY","INSERT_PAGE","REPLACE_PAGE","GOTO_BACK","RESET_PAGE","SHOW_ALERT","HIDE_ALERT","INIT_AUDIO","AUDIO_PLAY_PAUSE","AUDIO_STOP","SENTENSE_PLAYING","SENTENSE_PAUSE","SET_BTN_PLAY_STATE","CHANGE_BTN_PLAY_STATE","SHOW_NOTI_MESSAGE","PURCHASE_COMPLETE","FREETIME_UPDATED","CLICK_HOTCLIP_THUMB","SHOW_LOADING","HIDE_LOADING","AUDIO_PLAY_COUNT","CHANGE_TPID","config","isLoadingState","atom","key","default","isCloseDetailPanelState","sentenseRepeatIdxState","btnRepeatModeUpdateState","wbIsOpenNavState","tpidState","cidState","isShowShadowingState","scrollingTick","scrollingLazyTime","playHotClip","thumbJSON","topicJSON","playClipIdx","json","inCallback","getTopicData","topicID","makeMoreInfoJSON","initAudio","setTimeout","audioPlayPause","sentense","idx","history","createBrowserHistory","isSentensePressing","addEvent","changePageForHistory","listen","location","action","console","log","paramD","window","href","search","d","substring","decrypt","decryptURL","tpid","EventEmitter","dispatch","cid","substr","alert","text","bytes","CryptoJS","AES","JSON","parse","toString","enc","Utf8","err","pageID","arr","message","moduleName","setData","playThumb","firstY","scrollY","clearInterval","setInterval","posY","selector","isEnterFrame","$target","document","querySelector","requestAnimationFrame","enterFrame","nextY","scrollTo","scrollTop","Math","abs","i18n","use","initReactI18next","init","resources","en","translation","hello","bye","ko","lng","fallbackLng","keySeparator","interpolation","escapeValue","win","param","assetPath","deviceType","buyInappProductID","publishingInfo","webVersion","settingInfo2","savedSentense","settingInfo","settingLang","kuid","settingVersion","repeatMode","lastAlbumID","lastTabIdx","useTime","showClips","keepClips","historyClips","keepSentense","sentenseMode","launchTimeArr","inappInfo","inappStartDate","nextInappInfo","nextInappStartDate","todayFreePlayCnt","appinit","notchHieght","getElementById","offsetHeight","env","screenWidth","screen","width","screenHeight","height","hasNotch","lang","changeLanguage","queryString","toWeb","poststring","consolelog","stringify","regionCode","removeOptionalFormat","currencySymbol","deviceLocale","ga","eventCategory","eventAction","eventLabel","eventValue","initStorageData","storageData","toApp","infoStr","backInappInfo","transactionState","convertProdFullIDToCode","purchaseComplete","utils","getTodayStr","prodID","date","transactionDate","t","msg","postData","postData2","data2","inID","result","entries","value","parseData","includes","data1","webkit","messageHandlers","postMessage","str","startsWith","replace","length","isAllPass","cntSum","todayFreeCntDefault","core","showBuyMessage","gt","Date","getTime","saveForPlayCntGaptime","cnt","syncStorageData","inMonthCode","inStartDate","gotoBack","storageDataStr","isSameDay","todayISO","newDates","concat","getKUID","slice","courseJSON","require","route","supportLang","currPlayIdx","currPlayBtnState","currPageCourseIdx","gaPageName","gaPageSubName","gaFrame","logCnt","currJSON","currIdx","currTopicID","currPlaysTotal","playAudioCnt","tempGotoSavedSentenseIdx","playerSetting","repeat","interval","speed","leftJSON","pageShadowingParam","sentenseEn","sentenseKo","sentenseIdx","currTopicData","rootPath","numberWithCommas","x","parts","split","join","today","timezoneOffset","getTimezoneOffset","now","day1","day2","toISOString","getLiftDate","startDate","dateLen","diffDays","getAfterDay","baseDate","addDay","getDateStr","otherDate","ceil","getFullYear","_padStart","getMonth","getDate","getHours","getMinutes","uu","c","r","random","language","fullPath","i","tabs","items","j","aid","obj","p","assign","hitType","appBridge","tabsJSON","tabsItems","item","courseID","axios","get","then","response","catch","error","finally","inType","inItemIdxStr","inTopicID","clipJSON","filterIdxs","filterSentense","filter","type","convert0","s","sentenseJSON","en_0","ko_0","cleanAudio","state","desc","timeen","startTime","Number","endTime","nextIdx","setCurrPlayBtnState","type2","type1","newArr","AudioPlayer","props","path","isInitLoadingAudio","isInitLoadingAudioCallback","refAudio","createRef","elAudio","isAudioAttachEvent","currRealStatus","currStartTimeOri","currEndTimeOri","currEndTime","currCallback","subscribe","volume","setState","option","audioPause","current","addEventListener","pause","currTime","currentTime","undefined","currentSoundTime","intervalTime","settingInterval","audioSeek","time","audioPlay","playbackRate","addPlayCnt","play","className","ref","src","getRootPath","Component","CItem","itemJSON","onClick","setParameter","query","tit","CItemMovie","Tits","idxPad","_pad","String","WCourseItem","viewType","Tags","Tag","WCourse","parentName","topics","item2","i2","itemViewType","useState","isHide","setIsHide","tags","title","classnames","WCourseMain","useRecoilValue","useEffect","courseItemListJSON","WHeader","useRecoilState","Core","uniqCnt","WMain","course1","item1","Equalizer","callModeChange","temprepeatMode","scriptMode","PagePlaylist","isShowPlayerControl","isDataAble","setIsDataAble","getCourceItemToTopicID","setClipHistory","isScrolling","$el","y","offsetTop","animateScrollTo","elementToScroll","remove","TopicCover","info","css","GotoFullScript","makeCurrJSON","replacePage","PlayLists","setActiveIdx","isCloseDetailPanel","activeIdx","isActive","forceRender","setForceRender","SentenseItem","sentenseRepeatIdx","setSentenseRepeatIdxState","clipID","isGlassMode","setIsGlassMode","isCheckVal","isCheck","setIsCheck","isOpenDesc","setIsOpenDesc","setIsShowShadowing","useSetRecoilState","words","checkClick","tf","makeKey","setSettingKeepClipSentense","setSettingKeepSentenseMoreInfo","playOneItem","onTouchStart","sentensePressing","active","isSupportLang","en_","glasson","WordList","Itm","ItemCnt","PlayerControl","renderCnt","setRenderCnt","isClose","setIsClose","setRepeat","setSpeed","isFreeClip","close","BtnRepeatMode","sta","setIsDisable","setUpdate","update","dataRepeatMode","isPlay","BtnScriptMode","setMode","WPlayer","isReadyJSON","setIsReadyJSON","makeCurrJSONWH","sentenseSplit","correctArr","shuffleWords","MDictation","trim","_shuffle","word","oriIdx","submitIdx","setSubmitIdx","submitArr","setSubmitArr","hintIdx","setHintIdx","setMessage","isComplete","setIsComplete","blanks","submitWord","dpWord","toLowerCase","cloneArr","ControlBtns","setIsPlay","PageShadowing","WShadowing","WHome","setTpID","setCID","isShowShadowing","options","App","setIsAppReady","setIsLoading","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3b632a9.chunk.js","sourcesContent":["var map = {\n\t\"./a000_basic/mm.json\": 319,\n\t\"./blank/mm.json\": 320\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 318;","\n\n/**\n * use\n * import EventEmitter, {Event} from \"common/events/EventEmitter\";\n *\n * dispatch\n * EventEmitter.dispatch(Event.EVENT_EXAMPLE, {같이 넘길 파라메터 });\n *\n * subscribe\n * EventEmitter.subscribe(Event.EVENT_EXAMPLE, (options:any)=>{\n *  {같이 넘길 파라메터 }\n * });\n */\nexport class Event {\n\n\tpublic static IS_APP_READY: string = \"isAppReady\";\n\tpublic static INSERT_PAGE: string = \"insertPage\";\n\tpublic static REPLACE_PAGE: string = \"replacePage\";\n\tpublic static GOTO_BACK: string = \"gotoBack\";\n\tpublic static RESET_PAGE: string = \"resetPage\";\n\tpublic static SHOW_ALERT: string = \"showAlert\";\n\tpublic static HIDE_ALERT: string = \"hideAlert\";\n\tpublic static INIT_AUDIO: string = 'initAudio';\n\tpublic static AUDIO_PLAY_PAUSE: string = 'audioPlayPause';\n\tpublic static AUDIO_STOP: string = 'audioStop';\n\tpublic static SENTENSE_PLAYING: string = 'sentensePlaying';\n\tpublic static SENTENSE_PAUSE: string = 'sentensePause';\n\tpublic static SET_BTN_PLAY_STATE: string = 'setBtnPlayState';// 외부에서 버튼 상태를 변경할때 발생 \n\tpublic static CHANGE_BTN_PLAY_STATE: string = \"changeBtnPlayState\";// 버튼 자신이 변경되면 외부에 알리느라 발생  \n\tpublic static SHOW_NOTI_MESSAGE: string = \"showNotiMessage\";\n\tpublic static PURCHASE_COMPLETE: string = \"purchaseComplete\";\n\tpublic static FREETIME_UPDATED: string = \"freetimeUpdated\";\n\tpublic static CLICK_HOTCLIP_THUMB: string = \"clickHotclipThumb\";\n\tpublic static SHOW_LOADING: string = \"showLoading\";\n\tpublic static HIDE_LOADING: string = \"hideLoading\";\n\tpublic static AUDIO_PLAY_COUNT: string = \"audioPlayClunt\";\n\tpublic static CHANGE_TPID: string = \"changeTPID\";\n\n\tconstructor() {\n\t}\n\n\tpublic events: any = {};\n\tpublic dispatch(event: string, data?: any): void {\n\t\tif (!this.events[event]) return;\n\t\tthis.events[event].forEach((callback: (arg0: any) => void) =>\n\t\t\tcallback(data)\n\t\t);\n\t}\n\tpublic subscribe(event: string, callback: any): void {\n\t\tif (!this.events[event]) this.events[event] = [];\n\t\tthis.events[event].push(callback);\n\t}\n\tpublic remove(event: string): void {\n\t\tif (this.events[event]) this.events[event] = null;\n\t}\n}\n\nexport default new Event();\n","import { atom, atomFamily, RecoilState } from \"recoil\";\nimport { isParameter } from \"typescript\";\n\nexport const config = {\n    appid: \"com.kareui.caseteenglish\",\n    inappIDs: {\n        \"unlock01\": \"com.kareui.caseteenglish.unlock01\"\n    }\n}\n\nexport const isLoadingState = atom({\n    key: \"isLoadingState\",\n    default: true,\n})\n\n// playControl detailPanel state\nexport const isCloseDetailPanelState = atom({\n    key: \"isCloseDetailPanelState\",\n    default: true,\n})\n\nexport const sentenseRepeatIdxState: RecoilState<number> = atom({\n    key: \"sentenseRepeatIdxState\",\n    default: 9999,\n})\n\nexport const btnRepeatModeUpdateState: RecoilState<number> = atom({\n    key: \"btnRepeatModeUpdateState\",\n    default: 0,\n})\n\nexport const homeListSortState: RecoilState<string> = atom({\n    key: \"homeListSortState\",\n    default: 'reverse',\n})\nexport const updateCntPlayState: RecoilState<number> = atom({\n    key: \"updateCntPlayState\",\n    default: 0,\n})\n\nexport const wbIsOpenNavState = atom({\n    key: \"wbIsOpenNavState\",\n    default: false,\n});\n\nexport const tpidState = atom({\n    key: \"tpidState\",\n    default: '',\n})\n\nexport const cidState = atom({\n    key: \"cidState\",\n    default: '',\n})\n\nexport const isShowShadowingState = atom({\n    key: \"isShowShadowingState\",\n    default: false,\n})\n\n\n// export const updatePagePlaylistState: RecoilState<number> = atom({\n//     key: \"updatePagePlaylistState\",\n//     default: 0,\n// })\n\n\nexport default {};","import CryptoJS from 'crypto-js';\nimport { createBrowserHistory } from \"history\";\nimport data from './Data';\nimport EventEmitter, { Event } from './EventEmitter';\n\nlet scrollingTick: any = null;\nlet scrollingLazyTime: number = 0;\nconst key = \"XDVl1SGxRn\";\nclass PlayHotClip {\n    thumbJSON: any = null;// hotclip json\n    topicJSON: any = null;// 해당ID의 FULL토픽\n    playClipIdx: number = 0;\n\n\n    setData(json: any, inCallback: () => void) {\n        this.playClipIdx = 0;\n        this.thumbJSON = json;\n        data.getTopicData(json.topicID, (topicJSON: any) => {\n            // 숨김문자 생성(여기서 생성 해서 리렌더링시에 다시 하지 않도록 한다)\n            this.topicJSON = data.makeMoreInfoJSON(topicJSON);\n            // console.log('getTopicData sss', currJSON);\n            data.initAudio(this.topicJSON);\n\n            setTimeout(() => {\n                inCallback();\n            });\n\n        });\n        // this.currJSON = data.makeMoreInfoJSON(json);\n        // data.initAudio(json);\n\n    }\n    playThumb(inCallback: (state: string) => void) {\n        if (!this.topicJSON) return;\n        // 1번 문장 플레이\n        data.audioPlayPause(this.thumbJSON.sentense[0].idx, () => {\n            // 2번 문장 플레이\n            inCallback('0');\n            data.audioPlayPause(this.thumbJSON.sentense[1].idx, () => {\n                // 끝\n                inCallback('1');\n            });\n        });\n    }\n}\nconst playHotClip = new PlayHotClip();\n\nclass Core {\n\n    history = createBrowserHistory();\n    isSentensePressing: boolean = false;\n\n    constructor() {\n        this.addEvent();\n        setTimeout(() => {\n            this.changePageForHistory();\n        }, 1000)\n    }\n\n    addEvent() {\n        this.history.listen(({\n            location,\n            action\n        }: {\n            location: any,\n            action: any,\n        }) => {\n            console.log('location', location, action)\n            if (action === 'POP') {\n                this.changePageForHistory();\n            }\n        });\n    }\n\n\n    setParameter(paramD: string) {\n\n        if (paramD === '') {\n            this.history.push(\"\");\n            window.location.href = '/';\n        } else {\n            // this.history.push(`?d=${paramD}`);\n            window.location.href = `?d=${paramD}`;\n        }\n\n        this.changePageForHistory();\n        // EventEmitter.dispatch(Event.CHANGE_HISTORY, {});\n        // Object.assign(queryStringObj, {param: paramName});\n        // EventEmitter.dispatch(Event.CHANGE_HISTORY, queryStringObj);\n    }\n\n    changePageForHistory() {\n        const search = (window as any).location.search;\n        console.log('decp search: ', search)\n        const d = search.substring(3);// ?d=을 제외한 나머지\n        console.log('decp d: ', d)\n        const decrypt = this.decryptURL(d);\n        if (decrypt && decrypt.tpid) {\n            console.log('decp : ', decrypt)\n            EventEmitter.dispatch(Event.CHANGE_TPID, {\n                tpid: decrypt.tpid,\n                cid: decrypt.cid,\n            });\n        } else {\n            if (search.substr(0, 3) === '?d=') {\n                alert('wrong url');\n            } else {\n                console.log('correct case');\n            }\n            console.log('decp : undefined tpid')\n\n            EventEmitter.dispatch(Event.CHANGE_TPID, {\n                tpid: ''\n            });\n        }\n        // console.log('ueryString.parse(search)',this.decryptURL(d).tpid);\n        // alert((window as any).history.search);\n    }\n\n    decryptURL(text: string) {\n        try {\n            text = text.substring(7);\n            const bytes = CryptoJS.AES.decrypt(text, key);\n            return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n        } catch (err) {\n            // console.error(err);\n            return;\n        }\n    }\n\n    insertPage(pageID: string) {\n        EventEmitter.dispatch(Event.INSERT_PAGE, {\n            pageID: pageID\n        });\n    }\n    replacePage(pageID: string) {\n        EventEmitter.dispatch(Event.REPLACE_PAGE, {\n            pageID: pageID\n        });\n    }\n    gotoBack(idx: number) {\n        EventEmitter.dispatch(Event.GOTO_BACK, {\n            idx: idx\n        });\n    }\n    resetPage(arr: string[]) {\n        EventEmitter.dispatch(Event.RESET_PAGE, {\n            arr: arr\n        });\n    }\n    showAlert(message: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: 'AlertBasic',\n            message: message,\n        });\n    }\n    showAlertModule(moduleName: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: moduleName\n        });\n    }\n    hideAlert() {\n        EventEmitter.dispatch(Event.HIDE_ALERT, {});\n    }\n    showBuyMessage() {\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, { moduleName: \"AlertNoticeInapp\" })\n    }\n    playHotclipThumb(json: any, inCallback: (state: string) => void) {\n        playHotClip.setData(json, () => {\n            playHotClip.playThumb(inCallback);\n        });\n\n    }\n    playHotclipDetail(json: any) {\n\n    }\n    // 현재 화면이 스크롤링 중인가?\n    isScrolling(callback: (result: boolean) => void) {\n        const firstY = window.scrollY;\n        setTimeout(() => {\n            if (firstY === window.scrollY) {\n                callback(false);\n            } else {\n                callback(true);\n            }\n        }, 100);\n    }\n    // sentense클릭동안 스크롤락 실행\n    sentensePressing() {\n        this.isSentensePressing = true;\n        scrollingLazyTime = 2000;// 2초\n        if (scrollingTick) {\n            clearInterval(scrollingTick);\n        }\n        scrollingTick = setInterval(() => {\n            scrollingLazyTime = scrollingLazyTime - 500;\n            if (scrollingLazyTime <= 0) {\n                this.isSentensePressing = false;\n                scrollingLazyTime = 0;\n                clearInterval(scrollingTick);\n            }\n        }, 500);\n    }\n    scrollTo(posY: number, selector?: string) {\n        let isEnterFrame = true;\n        console.log('tmplog_posY', posY)\n        const $target: any = (selector) ? document.querySelector(selector) : window;\n        // $target.scrollTo(0, posY);\n        // return;\n\n        function enterFrame() {\n            // 이동위치 = 현재 위치 + (목표 위치 - 현재 위치) * 속도\n            const nextY = window.scrollY + (posY - window.scrollY) * 0.23;\n            $target.scrollTo(0, nextY);\n\n            const scrollY = (selector) ? $target.scrollTop : window.scrollY;\n\n            const math = Math.abs(scrollY - posY);\n            if (math < 5) {\n                isEnterFrame = false;\n            }\n            if (isEnterFrame) {\n                window.requestAnimationFrame(enterFrame);\n            }\n        }\n        setTimeout(() => {\n            isEnterFrame = false;\n        }, 2000);\n        window.requestAnimationFrame(enterFrame);\n\n    }\n\n\n}\n\nexport default new Core();","\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst resource = {\n    en: {\n        translation: {\n            hello: \"hello\",\n            bye: \"bye\",\n            'home-todayclip': \"TODAY Clip\",\n            'home-toipcclip': \"Detail Clip\",\n            'home-allclip': \"All Clip\",\n            'home-traning': \"LOOP\",\n            'alert-a001': \"No items to restore\",\n            'alert-a002': \"Restoration success\",\n            'alert-a003': \"There is no storage item.\",\n            'level1-label': 'Lv.1',\n            'level2-label': 'Lv.2',\n            'level3-label': 'Lv.3',\n            'level4-label': 'Lv.4',\n            'sortby-newest': 'Newest first',\n            'sortby-oldest': 'Oldest first',\n            'recent': 'Recent',\n            'setting-open': 'Setting open',\n            'setting-close': 'Setting close',\n            'repeat': 'Repeat',\n            'interval': 'Interval',\n            'speed': 'Speed',\n            'play-all': 'Play all',\n            'play-all-stop': 'Stop all',\n            'en-ko': 'Senten Show',\n            'en-only': 'Show En',\n            'ko-only': 'Senten Hide',\n            'sentenselength': 'Sentense length',\n            'play': 'Play',\n            'play-infinity': 'Infinite play',\n            'stop-infinity': 'Infinite stop',\n            'save-sentense': 'Sentense save',\n            'saved-sentense': 'Saved',\n            'shadowing-training': 'Deep Training',\n            'glassmode-show': 'Show hint',\n            'words': 'Words',\n            'null-priceinfo1': 'Could not get price information.',\n            'null-priceinfo2': 'Check your internet connection.',\n            'inapp-restore': 'Restore in-app purchases',\n            'saved-clips': 'Saved clips',\n            'saved-sentences': 'Saved sentences',\n            'showen-last500': 'Shows the last 500 items',\n            'inapp-alert1': ' free times a day',\n            'inapp-alert2': 'One purchase and unlimited ',\n            'inapp-alert3': 'lifetime access to all features!!',\n            'inapp-alert-btnok': 'Membership details',\n            'inapp-alert-btnno': 'Close',\n        },\n    },\n    ko: {\n        translation: {\n            hello: \"안녕\",\n            bye: \"잘가\",\n            'home-todayclip': \"TODAY 클립\",\n            'home-toipcclip': \"심화 코스\",\n            'home-allclip': \"전체 클립\",\n            'home-traning': \"반복\",\n            'alert-a001': \"복원할 내역이 없습니다.\",\n            'alert-a002': \"구매복원에 성공하였습니다.\",\n            'alert-a003': \"저장 항목이 없습니다.\",\n            'level1-label': 'Lv.1',\n            'level2-label': 'Lv.2',\n            'level3-label': 'Lv.3',\n            'level4-label': 'Lv.4',\n            'sortby-newest': '최신회부터',\n            'sortby-oldest': '첫회부터',\n            'recent': '최근',\n            'setting-open': '설정열기',\n            'setting-close': '설정닫기',\n            'repeat': '반복',\n            'interval': '간격',\n            'speed': '속도',\n            'play-all': '전체듣기',\n            'play-all-stop': '듣기중단',\n            'en-ko': '영+한',\n            'en-only': '영어만',\n            'ko-only': '한글만',\n            'sentenselength': '문장길이',\n            'play': '듣기',\n            'play-infinity': '무한반복',\n            'stop-infinity': '반복종료',\n            'save-sentense': '문장저장',\n            'saved-sentense': '저장됨',\n            'shadowing-training': '강화훈련',\n            'glassmode-show': '잠깐보기',\n            'words': '단어',\n            'null-priceinfo1': '구매 상품정보를 받아오지 못했습니다.',\n            'null-priceinfo2': '잠시 후 다시 시도해 주시거나 인터넷 연결상태를 확인해 주세요.',\n            'inapp-restore': '이미 구매하셨나요? (구매복원)',\n            'saved-clips': '클립 저장 보관함',\n            'saved-sentences': '문장 저장 보관함',\n            'showen-last500': '최근 500개까지 보여짐',\n            'inapp-alert1': '번 오늘 무료이용을 다 사용하셨네요^^',\n            'inapp-alert2': '한 번의 구매로 모든 기능을 무제한으로',\n            'inapp-alert3': '평생 제약 없이 이용하세요!!',\n            'inapp-alert-btnok': '멤버십 상세 보기',\n            'inapp-alert-btnno': '그냥 닫기',\n\n        },\n    },\n};\ni18n.use(initReactI18next).init({\n    resources: resource,\n    lng: \"en\",\n    fallbackLng: \"en\",\n    // debug: true,\n    keySeparator: false,\n    interpolation: { escapeValue: false },\n});\n\nexport default i18n;\n\n","import queryString from \"querystring\";\nimport data, { TProductCode } from \"./Data\";\nimport core from \"./Core\";\nimport EventEmitter, { Event } from \"./EventEmitter\";\nimport lang from './i18n';\nimport { config } from './store';\n\nimport moment from 'moment';\nexport const DEFAULT_USE_TIME = 10 * 60;// 1일 무료사용 시간\n\n// {\n//     \"settingLang\":\"ko\",\n//     \"kuid\":\"U981e0aa6da60b9a\",\n//     \"settingVersion\":1,\n//     \"repeatMode\":\"\",\n//     \"lastAlbumID\":\"\",\n//     \"lastTabIdx\":0,\n//     \"useTime\":600,\n//     \"showClips\":[],\n//     \"keepClips\":[\"a099yfkwyejbzk\"],\n//     \"historyClips\":[\"a060untjiktgxa\",\"a098klawkwhodf\",\"a096gcrsumsepl\",\"a097uhzpgkcbmu\",\"a091jnieljdjto\",\"a024xexytlxkko\",\"a025exyqepyfkp\",\"a099yfkwyejbzk\",\"a059swrhegkcno\"],\n//     \"keepSentense\":[\"a099yfkwyejbzk_0\"],\"sentenseMode\":\"_k\",\n//     \"launchTimeArr\":[\"2020-10-07:12-56\",\"2020-10-07:12-56\",\"2020-10-06:13-14\",\"2020-10-06:13-14\",\"2020-10-06:09-34\"],\"inappInfo\":\"free\",\"inappStartDate\":\"\",\n//     \"nextInappInfo\":\"free\",\"nextInappStartDate\":\"\",\"todayFreePlayCnt\":86}\nconst selfName = \"AppBridge\"\nexport class AppBridge {\n    win: any;\n    param: any;\n\n    assetPath: string = '';\n    deviceType: 'app' | 'web' | '' = '';\n    buyInappProductID: string = '';\n    publishingInfo: {\n        webVersion: string,// web-app구분을 위한 버전정보 \n    } = {\n            webVersion: 'v1_4'\n        }\n    settingInfo2: {\n        savedSentense: any\n    } = {\n            savedSentense: { 'id': 'sentense' },\n        }\n    settingInfo: {\n        settingLang: string,\n        // deviceLocale: string,\n        kuid: string,\n        settingVersion: number,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        lastAlbumID: string,\n        lastTabIdx: number,\n        useTime: number | 'none',\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        historyClips: string[],\n        sentenseMode: '_k' | 'ek' | 'e0' | '0k' | '00',\n        launchTimeArr: string[],\n        inappInfo: TProductCode,// 현재 상품정보 \n        inappStartDate: string, // 현재 상품 구매일 \n        nextInappInfo: TProductCode,// 다음 이어질 상품정보 \n        nextInappStartDate: string, // 다음 이어질 상품 시작일 \n        todayFreePlayCnt: number,// 오늘 무료 카운팅 \n    } = {\n            settingLang: 'ko',\n            // deviceLocale: '',\n            kuid: '',\n            settingVersion: 1.0,\n            repeatMode: '',\n            lastAlbumID: '',\n            lastTabIdx: 0,\n            useTime: 'none',\n            showClips: [],\n            keepClips: [],\n            historyClips: [],\n            keepSentense: [],\n            // keepClips: [\"a060untjiktgxa\", \"a098klawkwhodf\"],\n            // historyClips: [\"a025exyqepyfkp\", \"a095alhjfoljev\"],\n            // keepSentense: [\"a060untjiktgxa_0\", \"a059swrhegkcno_0\", \"a099yfkwyejbzk_2\"],\n            sentenseMode: '_k',\n            launchTimeArr: [],// 최근 10개만 보관 ,\n            inappInfo: 'free',\n            inappStartDate: '',\n            nextInappInfo: 'free',\n            nextInappStartDate: '',\n            todayFreePlayCnt: 0,\n        }\n    appinit: () => void = () => {\n        const notchHieght = document.getElementById('safe-area-top')?.offsetHeight;\n        data.env.screenWidth = window.screen.width;\n        data.env.screenHeight = window.screen.height;\n        data.env.hasNotch = (notchHieght && notchHieght > 0) ? true : false;\n        // alert(data.env.hasNotch);\n        // alert(window.screen.availHeight);\n        // alert(data.deviceLocale);\n        // lang.changeLanguage(data.deviceLocale);\n        lang.changeLanguage('ko');\n        EventEmitter.dispatch(Event.IS_APP_READY, {});\n    };\n    constructor() {\n        this.win = window as any;\n        this.param = queryString.parse(this.win.location.search.substr(1));\n        this.win.toWeb = (poststring: any) => {\n            // alert('toWeb : ');\n            this.toWeb(poststring);\n        }\n\n        if (process.env.NODE_ENV == 'development') {\n            // this.settingInfo.inappInfo = \"unlock01\";\n        }\n\n        setTimeout(() => {\n            this.consolelog(JSON.stringify('poststring'))\n        }, 3000)\n\n        if (process.env.NODE_ENV === \"development\") {\n            // 개발모드 \n            setTimeout(() => {\n                this.appinit();\n            }, 1000)\n        }\n\n    }\n    // init(initCallback: () => void) {\n    //     alert('aaaaa')\n    //     // this.toApp(JSON.stringify({\n    //     //     \"code\": \"setLocalStorage\",\n    //     //     \"data1\": \"test_key\",\n    //     //     \"data2\": \"test_data\"\n    //     // }));\n    //     this.initCallback = initCallback;\n    //     if (this.param.m === 'hgoezwpuds') {\n    //         // 앱 \n    //         this.deviceType = 'app';\n    //     } else if (this.param.m === 'zvggvnadbl') {\n    //         this.deviceType = 'web';\n    //         // web\n    //         this.initCallback();\n    //     } else {\n    //         // else는 개발 완료 후 제거 \n    //         this.initCallback();\n    //     }\n    // }\n    // app->web\n    toWeb(poststring: any) {\n        // 앱 url유효성 체크 \n        // if (this.param.m !== 'hgoezwpuds') {\n        //     // 앱 \n        //     return;\n        // }\n        this.consolelog('toWeb1' + JSON.stringify(poststring))\n        // alert('T O W E B : ' + JSON.stringify(poststring));\n\n        const code = poststring.code;\n\n        // tag_removega\n        // data.ga({\n        //     eventCategory: selfName, //서브화면명 \n        //     eventAction: 'toWeb-code-' + code, //이벤트명\n        //     eventLabel: '',\n        //     eventValue: '',\n        // });\n\n        if (code === 'init') {\n\n        } else if (code === 'initData') {\n            // alert('poststring.assetPath' + poststring.assetPath)\n            this.assetPath = poststring.assetPath;\n            data.regionCode = this.removeOptionalFormat(poststring.regionCode);\n            data.currencySymbol = poststring.currencySymbol;\n            data.deviceLocale = poststring.deviceLocale;\n            // alert('poststring.deviceLocale:' + poststring.deviceLocale);\n\n\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'toWeb-initData1', //이벤트명\n                eventLabel: `regionCode_${data.regionCode}#currencySymbol_${data.currencySymbol}`,\n                eventValue: '',\n            });\n            //\"inappInfo\":\"free\",\"inappStartDate\":\"\"\n            // alert(poststring.regionCode);\n            this.initStorageData(poststring.storageData);\n            setTimeout(() => {\n                this.appinit();\n                // 초기화 후 인앱정보 요청 \n                this.toApp(JSON.stringify({\n                    \"code\": \"callInappInfo\",\n                    \"data1\": \"\",\n                    \"data2\": \"\"\n                }));\n            }, 100);\n\n        } else if (code === \"backInappInfo\") {\n            // 초기화 후 인앱정보 응답\n            // alert(poststring.infoStr);\n\n            const arr = JSON.parse(poststring.infoStr);\n            data.backInappInfo = arr;\n        } else if (code === \"paymentQueue\") {\n            // alert('paymentQueue')\n            // toWeb(inToWebObj: \"{'code':'paymentQueue',transactionState:'purchased'}\");\n            // 초기화 후 인앱정보 응답\n            const transactionState: string = poststring.transactionState;\n            // alert(\"transactionState::\" + transactionState);\n            // EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            if (transactionState === 'purchased') {\n                // this.buyInappProductID\n                const id = this.buyInappProductID;\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"buyInappProductIDAA2:\" + id + \",inappInfo:\" + inappInfo)\n                if (inappInfo === 'free') return;\n                this.purchaseComplete(inappInfo, data.utils.getTodayStr())\n\n            } else if (transactionState === 'failed') {\n                // alert(\"구매에 실패했습니다.\\n다시 한 번 시도 해주세요.\\n\\n이미 구매하셨다면 '구매복원하기'를 \\n진행해 주세요.\")\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'restored') {\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'default') {\n\n            } else if (transactionState === 'restoreError') {\n                alert('프로세스가 종료되었습니다.\\n 다시 시도해주세요.');\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'paymentQueueRestoreCompletedTransactionsFinished') {\n                // restore 로그인 성공 \n                // restore 할 상품이 있고없고랑 별개  \n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (transactionState === 'restoredIDs') {\n\n                const id = poststring.prodID;\n\n                let date = '';\n                this.consolelog(\"transactionState:restoredIDs구매복원날짜: \" + poststring.transactionDate);\n                if (poststring.transactionDate === 'nil') {\n                    alert(lang.t('alert-a001'));\n                    return;\n                } else {\n                    date = this.removeOptionalFormat(poststring.transactionDate);\n                    alert(lang.t('alert-a002'));\n                }\n\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"transactionState:restoredIDs\" + inappInfo + ',' + date);\n                this.purchaseComplete(inappInfo, date.substr(0, 10))\n\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            }\n        } else if (code === \"alert\") {\n\n            let msg = poststring.message;\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'alert-' + msg, //이벤트명\n                eventLabel: '',\n                eventValue: '',\n            });\n            if (msg === 'transactionCount0') {\n                msg = lang.t('alert-a001');\n            }\n            alert(msg);\n            EventEmitter.dispatch(Event.HIDE_LOADING, {});\n        }\n        else if (code === \"iapDelegate\") {\n            // let { data as postData, postData2 } = poststring;\n            const postData = poststring.data;\n            const postData2 = poststring.data2;\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'iapDelegate-' + code, //이벤트명\n                eventLabel: postData,\n                eventValue: postData2,\n            });\n            // alert(data + ',' + data2);\n            if (postData === 'funcfail' ||\n                postData === 'funccomplete' ||\n                postData === 'funcpaymentQueueRestoreCompletedTransactionsFinished'\n            ) {\n                EventEmitter.dispatch(Event.HIDE_LOADING, {});\n            } else if (postData === 'message') {\n                alert(postData2);\n            } else if (postData === 'funcdeliverPurchaseNotificationFor') {\n\n                // 구매완료 \n                const id = postData2;\n                const inappInfo = this.convertProdFullIDToCode(id);\n                this.consolelog(\"buyInappProductIDAA1:\" + id + \",inappInfo:\" + inappInfo)\n                if (inappInfo === 'free') return;\n\n                this.purchaseComplete(inappInfo, data.utils.getTodayStr())\n\n            } else if (postData === 'restoreMessage') {\n\n                if (postData2 === 'transactionCount0') {\n                    alert('복원할 내역이 없습니다.');\n                } else if (postData2 === 'restoreError') {\n                    alert('프로세스가 종료되었습니다.\\n 다시 시도해주세요.');\n                    EventEmitter.dispatch(Event.HIDE_LOADING, {});\n                }\n\n            }\n\n        }\n    }\n\n    // 상품전체코드를 month1같이 변환 \n    convertProdFullIDToCode(inID: string) {\n        let result: TProductCode = 'free';\n        Object.entries(config.inappIDs).forEach(([key, value]) => {\n            // console.log(`${key}: ${value}`)\n            if (inID === value) {\n                result = (key as TProductCode);\n            }\n        });\n        return result;\n\n        // return ((): TProductCode => {\n        //     // ##_REPLACE_##\n        //     if (config.inappIDs[0] === id) {\n        //         return \"unlock01\";\n        //     }\n        //     return id.replace(/com.kareui.caseteenglish./,'');\n        //     return \"free\";\n        // })();\n    }\n\n    // web->app\n    toApp(data: any) {\n        try {\n            const parseData = JSON.parse(data);\n\n            // showLoading\n            if ([\"restore\", \"buyInapp\"].includes(parseData.code)) {\n                EventEmitter.dispatch(Event.SHOW_LOADING, {});\n            }\n            const code = parseData.code;\n            const data1 = parseData.data1;\n            const data2 = parseData.data2;\n            if (code === \"buyInapp\") {\n                this.buyInappProductID = data1;\n            }\n            // tag_removega\n            // data.ga({\n            //     eventCategory: selfName, //서브화면명 \n            //     eventAction: 'toApp-' + code, //이벤트명\n            //     eventLabel: data1,\n            //     eventValue: data2,\n            // });\n            this.win.webkit.messageHandlers.toApp.postMessage(data);\n        } catch (err) {\n            // this.consolelog('err3')\n        }\n    }\n\n    removeOptionalFormat(str: string) {\n        if (str.startsWith('Optional(')) {\n            str = str.replace(/Optional\\(\"/, '');\n            str = str.replace(/Optional\\(/, '');\n            str = str.substr(0, str.length - 2);\n        }\n\n        return str;\n    }\n\n    addPlayCnt() {\n        const isAllPass: boolean = this.settingInfo.inappInfo !== 'free';\n        const cntSum = data.todayFreeCntDefault - this.settingInfo.todayFreePlayCnt;\n        // 무료이고 & 카운팅 만료 \n        console.log('cntSum', cntSum)\n        if (!isAllPass && cntSum < 1) {\n            core.showBuyMessage();\n            return false;\n        }\n\n        // 너무 빠르게 줄어드는것 방지 처리 \n        // 직전시간과 60밀리 이하의 갭이면 카운팅 안함 \n        const gt = new Date().getTime();\n        this.consolelog(\"tmplog_cnttime\" + gt + ',' + data.saveForPlayCntGaptime + \",\" + (gt - data.saveForPlayCntGaptime) + ',' + (gt - data.saveForPlayCntGaptime > 400));\n        if (gt - data.saveForPlayCntGaptime > 400) {\n            data.saveForPlayCntGaptime = new Date().getTime();\n            this.consolelog('tmplog_cnttime pl')\n            this.settingInfo.todayFreePlayCnt += 1;\n            EventEmitter.dispatch(Event.AUDIO_PLAY_COUNT, 1);\n\n        }\n        const cnt = this.settingInfo.todayFreePlayCnt;\n        // 5번마다 저장(sync)\n        if (cnt > 0 && cnt % 5 === 0) {\n            this.syncStorageData();\n        }\n        return true;\n    }\n\n    purchaseComplete(inMonthCode: TProductCode, inStartDate: string) {\n\n        this.settingInfo.inappInfo = inMonthCode;\n        this.settingInfo.inappStartDate = inStartDate;\n\n        this.syncStorageData();\n        EventEmitter.dispatch(Event.PURCHASE_COMPLETE, {});\n        EventEmitter.dispatch(Event.HIDE_LOADING, {});\n        setTimeout(() => {\n            core.gotoBack(-1);\n        })\n    }\n\n    consolelog(data: string) {\n        try {\n            this.win.webkit.messageHandlers.consolelog.postMessage(data);\n        } catch (err) {\n            // alert('err4');\n            // this.consolelog('err4');\n        }\n    }\n\n    initStorageData(storageDataStr: any) {\n\n        if (storageDataStr === 'nil') {\n            // alert('최초 사용자');\n            this.consolelog('최초 사용자');\n            this.settingInfo.useTime = DEFAULT_USE_TIME;\n\n            // 최초사용자인경우 최초 데이터 생성\n            this.syncStorageData();\n            // tag_removega\n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'visit-new', //이벤트명\n                eventLabel: '',\n                eventValue: '',\n            });\n        } else {\n            // alert('재방문 사용자');\n            this.consolelog('재방문 사용자' + storageDataStr);\n\n            let str;\n            if (storageDataStr.startsWith('Optional(')) {\n                str = storageDataStr.replace(/Optional\\(\"/, '');\n                str = str.substr(0, str.length - 2);\n                this.settingInfo = JSON.parse(str);\n            } else {\n                this.settingInfo = storageDataStr;\n            }\n\n            // 저장값이 없으면 0\n            if (!this.settingInfo.todayFreePlayCnt) {\n                this.settingInfo.todayFreePlayCnt = 0;\n            }\n\n\n            // 접속날짜가 바뀐경우 0\n            if (this.settingInfo.launchTimeArr.length > 0 && !data.utils.isSameDay(\n                new Date(this.settingInfo.launchTimeArr[0].substr(0, 10)), data.utils.todayISO()\n            )) {\n                this.settingInfo.todayFreePlayCnt = 0;\n            }\n\n            const inappInfo: TProductCode = this.settingInfo.inappInfo;\n\n\n            // \n            data.ga({\n                eventCategory: selfName, //서브화면명 \n                eventAction: 'visit-again', //이벤트명\n                eventLabel: `inappInfo_${this.settingInfo.inappInfo}`,\n                eventValue: `inappStartDate_${this.settingInfo.inappStartDate}`,\n            });\n        }\n\n        // 방문시간들 업데이트 \n        if (!this.settingInfo.launchTimeArr) {\n            this.settingInfo.launchTimeArr = [];\n        }\n\n        // 계속반복 모드인 경우 빈값으로 변환\n        if (this.settingInfo.repeatMode === '1') {\n            this.settingInfo.repeatMode = '';\n        }\n\n        const newDates: string[] = [data.utils.getTodayStr()].concat(this.settingInfo.launchTimeArr);\n        this.settingInfo.launchTimeArr = newDates;\n\n        // 마지막 날짜[0]와 직전 날짜[1]가 다른경우 무료시간 원복  \n        if (newDates.length === 1) {\n            // 첫 실행 \n        } else if (newDates[0].substr(0, 10) !== newDates[1].substr(0, 10)) {\n            // 다른날 실행 \n            this.settingInfo.useTime = DEFAULT_USE_TIME;\n        }\n\n        // 고유 사용자 ID가 없는경우 생성/저장 \n        if (!this.settingInfo.kuid) {\n            this.settingInfo.kuid = data.utils.getKUID();\n        }\n        this.settingInfo.launchTimeArr = this.settingInfo.launchTimeArr.slice(0, 5)\n\n        this.syncStorageData();\n    }\n    syncStorageData() {\n        this.consolelog('syncStorageData');\n        this.toApp(JSON.stringify({\n            \"code\": \"setLocalStorage\",\n            \"data1\": \"setting_info\",\n            \"data2\": JSON.stringify(this.settingInfo)\n        }));\n        // localStorage.setItem('setting_info', JSON.stringify(this.settingInfo))\n    }\n\n}\n\nexport default new AppBridge();","import { padStart as _padStart } from 'lodash';\nimport EventEmitter, { Event } from './EventEmitter';\nimport appBridge from \"./AppBridge\";\nimport { useTranslation } from \"react-i18next\";\nimport lang from \"./i18n\";\nimport axios from 'axios';\n\nexport type TProductCode = 'free' | 'unlock01' | 'month3' | 'month6' | 'month12' | 'loop';\nexport type TCourceNames = 'LOOPING' | 'LISTENING' | 'SUMMERY';\n// \n\nconst topicJSON: any = require('../../resource/topics/topic.json');\nconst courseJSON = require('../../resource/topics/course.json');\n\nclass Data {\n\n    public route = {\n\n    }\n    public env = {\n        screenWidth: 0,\n        screenHeight: 0,\n        hasNotch: false\n    }\n    public supportLang: string[] = [\n        'ko',//ko-KR 한국\n        // 'th',//th-TH 태국 \n        // 'vi',//vi-VN 베트남 \n        // 'zh',//zh-TW 대만\n        // 'ja',//ja-JP 일본 \n    ]\n    public currPlayIdx: number = 0;\n    public currPlayBtnState: 'play' | 'stop' = 'stop';// stop:플레이버튼상태 play:퓨즈버튼상태\n    public currPageCourseIdx: number = 1;\n    public gaPageName: string = '';\n    public gaPageSubName: string = '';\n    public gaFrame: any;\n    private logCnt: number = 0;\n    public currJSON: any;\n    public currIdx: string = '';\n    public currTopicID: string = '';\n    public currPlaysTotal: number = -1;\n    public playAudioCnt = 0;\n    public regionCode = \"\";// 국가코드\n    public currencySymbol = \"\";// 국가코드\n    public deviceLocale = '';// 기기 언어와 위치를 고려한 최종 기기 언어 \n    public backInappInfo: string[] = [];\n    public todayFreeCntDefault = 60;\n    public saveForPlayCntGaptime = 0;\n    public tempGotoSavedSentenseIdx: number = 9999;\n\n    public playerSetting = {\n        repeat: 1,\n        interval: 0,\n        speed: 1,\n    }\n    public topicJSON: any;\n    public leftJSON: any;\n    public pageShadowingParam: {\n        sentenseEn: string,\n        sentenseKo: string,\n        sentenseIdx: number,\n        topicID: string,\n    } = {\n            sentenseEn: '',\n            sentenseKo: '',\n            sentenseIdx: -1,\n            topicID: '',\n        }\n\n    public t: any;\n    public i18n: any;\n    public currTopicData: {\n        id: string,\n        json: any,\n    } = {\n            id: '',\n            json: null\n        }\n    private rootPath: string = '';\n    constructor() {\n        // const [t, i18n] = useTranslation();\n        // this.t = i18n.t;\n\n    }\n\n    // 지원하는 국가인가?\n    isSupportLang() {\n        return this.supportLang.includes(lang.language);\n    }\n\n    getRootPath() {\n        if (this.rootPath !== '') return this.rootPath;\n        let fullPath = (window as any).location.href;\n        // 웹인경우 / 경로 \n        if (fullPath.substr(0, 4) === 'http') {\n            this.rootPath = '/';\n            return this.rootPath;\n        }\n        // 앱인경우 index경로 \n        this.rootPath = fullPath.split('index.html')[0];\n        return this.rootPath;\n        // alert(this.win.location.href);\n    }\n\n    // 무료 토픽인가?\n    isFreeClip(inID: string) {\n\n        // const result = this.getItemsToTopicJSON(inID).price === 'free';\n        return true;\n    }\n\n    getItemsToTopicJSON(inID: string) {\n        let result = null;\n        // console.log('tmplog_idid topicJSON', topicJSON.categories.length)\n        for (let i = 0; i < courseJSON.tabs.length; i++) {\n            const items = courseJSON.tabs[i].items;\n            for (let j = 0; j < items.length; j++) {\n                // console.log('tmplog_idid', items[j].aid, items[j].price);\n                if (items[j].aid === inID) {\n                    result = items[j];\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    ga(obj: {\n        hitType?: 'event',\n        eventCategory?: string,\n        eventAction: string,\n        eventLabel: string,\n        eventValue: string,\n    }) {\n        this.logCnt++;\n        // localStorage.setItem('karelcnt', logCnt)\n\n        const p = Object.assign({\n            hitType: 'event', //이벤트 종류 \n            // eventCategory: appBridge.settingInfo.kuid, //화면명(나는 고객 아이디) \n            eventCategory: this.gaPageName, //화면명(나는 고객 아이디) \n            eventAction: this.gaPageSubName, //서브화면명 \n            eventLabel: '', //이벤트명\n            eventValue: '',\n        }, obj);\n\n        appBridge.toApp(JSON.stringify({\n            \"code\": \"eventLog\",\n            \"data1\": JSON.stringify(p),\n            \"data2\": \"\"\n        }));\n        return;\n\n        // 로컬 테스트는 로그 안쌓도록 \n        const host = (window as any).location.host;\n        // if (host.indexOf('172.20.10') != -1) return;\n        // if (host.indexOf('10.0.1') != -1) return;\n\n        if (!this.gaFrame) {\n            this.gaFrame = (document.getElementById('gaiframe') as any).contentWindow;\n        }\n        if (this.gaFrame) {\n            console.log('eventLog', p);\n            // (this.gaFrame as any).eventLog(p);\n\n            // data.gaFrame = (document.getElementById('gaiframe') as any).contentWindow;\n            this.gaFrame.postMessage(p, '*');\n        }\n\n    }\n\n    // makePagePlaylistData(type: 'clip' | 'topic', option: any, inCallback: () => void) {\n\n    //     if (type === 'topic') {\n    //         this.getTopicData(option.topicID, (json: any) => {\n    //             // 숨김문자 생성(여기서 생성 해서 리렌더링시에 다시 하지 않도록 한다)\n    //             const makeMoreInfoJSON = this.makeMoreInfoJSON(json);\n    //             console.log('tmplog_this.pagePlaylistData json', json);\n    //             this.pagePlaylistData = {\n    //                 topicID: option.topicID,\n    //                 type: type,\n    //                 topicInfo: makeMoreInfoJSON.json.info,\n    //                 clipInfo: null,\n    //                 sentenseJSON: makeMoreInfoJSON.json.sentense,\n    //             }\n    //             console.log('tmplog_this.pagePlaylistData', this.pagePlaylistData);\n    //             if (inCallback) inCallback();\n\n    //         });\n    //     } else if (type === 'clip') {\n    //         this.pagePlaylistData = {\n    //             topicID: 'clipid',\n    //             type: type,\n    //             topicInfo: null,\n    //             clipInfo: null,\n    //             sentenseJSON: null,\n\n    //         }\n    //         if (inCallback) inCallback();\n    //     }\n\n\n\n    // }\n\n    // topicID로  courceJSON에서 item 뽑기 \n    getCourceItemToTopicID(topicID: string) {\n        let result: any = null;\n        const tabs = courseJSON.tabs;\n        for (let i: number = 0; i < tabs.length; i++) {\n            const tabsJSON = tabs[i];\n            const tabsItems = tabsJSON.items;\n            for (let j: number = 0; j < tabsItems.length; j++) {\n                const item = tabsItems[j];\n                if (item.aid === topicID) {\n\n                    result = Object.assign(item, {\n                        courseID: tabsJSON.courseID,\n                        idx: j\n                    });\n                    break;\n                }\n\n            }\n        }\n        return result;\n    }\n\n    // topicID로 토픽 상세데이터 조회 \n    async getTopicData(topicID: string = '', callback?: (json: any) => void) {\n        if (topicID === '') topicID = this.currTopicID;\n        // 현재 불러온 데이터인경우 캐싱해서 중복호출 방지 \n        // if (this.currTopicData.id === topicID) {\n        //     if (callback) callback(this.currTopicData);\n        //     return this.currTopicData;\n        // }\n        const json = await require(`../../resource/topics/${topicID}/mm.json`);\n        // console.log('getTopicData', Object.assign({}, json));\n        this.currTopicData = {\n            id: topicID,\n            json: Object.assign({}, json),\n        }\n\n\n\n        if (callback) callback(this.currTopicData);\n    }\n    async makeCurrJSONWH(tpid: string = '', cid: string = \"\", callback?: (json: any) => void) {\n\n        console.log('makeCurrJSONWH', tpid, cid)\n        // 하나라도 없으면 return\n        if (tpid === '' || cid === '') return;\n        axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {})\n            .then(function (response: any) {\n                const json = response.data;\n\n                // this.currTopicData = {\n                //     id: tpid,\n                //     json: Object.assign({}, json),\n                // }\n                if (callback) callback(json);\n            })\n            .catch(function (error) {\n\n            })\n            .finally(function () {\n\n            });\n    }\n\n    makeCurrJSON(inType: 'clip' | 'topic', inItemIdxStr: string, inTopicID: string, inCallback: () => void) {\n        this.currIdx = inItemIdxStr;\n        this.getTopicData(inTopicID, (json: any) => {\n            this.makeMoreInfoJSON(json);\n            inCallback();\n        });\n        // this.currJSON.type = inType;\n\n    }\n\n    makeCurrJSONFromClip(inType: 'clip' | 'topic', clipJSON: any, inCallback: () => void) {\n        this.getTopicData(clipJSON.topicID, (json: any) => {\n            this.makeMoreInfoJSON(json);\n            // console.log('currJSONcurrJSON1', clipJSON)\n            // console.log('currJSONcurrJSON2', this.currJSON)\n\n            // 클립의 index \n            const filterIdxs: number[] = [];\n            clipJSON.sentense.map((item: any) => {\n                filterIdxs.push(item.idx);\n            })\n\n            // currJSON.해당 클립의 idx 만 필터링 \n            // const copyCurrJSON = this.currJSON.slice(0);\n            const filterSentense = this.currJSON.json.sentense.filter((item: any, i: number) => {\n                // console.log('currJSONcurrJSON3', filterIdxs, i);\n                return filterIdxs.includes(i);\n            })\n            this.currJSON.type = inType;\n            this.currJSON.json.sentense = filterSentense;\n            this.currPlaysTotal = this.currJSON.json.sentense.length;\n            inCallback();\n        });\n\n    }\n\n    // makeMoreInfoJSON2(inType:'clip'|'topic',inJson:any, inCallback:()=>void){\n    //     const convert0 = (str: string) => {\n    //         let r = '';\n    //         str.split('').map(s => {\n    //             if (s === ' ') {\n    //                 r += ' ';\n    //             } else {\n    //                 r += '.';//▒ ▤ ▥ ▨ ▧ ▦ ▩\n    //             }\n    //         })\n    //         return r;\n    //     }\n    //     const sentenseJSON = inJson.json.sentense.map((item: any, i: number) => {\n    //         return {\n    //             ...item,\n    //             en_0: convert0(item.en),\n    //             ko_0: convert0(item.ko),\n    //         };\n    //     });\n    //     console.log('makeMoreInfoJSON', sentenseJSON);\n    //     inJson.json.sentense = sentenseJSON;\n    //     inJson.type = inType;\n    //     this.currJSON = inJson;\n    //     // alert(this.currJSON.json.sentense.length);\n    //     this.currPlaysTotal = this.currJSON.json.sentense.length;\n    //     return inJson;\n    // }\n\n    // 조회한 topic json 에 ...변환 속성도 추가 \n    makeMoreInfoJSON(json: any): any {\n        const convert0 = (str: string) => {\n            let r = '';\n            str.split('').map(s => {\n                if (s === ' ') {\n                    r += ' ';\n                } else {\n                    r += '.';//▒ ▤ ▥ ▨ ▧ ▦ ▩\n                }\n            })\n            return r;\n        }\n        console.log('currJSONcurrJSON a1', json)\n\n        const sentenseJSON = json.json.sentense.map((item: any, i: number) => {\n            return {\n                ...item,\n                en_0: convert0(item.en),\n                ko_0: convert0(item.ko),\n            };\n        });\n        console.log('makeMoreInfoJSON', sentenseJSON);\n        json.json.sentense = sentenseJSON;\n        this.currJSON = json;\n        // alert(this.currJSON.json.sentense.length);\n        this.currPlaysTotal = this.currJSON.json.sentense.length;\n        return json;\n    }\n\n    initAudio(json: any) {\n        this.cleanAudio();\n        EventEmitter.dispatch(Event.INIT_AUDIO, json);\n    }\n    cleanAudio() {\n\n        this.currPlayIdx = 0;\n        // this.currTopicID = '';\n        this.currPlayBtnState = 'stop';\n    }\n\n    setClipHistory(id: string) {\n        if (!appBridge.settingInfo.historyClips) {\n            appBridge.settingInfo.historyClips = [];\n        }\n        // let arr = JSON.parse(JSON.stringify(appBridge.settingInfo.historyClips));\n        const arr = appBridge.settingInfo.historyClips.filter((item: string) => {\n            // 동일 히스토리 존재하면 제거 \n            return item !== id;\n        })\n\n        arr.push(id);\n        appBridge.settingInfo.historyClips = arr;\n        appBridge.syncStorageData();\n    }\n\n    setCurrPlayBtnState(state: 'play' | 'stop', desc = '') {\n        console.log('setCurrPlayBtnState', state, desc);\n        this.currPlayBtnState = state;\n        if (state === 'play') {\n            this.audioPlayPause(this.currPlayIdx);\n        } else if (state === 'stop') {\n            EventEmitter.dispatch(Event.AUDIO_STOP, {});\n            EventEmitter.dispatch(Event.SENTENSE_PLAYING, 999);\n        }\n\n    }\n\n    audioPlayRepeat(idx: number) {\n        this.currPlayIdx = idx;\n    }\n\n    numberWithCommas = (x: any) => {\n        let parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    }\n\n\n    audioPlayPause(idx: number, inCallback?: () => void) {\n        if (this.currPlayIdx === idx) {\n            this.playAudioCnt++;\n        } else {\n            this.playAudioCnt = 1;\n        }\n        this.currPlayIdx = idx;\n\n        const t: string[] = this.currJSON.json.sentense[idx].timeen.split('|');\n\n        if (t && t.length === 2) {\n\n            // sentense active\n            EventEmitter.dispatch(Event.SENTENSE_PLAYING, this.currPlayIdx);\n            EventEmitter.dispatch(Event.AUDIO_PLAY_PAUSE, {\n                startTime: Number(t[0]),\n                endTime: Number(t[1]),\n                callback: () => {\n\n                    if (inCallback) inCallback();\n\n                    // sentense focus\n                    EventEmitter.dispatch(Event.SENTENSE_PAUSE, this.currPlayIdx);\n\n\n                    // console.log('this.currPlayBtnState', this.currPlayBtnState, this.currPlaysTotal)\n                    if (this.currPlayBtnState === 'play') {\n\n                        setTimeout(() => {\n                            let nextIdx: number = this.currPlayIdx + 1;\n                            const repeatMode = appBridge.settingInfo.repeatMode;\n                            if (this.playerSetting.repeat > this.playAudioCnt) {\n                                nextIdx = this.currPlayIdx;\n                            } else if (repeatMode === 'ALL') {\n                                nextIdx = this.currPlayIdx + 1;\n                            } else if (repeatMode === '1') {\n                                nextIdx = this.currPlayIdx;\n                            }\n\n                            // alert('sss' + nextIdx + ',' + this.currPlaysTotal)\n\n                            // 마지막 트랙 체크 \n                            if (nextIdx > this.currPlaysTotal - 1) {\n\n                                // 반복모드가 아니면 종료(더이상 반복안함)\n                                if (repeatMode === '') {\n                                    this.currPlayIdx = 0;\n                                    // this.setCurrPlayBtnState('stop');\n                                    // EventEmitter.dispatch(Event.SET_BTN_PLAY_STATE, 'stop');\n\n                                    this.setCurrPlayBtnState('stop', 'a9');\n                                    EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                                    return;\n                                }\n                                // 헤더는 0으로 돌림 \n                                nextIdx = 0;\n                            }\n\n                            this.audioPlayPause(nextIdx);\n                        }, 300)\n\n                    }\n                },\n            })\n        }\n\n    }\n\n    setSettingKeepSentenseMoreInfo(\n        type2: 'add' | 'remove',\n        key: string,\n        sentenseEn: string,\n    ) {\n        if (type2 === 'add') {\n            appBridge.settingInfo2.savedSentense[key] = sentenseEn;\n        } else {\n            // 용량관리를 위해 키만 남기고 문장은 삭제\n            appBridge.settingInfo2.savedSentense[key] = '';\n        }\n\n    }\n\n    // 문장 또는 클립 저장 \n    setSettingKeepClipSentense(\n        type1: 'clip' | 'sentense',\n        type2: 'add' | 'remove',\n        value: any) {\n        console.log('setSettingKeepClipSentense', type1, type2, value);\n        let arr: string[] = [];\n        let newArr: string[] = [];\n        if (type1 === 'clip') {\n            arr = appBridge.settingInfo.keepClips;\n        } else if (type1 === 'sentense') {\n            arr = appBridge.settingInfo.keepSentense;\n        }\n        if (arr.includes(value)) {\n            // 포함되어있을때 삭제 케이스 \n            if (type2 === 'remove') {\n                // 삭제 \n                newArr = arr.filter((item, i) => {\n                    console.log('setSettingKeepClipSentense222', item, value)\n                    return item !== value;\n                });\n                console.log('setSettingKeepClipSentense333', newArr)\n            }\n        } else {\n            // 불포함인데 포함 케이스 \n            if (type2 === 'add') {\n                // 포함 \n                arr.push(value)\n                newArr = JSON.parse(JSON.stringify(arr));\n            }\n        }\n\n        if (type1 === 'clip') {\n            appBridge.settingInfo.keepClips = newArr;\n            console.log('tmplog_keep1', appBridge.settingInfo.keepClips);\n        } else if (type1 === 'sentense') {\n            appBridge.settingInfo.keepSentense = newArr;\n            console.log('tmplog_keep2', appBridge.settingInfo.keepSentense);\n        }\n\n        appBridge.syncStorageData();\n\n    }\n\n    utils = {\n        today: () => {\n            return new Date();\n            // return new Date('2020-07-19');\n        },\n        todayISO: () => {\n            const timezoneOffset = new Date().getTimezoneOffset() * 60000;\n            return new Date(Date.now() - timezoneOffset);\n\n        },\n        isSameDay: (day1: Date, day2: Date) => {\n\n            // appBridge.consolelog('tmplog_playcnt3samefc:' + day1.toISOString().substr(0, 10)\n            //     + ',' +\n            //     day2.toISOString().substr(0, 10)\n            //     + ',' +\n            //     day1\n            //     + ',' +\n            //     day2\n\n            // )\n\n            return day1.toISOString().substr(0, 10) === day2.toISOString().substr(0, 10);\n\n        },\n        // 시작날짜와 오늘날짜 그리고 총 상품 기간을 기준으로 남은 날짜 계산\n        getLiftDate: (startDate: Date, dateLen: number) => {\n            console.log('getLiftDate',\n                this.utils.diffDays(startDate, this.utils.today()),\n                startDate,\n                dateLen,\n                this.utils.today());\n            return dateLen - (this.utils.diffDays(startDate, this.utils.today()));\n        },\n        getAfterDay: (baseDate: Date, addDay: number) => {\n            return this.utils.getDateStr(new Date(baseDate.getTime() + (addDay * 24 * 60 * 60 * 1000))).substr(0, 10);\n        },\n        diffDays: (date: Date, otherDate: Date) => {\n            return Math.ceil(Math.abs(date.getTime() - otherDate.getTime()) / (1000 * 60 * 60 * 24));\n        },\n        getDateStr: (d: Date) => {\n            return `${d.getFullYear()}-${_padStart((d.getMonth() + 1) + '', 2, '0')}-${_padStart(d.getDate() + '', 2, '0')}:${_padStart(d.getHours() + '', 2, '0')}-${_padStart(d.getMinutes() + '', 2, '0')}`\n        },\n\n        getTodayStr: () => {\n\n            return this.utils.getDateStr(this.utils.today());\n        },\n        getKUID: () => {\n            const uu = 'Uxyxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == 'x' ? r : (r & 0x3 | 0x8);\n                return v.toString(16);\n            });\n            return uu.substr(0, 1) + uu.substring(1);\n        }\n    }\n\n}\n\nexport default new Data();","import React, { Component, createRef, RefObject } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport data from '../core/Data';\nimport appBridge from '../core/AppBridge';\ninterface IProps {\n\n}\nclass AudioPlayer extends Component<IProps> {\n    state = {\n        id: 'blank',\n        path: '../../resource/topics/',\n    }\n    isInitLoadingAudio: boolean = false;// 네트웍에서는 자동플레이를 최초에 실행안하면 뭔가 로드가 안되는듯하여 자동플레이로하고 첫 업데이트에 멈춰놓는다.\n    isInitLoadingAudioCallback: () => void = () => { };\n    refAudio: RefObject<HTMLAudioElement> = createRef();\n    elAudio: HTMLAudioElement | null = null;\n    isAudioAttachEvent: boolean = false;// audio이벤트를 한번만 add하기위한 변수 \n    currRealStatus: 'play' | 'pause' | 'stop' = 'stop';// timeupdate경우는 pause후에도 이벤트가 실행되므로 세밀한 제어를 위한 값 추가 \n    currStartTimeOri: number = 9999999999;\n    currEndTimeOri: number = 9999999999;\n    currEndTime: number = 9999999999;\n    currCallback: () => void = () => {\n\n    };\n    constructor(props: IProps) {\n        super(props);\n        EventEmitter.subscribe(Event.INIT_AUDIO, (json: any) => {\n\n            // console.log('soundInit', json);\n            if (this.elAudio) {\n                this.elAudio.volume = 0;\n            }\n            // 초기화\n            this.isInitLoadingAudio = false;// 네트웍에서는 자동플레이를 최초에 실행안하면 뭔가 로드가 안되는듯하여 자동플레이로하고 첫 업데이트에 멈춰놓는다.\n            this.isInitLoadingAudioCallback = () => { };\n            // alert('initAudio')\n            this.setState({\n                ...this.state,\n                path: '../../resource/topics/',\n                id: json.id,\n            });\n        });\n        EventEmitter.subscribe(Event.AUDIO_PLAY_PAUSE, (option: any) => {\n            console.log('audioPlayPause', option);\n\n            this.audioPlayPause(\n                option.startTime,\n                option.endTime,\n                option.callback\n            )\n        });\n        EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n            this.audioPause();\n        });\n        // ((document as any).querySelector('.mainaudioch') as any).addEventListener('load', () => {\n        //     alert('loadcomplete')\n        // });\n\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            // this.audioPlay();\n            // this.audioSeek(5000);\n        }, 1000);\n        this.elAudio = this.refAudio.current;\n        if (this.elAudio) {\n            this.elAudio.addEventListener('load', () => {\n                // alert('load')\n            })\n            // this.elAudio.play();\n        }\n\n    }\n    componentDidUpdate() {\n        this.elAudio = this.refAudio.current;\n        if (this.elAudio && !this.isAudioAttachEvent) {\n\n            this.elAudio?.addEventListener('timeupdate', () => {\n                if (!this.isInitLoadingAudio) {\n                    this.isInitLoadingAudio = true;\n                    this.elAudio?.pause();\n                    // alert('this.isInitLoadingAudio')\n                    this.isInitLoadingAudioCallback();\n                    return;\n                }\n                // console.log(this.elAudio);\n                const currTime = this.elAudio?.currentTime;\n\n                if (currTime === undefined) return;\n                if (this.currEndTime < currTime) {\n\n                    if (this.currRealStatus === 'pause') return;\n                    const currentSoundTime = (this.currEndTimeOri - this.currStartTimeOri);\n\n                    // 셋팅 인터벌을 문장길이로 했으면\n                    const intervalTime = (() => {\n                        const settingInterval = data.playerSetting.interval;\n                        if (settingInterval === 9999) {\n                            return currentSoundTime + 2000;// 문장길이 +1초 \n                        } else {\n                            return settingInterval * 1000;// 설정타임\n                        }\n                    })();\n\n                    this.audioPause();\n                    setTimeout(() => {\n\n                        // 다음 플레이를 수동으로 한 경우 callback 안함 \n                        if (this.currRealStatus === 'pause') {\n                            this.currCallback();\n                        }\n\n                    }, intervalTime)\n\n                }\n            });\n            this.isAudioAttachEvent = true;\n        }\n\n    }\n    audioPlayPause(startTime: number, endTime: number, callback: () => void) {\n        this.currStartTimeOri = startTime;\n        this.currEndTimeOri = endTime;\n        this.currEndTime = endTime / 1000;\n        this.currCallback = callback;\n        // console.log('audioSeek', startTime)\n        this.audioSeek(startTime);\n    }\n    audioPlay(time: number | null = null) {\n\n        // 모바일기기의 퍼미션처럼 초기화가 안된경우 초기화 후 다시실행 \n        if (!this.isInitLoadingAudio) {\n            this.isInitLoadingAudioCallback = () => {\n                this.audioPlay(time);\n            }\n        }\n\n        if (this.elAudio) {\n            this.elAudio.volume = 1;\n            this.elAudio.playbackRate = data.playerSetting.speed;\n            if (time !== null) {\n                this.elAudio.currentTime = time / 1000;\n            }\n            this.currRealStatus = 'play';\n            // alert(this.elAudio.currentTime);\n            // 카운팅 & 무료체크 & 안내 \n            if (!appBridge.addPlayCnt()) return;\n\n\n\n            this.elAudio.play();\n        }\n\n    }\n    audioPause() {\n        this.currRealStatus = 'pause';\n        this.elAudio?.pause();\n    }\n    audioSeek(time: number) {\n\n        if (this.elAudio) {\n            // alert('a2' + (time / 1000));\n            this.elAudio.currentTime = time / 1000;\n            this.elAudio.playbackRate = data.playerSetting.speed;\n            this.audioPlay(time);\n\n        } else {\n\n            // alert('a3')\n            // 오디오 준비 전이면 잠시 기다렸다 다시 실행\n            setTimeout(() => {\n\n                this.audioSeek(time);\n\n            }, 100);\n        }\n\n        // player.duration\n        // player.volume\n        // player.paused\n        // player.currentTime\n        // player.addEventListener('timeupdate', updateProgress);\n        // player.addEventListener('volumechange', updateVolume);\n        // player.addEventListener('loadedmetadata', (\n        // player.addEventListener('canplay', makePlay);\n        // player.addEventListener('ended', function(){\n    }\n    render() {\n\n        return (\n            <div>\n\n                <audio\n                    className=\"mainaudioch\"\n                    ref={this.refAudio}\n                    src={`${data.getRootPath()}resource/topics/${this.state.id}/mm.mp3`}\n\n                ></audio>\n            </div>\n        );\n    }\n}\n\nexport default AudioPlayer;","import React from 'react';\nimport core from '../core/Core';\nimport { padStart as _pad } from 'lodash';\nconst WCourseItem = ({\n    viewType,\n    itemJSON,\n    courseID,\n    idx,\n}: {\n    viewType: string,\n    itemJSON: any,\n    courseID: string,\n    idx: number,\n}) => {\n    // console.log('WCourseItem',viewType,itemJSON,idx);\n    if (viewType === 'movie') {\n        console.log('WCourseItem', itemJSON.tit);\n    }\n    return (\n        <>\n            {\n                viewType === 'movie'\n                    ?\n                    <CItemMovie courseID={courseID} itemJSON={itemJSON} idx={idx} key={idx} />\n                    :\n                    <CItem courseID={courseID} itemJSON={itemJSON} idx={idx} key={idx} />\n            }\n            {/* <CItem itemJSON={itemJSON} idx={idx} key={idx} /> */}\n        </>\n    );\n};\nconst CItem = (\n    {\n        itemJSON,\n        courseID,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        idx: number\n    }) => {\n    return (\n        <li className=\"CourseItem\" onClick={() => {\n            core.setParameter(itemJSON.query);\n        }} key={idx}>{itemJSON.tit}</li>\n    );\n}\nconst CItemMovie = (\n    {\n        itemJSON,\n        courseID,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    return (\n        <li className=\"CourseItem movie\" onClick={() => {\n            // alert(itemJSON.query);\n            core.setParameter(itemJSON.query);\n        }} key={idx}>\n            <div className=\"group-img\">\n                <img className=\"img\" src={`/resource/courses/${courseID}/thumb/a${idxPad}.jpg`}></img>\n                <div className=\"sceneno\">\n                    <div className=\"t1\">scene</div>\n                    <div className=\"t2\">{idxPad}</div>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n        </li>\n    );\n}\nexport default WCourseItem;","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport WCourseItem from './WCourseItem';\nconst WCourse = ({\n    json,\n    parentName,\n}: {\n    json: any\n    parentName: string,\n}) => {\n    let viewType = 'normal';\n    const courseID = json.courseID;\n    const topics = json.item.map((item2: any, i2: number) => {\n        if (json.itemViewType) {\n            viewType = json.itemViewType;\n        }\n        return <WCourseItem\n            viewType={viewType}\n            itemJSON={item2}\n            courseID={courseID}\n            idx={i2}\n            key={courseID + i2}\n        />\n\n    })\n    const [isHide, setIsHide] = useState(parentName === 'WCourseMain' ? false : true);\n    return (\n        <div className=\"Course\">\n            <h3 className=\"title\" onClick={() => {\n                setIsHide(!isHide);\n            }}>\n                <Tags str={json.tags} key={courseID} />\n                {\n                    isHide ? <i className=\"fas fa-plus i-icon\"></i> : <i className=\"fas fa-minus i-icon\"></i>\n                }\n                {json.title}\n                <span className=\"badge\">{json.item.length}</span>\n            </h3>\n            <ul className={classnames(['slideup', { \"hide\": isHide }])}>\n                {!isHide && topics}\n            </ul>\n\n        </div>\n    );\n};\n\n\nconst Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WCourse;","import React, { useEffect } from 'react';\nimport WCourse from './WCourse';\nimport data from '../core/Data';\nimport { useRecoilValue } from 'recoil';\nimport { cidState } from '../core/store';\n\nconst selfName = \"WCourseMain\";\nconst WCourseMain = () => {\n    const cid = useRecoilValue(cidState);\n    useEffect(() => {\n\n    }, [cid])\n    const courseItemListJSON = data.leftJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    return (\n        <div>\n            <div className=\"contents\">\n                {cid && <WCourse json={courseItemListJSON[0]} parentName={selfName} />}\n            </div>\n\n        </div>\n    );\n};\n\nexport default WCourseMain;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport Core from '../core/Core';\nimport { wbIsOpenNavState } from '../core/store';\n\nconst WHeader = () => {\n\n    const [wbIsOpenNav, setWbIsOpenNav] = useRecoilState(wbIsOpenNavState);\n\n    return (\n        <div className=\"WHeader\">\n            {/* <button className=\"btn-nav\" onClick={() => {\n                setWbIsOpenNav(!wbIsOpenNav);\n            }}>\n                {wbIsOpenNav ? 'X' : 'E'}\n            </button> */}\n            <div className=\"logo\" onClick={() => {\n                Core.setParameter('');\n            }}>카셋 회화 훈련</div>\n            {/* <br></br>with 섀도잉 & 디텍션 플레이어 */}\n            {/* <button onClick={() => {\n                Core.setParameter('');\n            }}>홈</button> */}\n        </div>\n    );\n};\n\nexport default WHeader;","import React from 'react';\nimport data from '../core/Data';\nimport WCourse from './WCourse';\nconst leftJSON = require('../../resource/topics/left.json');\nlet uniqCnt = 0;\nconst selfName = \"WMain\";\nconst WMain = () => {\n    data.leftJSON = leftJSON;\n    const course1 = leftJSON.map((item1: any, i: number) => {\n        return <WCourse json={item1} key={uniqCnt++} parentName={selfName} />\n        // return <Course json={item1} key={uniqCnt++} />\n    });\n    return (\n        <div className=\"contents\">\n            <div className=\"notice\"></div>\n            {course1}\n        </div>\n    );\n};\n\nexport default WMain;","import React from 'react';\n\nconst Equalizer = () => {\n    return (\n        <div className=\"equalizer\">\n            <span className=\"eq1\"></span>\n            <span className=\"eq2\"></span>\n            <span className=\"eq3\"></span>\n        </div>\n    );\n};\n\nexport default Equalizer;","import animateScrollTo from 'animated-scroll-to';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\nimport { padStart as _pad } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Equalizer from './component/Equalizer';\nimport appBridge from './core/AppBridge';\nimport core from './core/Core';\nimport data from './core/Data';\nimport EventEmitter, { Event } from './core/EventEmitter';\n// import { lang } from 'moment';\nimport lang from \"./core/i18n\";\nimport {\n    btnRepeatModeUpdateState, isCloseDetailPanelState, isShowShadowingState, sentenseRepeatIdxState\n} from \"./core/store\";\n\nlet getCourceItemToTopicID: any = null;\nlet currJSON: any = null;\nlet callModeChange: () => void;\nconst sentenseModeCode = ['00', 'e0', '0k', 'ek']; // 문장모드 순번\nlet sentenseModeIdx: number = 3;\nlet scriptMode = 'ek';\n\nconst selfName = 'Topic';\n\nconst PagePlaylist = ({\n    isShowPlayerControl,// 콘트롤러가 fixed라서 그다음뷰에서도 보이므로 스택의 마지막뷰가 PagePlaylist인지 체크\n}: {\n    isShowPlayerControl: boolean,\n}) => {\n\n    const [isDataAble, setIsDataAble] = useState(false);\n    // const update = useRecoilValue(updatePagePlaylistState);\n\n    useEffect(() => {\n\n        const topicID = data.currJSON.id;\n        sentenseModeIdx = 3;\n        scriptMode = 'ek';// 최초 코드\n        getCourceItemToTopicID = data.getCourceItemToTopicID(topicID);\n        currJSON = data.currJSON;\n\n        console.log('currJSONcurrJSON', currJSON)\n\n        data.initAudio({\n            id: topicID\n        });\n        data.setClipHistory(topicID);\n        setIsDataAble(true);\n        // tag_removega\n        data.ga({\n            eventCategory: selfName, //서브화면명\n            eventAction: 'initClip-' + topicID, //이벤트명\n            eventLabel: '',\n            eventValue: '',\n        });\n\n        EventEmitter.subscribe(Event.SENTENSE_PLAYING, (idx: number) => {\n\n            // 화면 프레싱중이 아닌경우\n            if (!core.isSentensePressing) {\n                // 스크롤링 중 아닌경우\n                core.isScrolling((result: boolean) => {\n                    // SentenseItem num-${idx}\n                    const $el = (document as any).querySelector(`.SentenseItem.num-${idx}`);\n                    const y = ($el) ? $el.offsetTop : null;\n                    if (y === null) return;\n                    // if (!result) core.scrollTo(y, '.view-Topic');\n                    if (!result) {\n                        animateScrollTo(y - 200, {\n                            elementToScroll: (document as any).querySelector('.view-Topic')\n                        });\n                    }\n\n                })\n            }\n\n\n        });\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, (idx: number) => {\n\n        });\n\n\n\n\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PAUSE)\n            data.cleanAudio();\n            data.setCurrPlayBtnState('stop', 'a6');\n        }\n    }, []);\n\n\n    setTimeout(() => {\n        // 즐겨찾기에서 온 경우\n        if (data.tempGotoSavedSentenseIdx !== 9999) {\n\n            const $el = (document as any).querySelector(`.SentenseItem.num-${data.tempGotoSavedSentenseIdx}`);\n            const y = ($el) ? $el.offsetTop : null;\n\n            if (y === null) return;\n            console.log('tmplog_data.tempGotoSavedSentenseIdx ', (document as any).querySelector('.view-Topic'), y, data.tempGotoSavedSentenseIdx)\n            animateScrollTo(y - 200, {\n                elementToScroll: (document as any).querySelector('.view-Topic')\n            });\n            // 초기화\n            data.tempGotoSavedSentenseIdx = 9999;\n        }\n    }, 1000)\n\n    return (\n        <>\n            {\n                isDataAble\n                    ?\n                    <div className=\"view-vv view-Topic\">\n                        {/* <PageHeader parentSelf={selfName} /> */}\n                        <TopicCover topicID={data.currJSON.id} />\n\n                        <div className=\"container-playlist\">\n                            <PlayLists />\n                            <GotoFullScript topicID={data.currJSON.id} />\n                        </div>\n\n                        {/* <NotiMessage /> */}\n                        {isShowPlayerControl && <PlayerControl topicID={data.currJSON.id} />}\n                    </div>\n                    :\n                    <div>loading...</div>\n            }\n        </>\n    );\n};\n\nexport default PagePlaylist;\n\nconst TopicCover = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    const info = data.currJSON.json.info;\n    const [isKeep, setIsKeep] = useState((() => {\n        return appBridge.settingInfo.keepClips.includes(topicID);\n    })());\n\n    return (\n        <div className={classnames([\"TopicCover\", css`\n            background-image: url(\"${data.getRootPath()}resource/topics/${topicID}/mm.jpg\");\n        `])}>\n            {data.currJSON.type !== 'clip' && <>\n                <div className=\"cover-main\">\n                    <div className=\"col-left\">\n                        <span className=\"scene\">scene</span> <br></br>{_pad(data.currIdx, 3, '0')}\n                    </div>\n                    <div className=\"col-right\">\n                        {/* <div className=\"title-en\">{info.titleen}</div>\n                        <div className=\"title-ko\">{info.titleko}</div>\n                        <div>\n                            <button className=\"button btn-heart\" onClick={() => {\n                                setIsKeep(!isKeep);\n                                data.setSettingKeepClipSentense(\n                                    'clip',\n                                    isKeep ? 'remove' : 'add',\n                                    topicID,\n                                )\n                            }}>\n                                {\n                                    isKeep ?\n                                        <i className=\"fas fa-heart fa-lg check\"></i>\n                                        :\n                                        <i className=\"far fa-heart fa-lg uncheck\"></i>\n                                }\n                            </button>\n                        </div> */}\n                    </div>\n                </div>\n\n            </>\n            }\n\n\n        </div>\n    )\n}\n\nconst GotoFullScript = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    return (\n        <>\n            {\n                data.currJSON.type === 'clip' &&\n                <div className=\"btn-goto-fulltopic\" onClick={() => {\n                    // 데이터 생성\n                    data.makeCurrJSON('topic', data.currIdx, topicID, () => {\n                        // 페이지 이동\n                        core.replacePage('PagePlaylist');\n                    });\n                }}>\n                    <div className=\"col1\">\n\n                        <div className=\"txt2\">문장이 속한 전체 대화 보러가기 </div>\n                    </div>\n                    <div className=\"col2\">\n                        <i className=\"fas fa-chevron-right i-right\"></i>\n                    </div>\n\n\n                </div>\n            }\n        </>\n    );\n}\n\nconst PlayLists = () => {\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SENTENSE_PLAYING, (idx: number) => {\n            setActiveIdx(idx);\n        });\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, (idx: number) => {\n            setActiveIdx(-1);\n        });\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PLAYING);\n            EventEmitter.remove(Event.SENTENSE_PAUSE);\n        };\n    }, []);\n\n    const isCloseDetailPanel = useRecoilValue(isCloseDetailPanelState);\n    const [activeIdx, setActiveIdx] = useState(-1);\n    const sentense = data.currJSON.json.sentense;\n    const Component = sentense.map((item: any, i: number) => {\n        return <SentenseItem\n            idx={i}\n            isActive={activeIdx === i}\n            json={item}\n            key={`sentense${i}`}\n        />;\n    });\n\n    const [forceRender, setForceRender] = useState(0);\n    callModeChange = () => {\n        setForceRender(forceRender + 1);\n    }\n    return (\n        <div className={classnames([\"PlayLists\", css`\n            padding-bottom:${isCloseDetailPanel ? 30 : 267}px;\n        `])}>\n            {Component}\n        </div>\n    )\n}\n//['_k', 'ek', 'e0', '0k', '00'];\nlet temprepeatMode: 'ALL' | '1' | '' | 'nil' = 'nil';\nconst SentenseItem = ({\n\n    isActive = false,\n    json,\n    idx,\n}: {\n\n    isActive: boolean,\n    json: any,\n    idx: number,\n}) => {\n\n    const [sentenseRepeatIdx, setSentenseRepeatIdxState] = useRecoilState(sentenseRepeatIdxState);\n    const clipID: string = currJSON.id;\n    const [isGlassMode, setIsGlassMode] = useState(false);\n    const isCheckVal = appBridge.settingInfo.keepSentense.includes(`${clipID}_${idx}`);\n    const [isCheck, setIsCheck] = useState(appBridge.settingInfo.keepSentense.includes(`${clipID}_${idx}`));\n    // console.log('tmplog_idxidx', idx, isCheckVal, `${clipID}_${idx}`, isCheck, appBridge.settingInfo.keepSentense);\n    // 상세 트레이닝 의 북마크 조작 후 리스트로 돌아올때 갱신 안되는 현상 수정\n    if (isCheckVal !== isCheck) {\n        setTimeout(() => {\n            setIsCheck(isCheckVal);\n        });\n    }\n    const [isOpenDesc, setIsOpenDesc] = useState(false);\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n\n    const words = json.words;\n\n    // const [isRepeat, setIsRepeat] = useState(false);\n    const checkClick = (tf: boolean) => {\n        setIsCheck(tf);\n\n        const makeKey = `${clipID}_${idx}`;\n\n        data.setSettingKeepClipSentense(\n            'sentense',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // 문장을 저장\n        data.setSettingKeepSentenseMoreInfo(\n            tf ? 'add' : 'remove',\n            makeKey,\n            json.en\n        );\n\n    }\n    const playOneItem = () => {\n        if (temprepeatMode !== 'nil') {\n            appBridge.settingInfo.repeatMode = temprepeatMode;\n            temprepeatMode = 'nil';\n        }\n\n        data.setCurrPlayBtnState('stop', 'a5');\n        setSentenseRepeatIdxState(9999);\n        data.audioPlayPause(idx);\n    }\n\n    return (\n        <div onTouchStart={() => {\n            core.sentensePressing();\n        }} className={classnames([`SentenseItem num-${idx}`, { active: isGlassMode }, { active: isActive }])}>\n\n            <div className={classnames([\"item-sound\", { active: isActive }])}>\n                <div className=\"item-main\">\n                    <div className=\"col-left\" onClick={() => {\n                        core.sentensePressing();\n                        data.setCurrPlayBtnState('stop', 'a4');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                        setTimeout(() => {\n                            // 1개 반복\n                            playOneItem();\n                        })\n\n                    }}>\n\n                        {\n                            isGlassMode\n                                ?\n                                <>\n                                    <div className=\"title-en\"><ItemCnt idx={idx} /> {json.en}</div>\n                                    {data.isSupportLang() && <div className=\"title-ko\">{json.ko}</div>}\n                                </>\n                                :\n                                <>\n                                    {['ek', 'e0'].includes(scriptMode) && <div className=\"title-en\"><ItemCnt idx={idx} /> {json.en}</div>}\n                                    {['_k'].includes(scriptMode) && <div className=\"title-en_\"><ItemCnt idx={idx} /> {json.en_}</div>}\n                                    {['0k', '00'].includes(scriptMode) && <div className=\"title-en_0\"><ItemCnt idx={idx} /> {json.en_0}</div>}\n                                    {['00', 'e0'].includes(scriptMode) && <div className=\"title-ko_0\">{json.ko_0}</div>}\n                                    {data.isSupportLang() && ['_k', 'ek', '0k'].includes(scriptMode) && <div className=\"title-ko\">{json.ko}</div>}\n                                </>\n                        }\n\n                    </div>\n                    <div className=\"col-right\">\n                        {/* {idx} */}\n\n\n                    </div>\n                </div>\n                <div className=\"item-bottom\">\n                    <div>\n                        <div className=\"col\">\n                            <button onClick={() => {\n                                data.setCurrPlayBtnState('stop', 'a3');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                setTimeout(() => {\n                                    // 1개 반복\n                                    playOneItem();\n                                })\n                            }} className=\"btn\">\n                                <i className=\"fas fa-volume-up\">\n                                    <span className=\"i-label\">{lang.t('play')}</span>\n                                </i>\n                            </button>\n                            <button className=\"btn\">\n                                {!(sentenseRepeatIdx === idx) && <i onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a2');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                    setTimeout(() => {\n                                        temprepeatMode = appBridge.settingInfo.repeatMode;\n                                        appBridge.settingInfo.repeatMode = '1';\n                                        data.setCurrPlayBtnState('play');\n                                        // // setIsRepeat(true);\n                                        data.audioPlayPause(idx);\n                                        // repeat equalizer보이기 인덱스\n                                        setSentenseRepeatIdxState(idx);\n                                    })\n                                }} className=\"fas fa-retweet\">\n                                    <span className=\"i-label\">{lang.t('play-infinity')}</span>\n                                </i>}\n                                {sentenseRepeatIdx === idx && <div className=\"stop-repeat\" onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a1');\n                                    appBridge.settingInfo.repeatMode = temprepeatMode;\n                                    // setIsRepeat(false);\n                                    // repeat equalizer보이기 인덱스\n                                    setSentenseRepeatIdxState(9999);\n                                }} >\n                                    <Equalizer />\n                                    <span className=\"i-label\">{lang.t('stop-infinity')}</span>\n                                </div>}\n\n                            </button>\n                            <button className=\"btn\">\n                                {isCheck\n                                    ?\n                                    <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                                        checkClick(false);\n                                    }}><span className=\"i-label\">{lang.t('saved-sentense')}</span></i>\n                                    :\n                                    <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                                        checkClick(true);\n                                    }}><span className=\"i-label\">{lang.t('save-sentense')}</span></i>\n                                }\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            {(data.isSupportLang() && words) && <button className=\"btn btn-word\" onClick={() => {\n                                setIsOpenDesc(!isOpenDesc);\n                            }}><i className=\"fas fa-plus\">\n                                    <span className=\"i-label\">{lang.t('words')}({words.length})</span></i>\n                            </button>}\n\n                            <button onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.topicID = clipID;\n                                data.setCurrPlayBtnState('stop', 'a10');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // core.insertPage('PageShadowing');\n                                setIsShowShadowing(true);\n\n                            }} className=\"btn btn-sndtraining\">\n                                <span className=\"logo-snd\">SD</span><span className=\"i-label\">{lang.t('shadowing-training')}</span>\n                            </button>\n                            {['_k', 'e0', '0k', '00'].includes(scriptMode) && <button className={classnames([\"btn btn-glass\", { glasson: isGlassMode }])} onClick={() => {\n\n                                setIsGlassMode(true);\n                                setTimeout(() => {\n                                    setIsGlassMode(false);\n                                }, 3000);\n                            }}><i className=\"fas fa-eye i-con\"><span className=\"i-label\">{lang.t('glassmode-show')}</span></i>\n                            </button>}\n                        </div>\n                    </div>\n                    {isOpenDesc && words && <div>\n                        <WordList json={words} />\n                    </div>}\n                </div>\n            </div>\n        </div >\n    )\n}\n\nconst WordList = ({\n    json\n}: {\n    json: any\n}) => {\n    const Itm = json.map((item: string[], i: number) => {\n        return <li className=\"item-word\">\n            <span className=\"word\">{item[0]}</span>\n            <span className=\"mean\">{item[1]}</span>\n        </li>\n    })\n    return (\n        <ul className=\"items-word\">\n            {Itm}\n        </ul>\n    );\n}\n\nconst ItemCnt = ({\n    idx,\n}: {\n    idx: number,\n}) => {\n    return (\n        <span className=\"item-cnt\">\n            {idx + 1}\n        </span>\n    )\n}\n\nconst PlayerControl = ({\n    topicID\n}: {\n    topicID: string\n}) => {\n    // alert(data.env.screenHeight);\n    const [renderCnt, setRenderCnt] = useState(0);\n    const [isClose, setIsClose] = useRecoilState(isCloseDetailPanelState);\n    const [repeat, setRepeat] = useState(1);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    const isFreeClip: boolean = data.isFreeClip(topicID);\n    const isAllPass: boolean = appBridge.settingInfo.inappInfo !== 'free';\n\n    // console.log('tmplog_isFreeClip', isFreeClip, isAllPass, !isFreeClip && !isAllPass)\n    // console.log('repeat,interval,speed', repeat, interval, speed);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.PURCHASE_COMPLETE, () => {\n            setRenderCnt(renderCnt + 1);\n        });\n    }, []);\n    data.playerSetting = {\n        repeat: repeat,\n        interval: interval,\n        speed: speed,\n    }\n    return (\n\n        <div className={`PlayerControl`}>\n            <div onClick={() => {\n                if (isClose) {\n                    setIsClose(!isClose);\n                }\n            }} className={classnames([\"functions\", { close: isClose }])}>\n                <div className=\"center\">\n                    <div className=\"func-header\">\n                        <button className=\"btn btn-blank btn-open\" onClick={() => {\n                            setIsClose(!isClose);\n                        }}>\n                            {isClose && <>{lang.t('setting-open')}<i className=\"fas fa-chevron-up up\"></i></>}\n                            {!isClose && <>{lang.t('setting-close')}<i className=\"fas fa-chevron-down down\"></i></>}\n                        </button>\n\n                    </div>\n\n                    <div className={`func-setting ${lang.language}`}>\n                        <div className=\"row\">\n                            <div className=\"col1\">{lang.t('repeat')}</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 1 }])}\n                                    onClick={() => {\n                                        setRepeat(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 2 }])}\n                                    onClick={() => {\n                                        setRepeat(2);\n                                    }}>x2</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 3 }])}\n                                    onClick={() => {\n                                        setRepeat(3);\n                                    }}>x3</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 4 }])}\n                                    onClick={() => {\n                                        setRepeat(4);\n                                    }}>x4</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: repeat === 5 }])}\n                                    onClick={() => {\n                                        setRepeat(5);\n                                    }}>x5</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">{lang.t('speed')}</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 1 }])}\n                                    onClick={() => {\n                                        setSpeed(1);\n                                    }}>x1</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.9 }])}\n                                    onClick={() => {\n                                        setSpeed(0.9);\n                                    }}>x0.9</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.8 }])}\n                                    onClick={() => {\n                                        setSpeed(0.8);\n                                    }}>x0.8</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: speed === 0.7 }])}\n                                    onClick={() => {\n                                        setSpeed(0.7);\n                                    }}>x0.7</button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col1\">{lang.t('interval')}</div>\n                            <div className=\"col2\">\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 0 }])}\n                                    onClick={() => {\n                                        setInterval(0);\n                                    }}>0s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1 }])}\n                                    onClick={() => {\n                                        setInterval(1);\n                                    }}>1s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 1.5 }])}\n                                    onClick={() => {\n                                        setInterval(1.5);\n                                    }}>1.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2 }])}\n                                    onClick={() => {\n                                        setInterval(2);\n                                    }}>2s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 2.5 }])}\n                                    onClick={() => {\n                                        setInterval(2.5);\n                                    }}>2.5s</button>\n                                <button\n                                    className={classnames([\"btn btn-blank btn-fc\",\n                                        { active: interval === 9999 }])}\n                                    onClick={() => {\n                                        setInterval(9999);\n                                    }}>{lang.t('sentenselength')}</button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"func-summary\">\n                        {lang.t('repeat')}<span className=\"bold\">x{repeat}</span>\n                        {lang.t('speed')}<span className=\"bold\">x{speed}</span>\n                        {lang.t('interval')}<span className=\"bold\">{(() => {\n                            return interval === 9999 ? '문장길이' : interval + 's';\n                        })()}</span>\n\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"controller\">\n\n                <div className=\"col-left\">\n                    <div>\n                        <BtnRepeatMode />\n                        <BtnScriptMode />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n// let repeatMode = 'ALL';\nconst BtnRepeatMode = () => {\n\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CHANGE_BTN_PLAY_STATE, (sta: string) => {\n            // alert(sta);\n            if (sta === 'stop') {\n                setIsDisable(true);\n            } else {\n                setIsDisable(false);\n            }\n        });\n        EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n\n            // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n            setUpdate(update + 1);\n        })\n    }, []);\n\n    let dataRepeatMode = appBridge.settingInfo.repeatMode;\n    const [update, setUpdate] = useRecoilState(btnRepeatModeUpdateState);\n    const [mode, setMode] = useState(dataRepeatMode);\n    const [isDisable, setIsDisable] = useState(true);\n    // 1개 반복은 개별의 반복으로 처리해서 메인컨트롤러 플레이는 아님\n    const isPlay = (data.currPlayBtnState === 'play' && appBridge.settingInfo.repeatMode !== '1');\n\n\n    appBridge.consolelog('tmplog_currPlayBtnState2' + ', ' + isPlay + ', ' + update + ', ' + data.currPlayBtnState + ', ' + appBridge.settingInfo.repeatMode)\n    const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n\n    return (\n        <>\n            <div className=\"BtnRepeatMode2\">\n                <button onClick={() => {\n                    // 개별아이템 반복중일경우 tempRepeatMode처리\n                    if (temprepeatMode !== 'nil') {\n                        appBridge.settingInfo.repeatMode = temprepeatMode;\n                        temprepeatMode = 'nil';\n                    }\n                    appBridge.settingInfo.repeatMode = '';\n                    // 개별아이템 반복모드 켜진경우 중지 처리\n                    setSentenseRepeatIdxState(9999);\n                    if (isPlay) {\n                        data.setCurrPlayBtnState('stop', 'BtnRepeatMode2');\n                        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                        EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"멈춤\");\n                    } else {\n                        data.setCurrPlayBtnState('play');\n                        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"play\");\n                        EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"실행\");\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-sound\", { active: isPlay }])}>\n                    {isPlay && <><Equalizer /><span className=\"i-label active\">{lang.t('play-all-stop')}</span></>}\n                    {!isPlay && <i className=\"fas fa-volume-up\"><span className=\"i-label\">{lang.t('play-all')}</span></i>}\n                </button>\n                <button onClick={() => {\n                    if (dataRepeatMode === 'ALL') {\n                        appBridge.settingInfo.repeatMode = '';\n                    } else {\n                        appBridge.settingInfo.repeatMode = 'ALL'\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-repeat\", { active: dataRepeatMode === 'ALL' }])}>\n                    <i className=\"fas fa-redo-alt\"></i>\n                </button>\n            </div>\n\n        </>\n    )\n}\n\nconst scriptModeStr: any = {\n    // '_k': '_/한',\n    '00': '.../...',\n    'e0': '영/...',\n    '0k': '.../한',\n    'ek': '영/한',\n}\nconst BtnScriptMode = () => {\n    const [mode, setMode] = useState(scriptMode);\n\n    return (\n        <>\n            <div className=\"BtnScriptMode2\">\n                <button onClick={() => {\n                    scriptMode = 'ek';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'ek' }])}>{lang.t(\"en-ko\")}</button>\n                {data.isSupportLang() && <button onClick={() => {\n                    scriptMode = 'e0';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'e0' }])}>{lang.t(\"en-only\")}</button>}\n                <button onClick={() => {\n                    scriptMode = '0k';\n                    setMode(scriptMode);\n                    callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '0k' }])}>{lang.t(\"ko-only\")}</button>\n            </div>\n\n        </>\n\n    )\n}","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport Equalizer from './component/Equalizer';\nimport MDictation from './component/MDictation';\nimport appBridge from './core/AppBridge';\nimport data from './core/Data';\nimport lang from \"./core/i18n\";\nimport { isShowShadowingState } from './core/store';\n\nconst selfName = 'PageShadowing';\nlet temprepeatMode: any;\nconst PageShadowing = () => {\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    useEffect(() => {\n        temprepeatMode = appBridge.settingInfo.repeatMode;\n        appBridge.settingInfo.repeatMode = '1';\n        data.setCurrPlayBtnState('play');\n        data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n\n        // 아이폰에서 푸터가 안나타나서 강제로 스크롤한번\n        (window as any).scrollTo(0, 10);\n        setTimeout(() => {\n            (window as any).scrollTo(0, 0);\n        }, 1000)\n\n        return () => {\n            data.setCurrPlayBtnState('stop');\n        }\n    }, []);\n    return (\n        <div className=\"view-vv view-PageShadowing\">\n            {/* <PageHeader parentSelf={selfName} /> */}\n            {/* <h2>Shadowing & Dictation</h2> */}\n            <button onClick={() => {\n                setIsShowShadowing(false);\n            }} className=\"btn btn-close\">\n                <i className=\"fas fa-times\"></i>\n            </button>\n            <MDictation\n                sentenseEn={data.pageShadowingParam.sentenseEn}\n                sentenseKo={data.pageShadowingParam.sentenseKo}\n            />\n            <ControlBtns />\n        </div>\n    );\n};\n\nconst ControlBtns = () => {\n    const [isPlay, setIsPlay] = useState(true);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    data.playerSetting.interval = interval;\n    data.playerSetting.speed = speed;\n    const [isCheck, setIsCheck] = useState((() => {\n        return appBridge.settingInfo.keepSentense.includes(`${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`);\n    })());\n\n    const checkClick = (tf: boolean) => {\n        setIsCheck(tf);\n\n        const makeKey = `${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`;\n\n        data.setSettingKeepClipSentense(\n            'sentense',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // 문장을 저장\n        data.setSettingKeepSentenseMoreInfo(\n            tf ? 'add' : 'remove',\n            makeKey,\n            data.pageShadowingParam.sentenseEn\n        );\n\n    }\n    return (\n        <div className={`func-setting ${lang.language}`}>\n            <div className=\"row\">\n                <div className=\"col1\">{lang.t('speed')}</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 1 }])}\n                        onClick={() => {\n                            setSpeed(1);\n                        }}>x1</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.9 }])}\n                        onClick={() => {\n                            setSpeed(0.9);\n                        }}>x0.9</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.8 }])}\n                        onClick={() => {\n                            setSpeed(0.8);\n                        }}>x0.8</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.7 }])}\n                        onClick={() => {\n                            setSpeed(0.7);\n                        }}>x0.7</button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col1\">{lang.t('interval')}</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 0 }])}\n                        onClick={() => {\n                            setInterval(0);\n                        }}>0s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1 }])}\n                        onClick={() => {\n                            setInterval(1);\n                        }}>1s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1.5 }])}\n                        onClick={() => {\n                            setInterval(1.5);\n                        }}>1.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2 }])}\n                        onClick={() => {\n                            setInterval(2);\n                        }}>2s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2.5 }])}\n                        onClick={() => {\n                            setInterval(2.5);\n                        }}>2.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 9999 }])}\n                        onClick={() => {\n                            setInterval(9999);\n                        }}>{lang.t('sentenselength')}</button>\n                </div>\n            </div>\n\n\n            <div className=\"footer\">\n                {\n                    isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        data.setCurrPlayBtnState('stop', 'a1');\n                        appBridge.settingInfo.repeatMode = temprepeatMode;\n                        setIsPlay(false);\n                    }}><Equalizer /><span className=\"txt\">Stop</span></button>\n                }\n                {\n                    !isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        temprepeatMode = appBridge.settingInfo.repeatMode;\n                        appBridge.settingInfo.repeatMode = '1';\n                        data.setCurrPlayBtnState('play');\n                        data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n                        setIsPlay(true);\n\n\n                    }}><i className=\"fas fa-retweet\"></i><span className=\"txt\">Play</span></button>\n                }\n\n                <button className=\"btn btn-bookmark\">\n                    {isCheck\n                        ?\n                        <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                            checkClick(false);\n                        }}><span className=\"i-label\">{lang.t('saved-sentense')}</span></i>\n                        :\n                        <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                            checkClick(true);\n                        }}><span className=\"i-label\">{lang.t('save-sentense')}</span></i>\n                    }\n                </button>\n            </div >\n\n        </div >\n    );\n}\n\nexport default PageShadowing;","import React, { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport data from '../core/Data';\nimport { cidState, tpidState } from '../core/store';\nimport PagePlaylist from '../PagePlaylist';\nimport WCourse from './WCourse';\n// let json:any = '';\nconst selfName = \"WPlayer\";\nconst WPlayer = () => {\n    const tpid = useRecoilValue(tpidState);\n    const cid = useRecoilValue(cidState);\n    const [isReadyJSON, setIsReadyJSON] = useState(false);\n    useEffect(() => {\n        // setTimeout(()=>{\n        // console.log('makeCurrJSONWH tpidcid:',tpid,cid)\n        data.makeCurrJSONWH(tpid, cid, (json: any) => {\n            // json = json;\n            data.currJSON = {\n                id: tpid,\n                json: json,\n            }\n            setIsReadyJSON(true);\n        });\n        // },1000)\n        // console.log('tmplog_tpidciddd',tpid,cid)\n    }, [tpid, cid])\n    const courseItemListJSON = data.leftJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    return (\n        <div className=\"WPlayer\">\n\n            {\n                isReadyJSON\n                    ?\n                    <div className=\"contents\">\n                        <WCourse json={courseItemListJSON[0]} parentName={selfName} />\n                        <PagePlaylist isShowPlayerControl={true} />\n                    </div>\n                    :\n                    <div>Loading...</div>\n            }\n        </div>\n    );\n};\n\nexport default WPlayer;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\nimport data from '../core/Data';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\nlet sentense = \"\";\nlet sentenseSplit: string[] = [];\nlet correctArr: string[] = [];// 답안지\nlet shuffleWords: TWord[] = [];\n\nconst MDictation = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    if (sentense !== sentenseEn) {\n        sentense = sentenseEn;\n        sentenseSplit = sentense.split(' ');\n        correctArr = sentenseSplit.slice(0);// 답안지\n        shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n            return {\n                word: item,\n                oriIdx: i,\n            }\n        }));\n    }\n\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const words = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('Wrong~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('Complete!!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    return (\n        <div className=\"MDictation\">\n            <h2>섀도잉 & 딕테이션</h2>\n            {/* <div>\n                {sentense}\n            </div> */}\n\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            <div className=\"sentenseKo\">\n                {data.isSupportLang() && sentenseKo}\n            </div>\n            <div className=\"words\">\n                {!isComplete && words}\n            </div>\n            <div className=\"ditaction-func\">\n                <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>Hint</button>\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>Reset</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"message-box\">\n                    <div>\n                        <div>{message}</div>\n                        {message.substr(0, 8) === 'Complete' && <div className=\"lets-shadowing\">Let's shadowing!!</div>}\n                    </div>\n\n                </div>\n\n            </div>}\n\n        </div>\n    );\n};\n\nexport default MDictation","import React from 'react';\nimport PageShadowing from '../PageShadowing';\n\nconst WShadowing = () => {\n    return (\n        <div className=\"WShadowing\">\n            <div className=\"panel-training\">\n                <PageShadowing />\n            </div>\n        </div>\n    );\n};\n\nexport default WShadowing;","import React, { useEffect } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport AudioPlayer from '../component/AudioPlayer';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { cidState, isShowShadowingState, tpidState, wbIsOpenNavState } from '../core/store';\nimport WCourseMain from './WCourseMain';\nimport WHeader from './WHeader';\nimport WMain from './WMain';\nimport WPlayer from './WPlayer';\nimport WShadowing from './WShadowing';\n\nconst WHome = () => {\n    const wbIsOpenNav = useRecoilValue(wbIsOpenNavState);\n    const [tpid, setTpID] = useRecoilState(tpidState);\n    const [cid, setCID] = useRecoilState(cidState);\n    const isShowShadowing = useRecoilValue(isShowShadowingState);\n    console.log('tpidcid 1', tpid, cid);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CHANGE_TPID, (options: {\n            tpid: string,\n            cid: string,\n        }) => {\n            console.log('tpidcid a0');\n            setTpID(options.tpid);\n            console.log('tpidcid a1');\n            setCID(options.cid);\n            console.log('tpidcid a2');\n        });\n    }, []);\n\n    return (\n        <div className=\"WHome\">\n            {isShowShadowing && <WShadowing />}\n\n            {/* <WShadowing /> */}\n            <AudioPlayer />\n            <header className=\"w-header\">\n                <WHeader />\n            </header>\n            <main className=\"w-main\">\n                {\n                    tpid\n                        ?\n                        tpid === 'CourseMain' ? <WCourseMain /> : <WPlayer />\n                        :\n                        <WMain />\n                }\n\n                {/* <Home /> */}\n            </main>\n        </div>\n    );\n};\n\nexport default WHome;","import React, { useState, useEffect } from 'react';\nimport './scss/Main.scss';\nimport Route from './views/Route';\nimport Loading from './views/component/Loading';\nimport EventEmitter, { Event } from './views/core/EventEmitter';\nimport { isLoadingState } from './views/core/store';\nimport { useSetRecoilState } from 'recoil';\nimport Iframe from 'react-iframe';\nimport appBridge from './views/core/AppBridge';\nimport WHome from './views/wh/WHome';\n\nfunction App() {\n  const [isAppReady, setIsAppReady] = useState(false);\n  const setIsLoading = useSetRecoilState(isLoadingState);\n\n  useEffect(() => {\n    EventEmitter.subscribe(Event.IS_APP_READY, () => {\n      // alert('tmplog IS_APP_READY1')\n      setIsLoading(false);\n      setIsAppReady(true);\n    });\n  }, []);\n  // alert('tmplog IS_APP_READY2' + isAppReady)\n  return (\n    <div className=\"App\">\n      <WHome />\n      {/* <Loading />\n      {isAppReady && <Route />} */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}