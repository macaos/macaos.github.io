{"version":3,"sources":["core/store.ts","components/Loading.tsx","components/PrintTable.tsx","components/AlertBasic.tsx","components/AlertBuyProduct.tsx","components/AlertBuyProduct2.tsx","image/event1.png","pages/Alert.tsx","components/WCourseItem.tsx","components/WCourse.tsx","pages/PageHome.tsx","pages/CourseMain.tsx","components/LoadingDom.tsx","components/MDictation.tsx","components/PageShadowing.tsx","components/YTModule.tsx","components/PageSpeedmate.tsx","components/YTSpeedModule.tsx","pages/CoursePlay.tsx","pages/CoursePrint.tsx","pages/Footer.tsx","fb/FBViewLogin.tsx","fb/FBViewLogout.tsx","fb/FBState.tsx","pages/Header.tsx","pages/Mypage.tsx","pages/PageRecord.tsx","pages/PageCSSHamburger.tsx","pages/ToastAlert.tsx","components/MDictation2.tsx","pages/CourseERT.tsx","pages/CourseERTMain.tsx","pages/CourseERTServe.tsx","pages/PageRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx","core/Days.ts","core/data.ts","components/ZZAudioProgram.ts","components/Equalizer.tsx","core/EventEmitter.ts","fb/fbase.ts","env.ts"],"names":["isLoadingState","atom","key","default","isCloseDetailPanelState","scriptModeState","btnRepeatModeUpdateState","setSceneIdxState","isYTModuleState","isYTSpeedModuleState","ytbSentenseHideState","isShowSpeedmateState","lastURLState","mainMenuState","isShowShadowingState","printCourseIDState","Loading","useRecoilState","isLoading","setIsLoading","useEffect","EventEmitter","subscribe","Event","SHOW_LOADING","HIDE_LOADING","className","printJSON","require","DaySentenses","arr","idx","SentenseList","map","item","i","rowSpan","length","data-tableexport-xlsxformatid","ko","en","PrintTable","printCourseID","setprintCourseID","selectCourseJSON","find","info","courseID","tr","list","onClick","window","printScript","id","AlertBasic","data","hideAlert","AlertBuyProduct","openParam","useState","isBrowser","stepCD","setStepCD","courseInfoJSON","mainJSON","filter","console","log","qrurl","pricesCode","setTimeout","title","prices","value","href","target","classnames","alert","fbase","userMoreInfo","paymentStepState","AlertBuyProduct2","setpaymentStep","Alert","moduleName","setModuleName","SHOW_ALERT","options","bodyOverflowHidden","HIDE_ALERT","AlertModule","CItemMovie","itemJSON","isSubscriptionInfo","Tits","tit","str","idxPad","_pad","String","isTrial","gotoPage","query","trial","src","CItem","WCourseItem","viewType","getSubscriptionState","Tags","Tag","split","WCourse","json","parentName","topics","item2","i2","itemViewType","isShowTitle","isHide","setIsHide","tags","uniqCnt","CourseItem","includes","css","getRootPath","level","ing","isMakeComplete","PageHome","lastURL","setlastURL","course1","item1","isHomeList","ON_AUTH_STATE_CHANGED","inputEmail","setInputEmail","subscriptionInfo","placeholder","autoCapitalize","name","type","onChange","event","dispatch","FB_START_LOGIN","from","email","CourseMainList","cid","courseItemListJSON","useSetRecoilState","location","openID","CourseMain","gotoTop","setRender","d","search","substring","decryptQuery","decryptURL","campaignid","qs","parse","getOnlyquerystring","campaign","getCampaignInfo","Math","random","ZZAudioProgram","pause","LoadingDom","sentense","sentenseSplit","correctArr","shuffleWords","MDictation","sentenseEn","sentenseKo","trim","slice","_shuffle","word","oriIdx","submitIdx","setSubmitIdx","submitArr","setSubmitArr","hintIdx","setHintIdx","message","setMessage","isComplete","setIsComplete","blanks","submitWord","words","dpWord","replace","toLowerCase","cloneArr","substr","ControlBtns","isPlay","setIsPlay","interval","setInterval","speed","setSpeed","livePlayInfo","active","Equalizer","play","pageShadowingParam","sentenseIdx","repeat","repeatCnt","allplay","PageShadowing","setIsShowShadowing","totalIdx","audioSrc","scrollTo","courseToMainJSON","_tpidx","Scene0","sceneIdx","setSceneIdx","SceneIntro","init","setInit","innerScene","setInnerScene","playEffect","SceneSentense","topicJSON","SceneOuttro","setIsEot","sendTelelog","YTModule","tpid","tpidx","setYtbSentenseHide","setIsYTModule","setUpdate","SENTENSE_PAUSE","cntForRepeat","turnCnt","ceil","cnt","setVolume","ls","sentenseCnt","isYTMode","PageSpeedmate","isShowSpeedmate","setisShowSpeedmate","sentensePauseHandler","remove","Number","toFixed","sentenseRepeat","_cid","_tpid","YTSpeedModule","isOwner","CoursePlayList","GotoNextPrev","gotoNextPrev","reload","gotoCourseMainPage","TopicCover","courseToMainIdx","PlayLists","CONTROL_UI_UPDATE","render","isCloseDetailPanel","useRecoilValue","Component","renderCnt","SentenseItem","isOpenDesc","setIsOpenDesc","isGlassMode","setIsGlassMode","scriptMode","doneSentense","isCheck","setIsCheck","checkClick","tf","isLogin","showToastMessage","mtime","makeKey","setSettingKeepClipSentense","isActive","setIsShowSpeedmate","isInfinityPlay","playClick","ytbSentenseHide","isYTModule","isYTSpeedModule","ytbHideClassEn","ytbHideClassKo","onTouchStart","sentensePressing","en_0","ko_0","topicID","prePlay","glasson","modeClass","PlayerControl","isClose","setIsClose","setRepeat","close","BtnRepeatMode","BtnScriptMode","setscriptMode","WordList","Itm","ItemCnt","CoursePlay","isCheckedAuth","setisCheckedAuth","isShowShadowing","datasetClipHistory","intpid","hash","setClipHistory","userInfo","isSentensePressing","isScrolling","result","$el","document","querySelector","y","offsetTop","animateScrollTo","elementToScroll","isData","setisData","parseQuery","presetSrc","getTopicJSON","then","ytview","yt","ytspeed","CoursePrint","param","isHashURL","Footer","SubscriptionInfoArr","FBViewLogin","isShowLoginPopup","setisShowLoginPopup","inputCode","setInputCode","authService","signOut","buyFbSubscriptionInfo","e","submitCouponCode","btnLabel","FBViewLogout","inputPw","setInputPw","inputPw2","setInputPw2","viewMode","setViewMode","setisLoading","onSubmit","a","preventDefault","convertErrorMessage","code","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","catch","error","FBState","checkedLogin","setCheckedLogin","initLogin","Header","setViewType","indexOf","SubscriptionHistory","Comp","dateMyFormat","Mypage","checkLoginUser","currSubsArr","currentAvailableSubscriptionInfo","sentenseCntHistory","currentDateState","dayjs","utc","local","CalNav","currentDate","setCurrentDate","todayStr","format","add","WeekHeader","Day","classarr","dateStr","date","getDate","repeatPercent","concat","dateBeforeDays","days","Date","getTime","getDayDisplayInfo","inDayInfo","nyear","getFullYear","nmonth","getMonth","nday","WeekDays","Days","showDate","firstDate","lastDate","firstWeek","getDay","dateData","dayNum","classArr","abs","push","PageRecord","inDay","inPlusCnt","yearArr","monthArr","parseInt","updateCntHistory","PageCSSHamburger","ToastAlert","setInfo","SHOW_TOAST_MESSAGE","option","clearInterval","MDictation2","WordChips","ertjson","currErtid","coursePrimaryStruct","storageData","ertCourse001","updateDoneItemState","initStorageState","getData","localStorage","getItem","JSON","Object","assign","syncStorageState","setItem","stringify","setDoneItem","inWCID","itemIdx","checkDouble","sentenseDoneArr","setUndonItem","CompleteItem","doneArr","ListMode","Compo","ListModeItem","isBack","setIsBack","thisDone","setThisDone","setupdateDoneItem","turn","back","done","getLevel","tagStr","TestEaseMode","CompSentenseItem","TestHardMode","SentenseHardItem","enInput","setenInput","isChecked","setisChecked","showHint2","setShowHint2","lv","tag","correctPercent","stringSimilarity","compareTwoStrings","setDone","inIdx","isDone","stateClass","onKeyDown","keyCode","wordArr","hintStr","en_","SentenseEaseItem","onlyWord","CheckedEnKoA","tmpInput","tmpEn","dpStr","dpStr2","tmpInputArr","tmpEnArr","tmpInputArr2","slim","oriDP","tmpEnArr2","resultA","wordPlus","forEach","check","compareWord","makeSentnse","isRightWords","checkClass","Words","CourseERT","setMainMenu","queryViewMode","mode","err","ertid","getERTJSON","Category","CompItem","items","obj","jIdx","color","icon","desc","CourseERTMain","CompCate","ertJSON","courseData","CourseERTServe","curropenid","setcurropenid","isReady","setIsReady","openid","courseToMainJSONWithKey","CompPageMiniplayer","lazy","CompPageBlogpost","PageRoute","exact","path","component","fallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","extend","queryDivideStr","scrollingLazyTime","scrollingTick","productTable","price","priceQR","Data","gaFrame","logCnt","numberWithCommas","x","parts","toString","join","incryptString","etcparam","decryptParam","this","qstr","nv_pl_morden_t1","nv_store_modern","coursetestid","inParam","inQuery","resultItem","keyStr","dir","overIdx","historyClips","syncMoreInfo","termCD","st","et","stInt","etInt","type1","type2","newArr","keepClips","keepSentense","text","bytes","CryptoJS","AES","decrypt","make1","enc","Utf8","body","classList","CHANGE_BTN_PLAY_STATE","axios","get","ertName","callback","firstY","scrollY","p","hitType","eventLabel","eventValue","host","postMessage","infoStr","subscriptionType","todayInt","infoArr","productCD","edStr","inMessage","params","response","finally","audioTimeArr","inID","inVolume","zzaudio","timeen","playComplete","bind","vol","delay","ms","Promise","resolve","currentSoundTime","intervalTime","settingInterval","events","splice","IS_APP_READY","INSERT_PAGE","REPLACE_PAGE","GOTO_BACK","RESET_PAGE","INIT_AUDIO","AUDIO_PLAY_PAUSE","AUDIO_STOP","SENTENSE_PLAYING","SET_BTN_PLAY_STATE","SHOW_NOTI_MESSAGE","PURCHASE_COMPLETE","FREETIME_UPDATED","CLICK_HOTCLIP_THUMB","AUDIO_PLAY_COUNT","CHANGE_TPID","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FBase","initUserInfoMerge","joindate","uid","repeatMode","subscriptionInfoHistory","showClips","onAuthStateChanged","user","docName","makeDocNameWithUserInfo","dbService","collection","doc","docs","r","inCouponCode","inFrom","errorAlert","cd","term","inTermcode","onlyTermCode","termNum","weekMonthCD","weekMonthCDFull","startdateStr","currentAvailableSubscriptionInfoArr","convertSubscriptionInfoStrToObj","enddayStr","fbasesubscriptionInfo","returnArr","set","merge","reg","test","emailPw","auth","convertMessage","firestore"],"mappings":"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","file":"static/js/main.ed45afd1.chunk.js","sourcesContent":["import { atom, RecoilState } from \"recoil\";\n\n// export const config = {\n//     appid: \"com.kareui.caseteenglish\",\n//     inappIDs: {\n//         \"unlock01\": \"com.kareui.caseteenglish.unlock01\"\n//     }\n// }\n\nexport const isLoadingState = atom({\n    key: \"isLoadingState\",\n    default: false,\n})\n\n// // playControl detailPanel state\nexport const isCloseDetailPanelState = atom({\n    key: \"isCloseDetailPanelState\",\n    default: true,\n})\n\nexport const scriptModeState = atom({\n    key: \"scriptModeState\",\n    default: 'ek',\n})\n\nexport const sentenseRepeatIdxState: RecoilState<number> = atom({\n    key: \"sentenseRepeatIdxState\",\n    default: 9999,\n})\n\nexport const btnRepeatModeUpdateState: RecoilState<number> = atom({\n    key: \"btnRepeatModeUpdateState\",\n    default: 0,\n})\n\nexport const setSceneIdxState: RecoilState<number> = atom({\n    key: \"setSceneIdxState\",\n    default: 0,\n})\n\nexport const isYTModuleState = atom({\n    key: \"isYTModuleState\",\n    default: false,\n})\nexport const isYTSpeedModuleState = atom({\n    key: \"isYTSpeedModuleState\",\n    default: false,\n})\n\nexport const ytbSentenseHideState: RecoilState<string> = atom({\n    key: \"ytbSentenseHideState\",\n    default: '00',\n})\n\nexport const isShowSpeedmateState = atom({\n    key: \"isShowSpeedmateState\",\n    default: false,\n})\n\nexport const lastURLState = atom({\n    key: \"lastURLState\",\n    default: '',\n})\n\nexport const logState: RecoilState<string> = atom({\n    key: \"logState\",\n    default: 'logState',\n})\n\nexport const mainMenuState = atom({\n    key: \"mainMenuState\",\n    default: 'shadowing',// shadowing, write\n})\n\n\n// export const isMiniplayerState = atom({\n//     key: \"isMiniplayerState\",\n//     default: false,\n// })\n\n// export const homeListSortState: RecoilState<string> = atom({\n//     key: \"homeListSortState\",\n//     default: 'reverse',\n// })\n// export const updateCntPlayState: RecoilState<number> = atom({\n//     key: \"updateCntPlayState\",\n//     default: 0,\n// })\n\n// export const wbIsOpenNavState = atom({\n//     key: \"wbIsOpenNavState\",\n//     default: false,\n// });\n\n// export const tpidState = atom({\n//     key: \"tpidState\",\n//     default: '',\n// })\n\n// export const cidState = atom({\n//     key: \"cidState\",\n//     default: '',\n// })\n\n// 강화훈련\nexport const isShowShadowingState = atom({\n    key: \"isShowShadowingState\",\n    default: false,\n})\n\nexport const printCourseIDState = atom({\n    key: \"printCourseIDState\",\n    default: '',\n})\n\n\n\n\nexport default {};","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isLoadingState } from \"../core/store\";\nconst Loading = () => {\n    const [isLoading, setIsLoading] = useRecoilState(isLoadingState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_LOADING, () => {\n            setIsLoading(true);\n        })\n        EventEmitter.subscribe(Event.HIDE_LOADING, () => {\n            setIsLoading(false);\n        })\n    }, []);\n    return (\n        <>\n            {\n                isLoading && <div className=\"loading-container\">\n                    <div className=\"lds-ellipsis\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </div>\n            }\n        </>\n\n    );\n};\n\nexport default Loading;","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { printCourseIDState } from '../core/store';\nconst printJSON = require('../resource/mainJSONPrint.json');\nconst PrintTable = () => {\n\n    const [printCourseID, setprintCourseID] = useRecoilState(printCourseIDState);\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n        // console.log('printJSONitem.courseID === printCourseID', item, item.info.courseID,'__', printCourseID)\n        if (item.info.courseID === printCourseID) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    // const tr = selectCourseJSON.list.map((item:any, i:number)=>{\n    //     return <div>{item.ko}, {item.en} </div>\n    // })\n    // console.log('printJSONitem1',selectCourseJSON)\n    return (\n        <div className=\"PrintTable\">\n            {\n                selectCourseJSON && <div>\n                    <div className=\"header\">\n                        <div className=\"row-right\">\n                            <button className=\"btn btn-border\" onClick={() => {\n                                setprintCourseID('');\n                            }}><i className=\"fas fa-arrow-left\"></i> 돌아가기</button>\n                            <button className=\"btn btn-border\" onClick={() => {\n                                // console.log((document as any).getElementById(\"script-print-table\"))\n                                // new TableExport((document as any).getElementById(\"script-print-table\"),{\n\n                                //     filename:'카셋회화훈련-인턴',\n                                //     formats:['xlsx'],\n                                // });\n                                (window as any).printScript('카셋회화훈련-인턴');\n                            }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                        </div>\n\n                    </div>\n                    <table id=\"script-print-table\">\n                        <thead>\n                            <tr >\n                                <td >일자</td>\n                                <td >No.</td>\n                                <td >한글</td>\n                                <td >영어</td>\n                                <td >확인</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tr}\n                            {/* <tr >\n                                <td rowSpan={3}>&nbsp;&nbsp;&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                                <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr>\n                            <tr >\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            <td >&nbsp;</td>\n                            </tr> */}\n                        </tbody>\n                    </table>\n\n\n                </div>\n            }\n        </div>\n    );\n};\n\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className=\"tr-day\" >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n}\n\nexport default PrintTable;","import React from 'react';\nimport data from '../core/data';\nconst AlertBasic = () => {\n    return (\n        <div>\n            AlertBasic\n            <button onClick={() => {\n                data.hideAlert();\n            }}>close</button>\n        </div>\n    );\n};\n\nexport default AlertBasic;","import classnames from \"classnames\";\nimport QRCode from \"qrcode.react\";\nimport React, { useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n\n    MobileView\n} from \"react-device-detect\";\n// import core from '../core/Core';\nimport data from '../core/data';\nimport fbase from \"../fb/fbase\";\n\nconst AlertBuyProduct = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n    // const [isQRInit, setIsQRInit] = useState(false);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    let price = '';\n\n\n\n\n\n    const courseInfoJSON = data.mainJSON.filter((item: any, i: number) => {\n        console.log('data.leftJSON', item.courseID, openParam.courseID)\n        return item.courseID === openParam.courseID;\n    })[0];\n\n    const qrurl = `https://qr.kakaopay.com/281006012180682200001379${courseInfoJSON.pricesCode[0]}`;\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 30 * 1000);\n    }\n\n    return (\n        <div className=\"AlertBuyProduct\">\n            <div className=\"header\">\n                <div className=\"title\">\n                    카카오페이 송금결제\n                </div>\n                <button className=\"btn btn-close\" onClick={() => {\n                    data.hideAlert();\n                }}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <div className=\"message\">\n                {courseInfoJSON.title}( {courseInfoJSON.prices[0]}원 )\n            </div>\n\n            <div className=\"step step1\">\n\n                <div className=\"step1-in\">\n                    <BrowserView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,<br></br>\n                                <small className=\"small\">카카오톡 송금 창 메세지 입력란에 <br></br>\n                            가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.</small>\n                            </li>\n                            <li className=\"qr-container\">\n                                {\n                                    stepCD > 0\n                                        ?\n                                        <QRCode value={qrurl} />\n                                        :\n                                        <div className=\"btn-create-qr\" onClick={() => {\n                                            setStepCD(1);\n\n                                        }}>\n                                            <div className=\"cover\">\n                                                <i className=\"fas fa-redo-alt\"></i>\n                                                <div className=\"desc\">송금코드생성</div>\n                                            </div>\n                                            <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                        </div>\n                                }\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </BrowserView>\n                    <MobileView>\n                        <ul>\n                            <li className=\"title\">\n                                <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                            <li className=\"qr-container\">\n                                <a onClick={() => {\n                                    setTimeout(() => {\n                                        setStepCD(2);\n                                    }, 15 * 1000);\n                                }} className=\"btn-confirm\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                            </li>\n                            <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                        </ul>\n\n                    </MobileView>\n                    {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n                </div>\n            </div>\n            <div className=\"step step2\">\n                {/* <div className=\"title\">STEP02-확인요청</div>\n                <div className=\"step2-in\">\n                    <button className={classnames([\"btn-confirm\",`stepCD-${stepCD}`])} onClick={() => {\n                        if(stepCD < 2){\n                            alert('송금코드 생성 > 카카오페이결제 > 결제 완료 후 승인요청을 해주세요.');\n                            return;\n                        }\n\n                    }}>승인요청</button>\n                </div> */}\n                <div className=\"notice\">\n                    문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n                <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                    if (stepCD < 2) {\n                        alert('결제 완료 후 승인요청을 해주세요.');\n                        return;\n                    }\n                    alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n                    console.log('fbasesssInfo', fbase.userMoreInfo);\n                }}>승인요청</button>\n            </div>\n\n\n\n            {/* <button className=\"btn-confirm\" onClick={() => {\n                core.hideAlert();\n                core.insertPage(\"PageMenu\");\n            }}>구매 진행</button> */}\n\n        </div>\n    );\n};\n\nexport default AlertBuyProduct;","import classnames from 'classnames';\nimport { send } from 'process';\nimport QRCode from \"qrcode.react\";\nimport React, { useEffect, useState } from 'react';\nimport {\n    BrowserView, isBrowser,\n    MobileView\n} from \"react-device-detect\";\nimport { atom, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport data, { productTable } from '../core/data';\nimport Days from '../core/Days';\nimport fbase from '../fb/fbase';\nimport event1png from '../image/event1.png';\n\nconst paymentStepState = atom({\n    key: \"paymentStepState\",\n    default: 0,\n})\nconst selectPlanState = atom({\n    key: \"selectPlanState\",\n    default: '',\n})\n\nconst sendTelemessage = ({\n    sendTitle,\n    email,\n    uid,\n    priceCode,\n    moreStr,\n}: {\n    sendTitle: string,\n    email: string\n    uid: string\n    priceCode: string,\n    moreStr: string,\n}) => {\n    data.sendTelelog(`${sendTitle}::${email}##${uid}##${priceCode}##${moreStr}`)\n}\nconst AlertBuyProduct2 = ({\n    openParam\n}: {\n    openParam: any\n}) => {\n\n    const [paymentStep, setpaymentStep] = useRecoilState(paymentStepState);\n\n    useEffect(() => {\n        setpaymentStep(0);\n    }, [])\n\n    return (\n        <div className=\"AlertSmartstore\">\n            <div className=\"header\">\n                <div className=\"title\">\n                    이용권 안내\n                    </div>\n                <button className=\"btn btn-close\" onClick={() => {\n\n                    data.hideAlert();\n                }}><i className=\"fas fa-times\"></i></button>\n            </div>\n\n            <div className=\"bodycon\">\n                <small>* 프리패스 이용권 구매를 네이버 쇼핑으로 변경하였습니다.</small><br></br>\n                <small className=\"notice\">\n                    * 구매과정 중 어려운 점은 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오 채널</a>로 문의 주세요.\n                </small>\n                <div className=\"title\">이용권 구매 및 등록 안내 </div>\n                <ul className=\"desc\">\n                    <li>1. 카대영 간편 회원 가입</li>\n                    <li>2. 로그인 후 우측 상단 아이디를 클릭하여 <a href=\"/#/Mypage\">마이페이지</a>로 이동</li>\n                    <li>3. 구매 후 이메일로 받은 코드 입력</li>\n                </ul>\n                <div className=\"title\">프리패스 구매처</div>\n                <a className=\"btn btn-border btn-smartstore\" href=\"https://smartstore.naver.com/casete\" target=\"_blank\">네이버스토어 바로가기</a>\n\n            </div>\n\n        </div>\n        // <div className=\"AlertBuyProduct2\">\n        //     {paymentStep === 0 && <PayStep01 />}\n        //     {paymentStep === 1 && <PayStep02 />}\n        // </div>\n    );\n};\n\nconst PayStep01 = () => {\n    const setPaymentStep = useSetRecoilState(paymentStepState);\n    const [selectPlan, setSelectPlan] = useRecoilState(selectPlanState);\n    return (<div className=\"PayStep01\">\n        <div className=\"header\">\n            <div className=\"title\">\n                프리패스 기간 선택\n                </div>\n            <button className=\"btn btn-close\" onClick={() => {\n\n                data.hideAlert();\n            }}><i className=\"fas fa-times\"></i></button>\n        </div>\n        <div className=\"image\">\n            <img src={event1png}></img>\n        </div>\n\n        <div className=\"notice\">\n            구매과정 중 문제가 있으면 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 알려주세요. <br></br>\n\n        </div>\n        <ul className=\"plan-list\">\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '12m' }])} onClick={() => {\n                setSelectPlan('12m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>12개월 프리패스<div className=\"price\">{data.numberWithCommas(productTable['12m'].price)}원<span className=\"per-month\">(=<span className=\"em\">1,200원</span>/월)</span></div></div>\n            </li>\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '6m' }])} onClick={() => {\n                setSelectPlan('6m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>6개월 프리패스<div className=\"price\">{data.numberWithCommas(productTable['6m'].price)}원<span className=\"per-month\">(=<span className=\"em\">1,500</span>원/월)</span></div></div>\n\n            </li>\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '3m' }])} onClick={() => {\n                setSelectPlan('3m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>3개월 프리패스<div className=\"price\">{data.numberWithCommas(productTable['3m'].price)}원<span className=\"per-month\">(=<span className=\"em\">2,000</span>원/월)</span></div></div>\n\n            </li>\n\n            <li className={classnames([\"btn-plan-radio\", { active: selectPlan === '1m' }])} onClick={() => {\n                setSelectPlan('1m');\n            }}>\n                <div className=\"bullet\"><i className=\"fas fa-check\"></i></div>\n                <div>1개월 프리패스<div className=\"price\">{data.numberWithCommas(productTable['1m'].price)}원<span className=\"per-month\">(=<span className=\"em\">2,400</span>원/월)</span></div></div>\n\n            </li>\n        </ul>\n        <div className=\"footer\">\n            <button className={classnames([\"btn-confirm\", { active: selectPlan !== '' }])} onClick={() => {\n                if (selectPlan === '') {\n                    alert('프리패스 기간을 선택해 주세요.');\n                    return;\n                }\n                // console.log('fbase.userMoreInfo', fbase.userMoreInfo)\n                sendTelemessage({\n                    sendTitle: '결제진행버튼',\n                    email: fbase.userMoreInfo.email,\n                    uid: fbase.userMoreInfo.uid,\n                    priceCode: selectPlan,\n                    moreStr: '',\n                });\n                setPaymentStep(1)\n            }}>결제진행</button>\n        </div>\n\n    </div>);\n}\n\nconst PayStep02 = () => {\n    const [buyStep, setBuyStep] = useState(0);\n    const [stepCD, setStepCD] = useState(isBrowser ? 1 : 0);\n    const [selectPlan, setSelectPlan] = useRecoilState(selectPlanState);\n    if (isBrowser) {\n        // 브라우져는 바로 30초 카운팅\n        setTimeout(() => {\n            setStepCD(2);\n        }, 15 * 1000);\n    }\n    const qrurl = 'https://qr.kakaopay.com/281006012180682200001379' + productTable[selectPlan].priceQR;\n    return (<div className=\"PayStep02\">\n        <div className=\"header\">\n            <div className=\"title\">\n                <img className=\"kakaopay-logo\" src=\"https://img.etnews.com/photonews/2009/1337259_20200915103744_396_0001.jpg\"></img>카카오페이 송금결제\n                </div>\n            <button className=\"btn btn-close\" onClick={() => {\n                data.hideAlert();\n            }}><i className=\"fas fa-times\"></i></button>\n        </div>\n\n        <div className=\"message\">\n            {productTable[selectPlan].title} 프리패스( {data.numberWithCommas(productTable[selectPlan].price)}원 )\n            </div>\n\n        <div className=\"step step1\">\n\n            <div className=\"step1-in\">\n                <BrowserView>\n                    <ul>\n                        <li className=\"title\">\n                            <div className=\"message-no\">\n                                <div className=\"bullet-no\">1</div>\n                                <div>휴대폰 카카오톡으로 아래의 QR코드 스캔 및 결제 후,</div>\n                            </div>\n\n                            <div className=\"small\">\n                                <div>카카오톡 송금 창 메세지 입력란에</div>\n                                <div>가입하신 이메일( <span className=\"em\">{fbase.userMoreInfo.email}</span> )을 꼭 입력해 주세요.</div>\n                            </div>\n\n                        </li>\n                        <li className=\"qr-container\">\n                            {\n                                stepCD > 0\n                                    ?\n                                    <QRCode value={qrurl} />\n                                    :\n                                    <div className=\"btn-create-qr\" onClick={() => {\n                                        setStepCD(1);\n\n                                    }}>\n                                        <div className=\"cover\">\n                                            <i className=\"fas fa-redo-alt\"></i>\n                                            <div className=\"desc\">송금코드생성</div>\n                                        </div>\n                                        <div className=\"dummy\"><QRCode value=\"qr코드 생성용 로딩입니다\" /></div>\n                                    </div>\n                            }\n\n                        </li>\n                        <li className=\"title\">\n                            <div className=\"message-no\">\n                                <div className=\"bullet-no\">2</div>\n                                <div>결제 후 승인요청 버튼을 눌러주세요.</div>\n                            </div>\n\n                        </li>\n                    </ul>\n\n                </BrowserView>\n                <MobileView>\n                    <ul>\n                        <li className=\"title\">\n                            <div className=\"bullet-no\">1</div>\n                            카카오톡 송금 창 메세지 입력란에 가입하신 이메일(macaoshu@gmail.com)을 꼭 입력해 주세요.\n                        </li>\n                        <li className=\"qr-container\">\n                            <a onClick={() => {\n                                setTimeout(() => {\n                                    setStepCD(2);\n                                }, 15 * 1000);\n                            }} className=\"btn-gotokakao\" href={qrurl} target=\"_blank\">카카오페이 결제하기<i className=\"fas fa-angle-right\"></i></a>\n                        </li>\n                        <li className=\"title\"><div className=\"bullet-no\">2</div> 결제 후 승인요청 버튼을 눌러주세요.</li>\n                    </ul>\n\n                </MobileView>\n                {/* <div>반드시 메세지에 가입하신 이메일 주소를 입력 해 주세요.</div> */}\n            </div>\n        </div>\n\n        <div className=\"step step2\">\n            <div className=\"notice\">\n                문제가 있는경우 <a href=\"mailto:dev@casete.in\">이메일</a> 및 <a href=\"http://pf.kakao.com/_HxlMJK/chat\" target=\"_blank\">카카오채널</a>로 문의 주세요.\n                </div>\n            <button className={classnames([\"btn-confirm\", `stepCD-${stepCD}`])} onClick={() => {\n                if (stepCD < 2) {\n                    alert('결제 완료 후 승인요청을 해주세요.');\n                    return;\n                }\n                alert('승인이 완료되면(결제 후 평균 15분 이내 승인) 내정보 > 구입목록에서 확인하실 수 있습니다. ')\n                const monNum = ({\n                    \"1m\": 1,\n                    \"3m\": 3,\n                    \"6m\": 6,\n                    \"12m\": 12\n                } as any)[selectPlan];\n                fbase.buyFbSubscriptionInfo(`t${selectPlan}`)\n                // const todayStr = Days.utc().local().format('YYYYMMDD');\n                // const enddayStr = Days(todayStr).add(monNum, 'month').format('YYYYMMDD')\n                // const fbasesubscriptionInfo = `t${selectPlan}##${todayStr}##${enddayStr}`;\n                // fbase.userMoreInfo.subscriptionInfo = fbasesubscriptionInfo;\n                sendTelemessage({\n                    sendTitle: '승인요청',\n                    email: fbase.userMoreInfo.email,\n                    uid: fbase.userMoreInfo.uid,\n                    priceCode: selectPlan,\n                    moreStr: `t${selectPlan}`,\n                });\n                // fbase.syncMoreInfo();\n                setTimeout(() => {\n                    data.hideAlert();\n                    window.location.reload();\n                }, 1000);\n            }}>승인요청</button>\n        </div>\n\n    </div>);\n}\n\n// export default AlertBasic;\nexport default AlertBuyProduct2;","export default __webpack_public_path__ + \"static/media/event1.bddd299b.png\";","import React, { useEffect, useState } from 'react';\nimport AlertBasic from '../components/AlertBasic';\nimport EventEmitter, { Event } from '../core/EventEmitter';\n// import AlertNoticeInapp from '../components/AlertNoticeInapp';\nimport AlertBuyProduct from '../components/AlertBuyProduct';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n// import { sentenseRepeatIdxState } from '../core/store';\nimport data from '../core/data';\nimport AlertBuyProduct2 from '../components/AlertBuyProduct2';\n\nlet openParam: any = null;\nconst Alert = () => {\n    const [moduleName, setModuleName] = useState('');\n    // const setIsBodyNoScroll = useSetRecoilState(isBodyNoScrollState);\n\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_ALERT, (options: any) => {\n            openParam = options;\n            setModuleName(options.moduleName);\n            data.bodyOverflowHidden(true);\n            // setIsBodyNoScroll(true);\n            if (options.moduleName === 'AlertNoticeInapp') {\n                // setUpdatePagePlaylist(updatePagePlaylist + 1);\n                // setSentenseRepeatIdxState(9999);\n                // data.setCurrPlayBtnState('stop');\n            }\n\n        });\n        EventEmitter.subscribe(Event.HIDE_ALERT, (options: any) => {\n            setModuleName('');\n            data.bodyOverflowHidden(false);\n            // setIsBodyNoScroll(false);\n        });\n    }, [])\n\n    const AlertModule = (() => {\n\n        switch (moduleName) {\n            case 'AlertBasic':\n                return <AlertBasic key=\"AlertBasic\" />;\n                break;\n\n            case 'AlertBuyProduct':\n                return <AlertBuyProduct key=\"AlertBuyProduct\" openParam={openParam} />;\n                break;\n\n            case 'AlertBuyProduct2':\n                return <AlertBuyProduct2 key=\"AlertBuyProduct2\" openParam={openParam} />;\n                break;\n        }\n    })();\n    return (\n        <>\n            {\n                moduleName !== '' && <div className=\"view-Alert\">\n                    {AlertModule}\n                </div>\n            }\n        </>\n    );\n};\n\nexport default Alert;\n\n\n","import classnames from 'classnames';\nimport { padStart as _pad } from 'lodash';\nimport React from 'react';\nimport data from '../core/data';\n// import core from '../core/Core';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\n// import fbase from '../fb/fbase';\n\nconst WCourseItem = ({\n    viewType,\n    itemJSON,\n    courseID,\n    idx,\n}: {\n    viewType: string,\n    itemJSON: any,\n    courseID: string,\n    idx: number,\n}) => {\n    // console.log('WCourseItem',viewType,itemJSON,idx);\n    if (viewType === 'movie') {\n        console.log('WCourseItem', itemJSON.tit);\n    }\n    // const isAvailableBook = fbase.isAvailableBook(courseID); // needPurchase, available, needLogin\n    const isSubscriptionInfo = fbase.isSubscriptionInfo();\n    const getSubscriptionState = data.getSubscriptionState(isSubscriptionInfo);\n    console.log('isSubscriptionInfo', isSubscriptionInfo)\n    return (\n        <>\n            {\n                viewType === 'movie'\n                    ?\n                    <CItemMovie isSubscriptionInfo={getSubscriptionState} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItemMovie' + idx} />\n                    :\n                    <CItem isSubscriptionInfo={getSubscriptionState} courseID={courseID} itemJSON={itemJSON} idx={idx} key={'CItem' + idx} />\n            }\n            {/* <CItem itemJSON={itemJSON} idx={idx} key={idx} /> */}\n        </>\n    );\n};\n\nconst CItemMovie = (\n    {\n        itemJSON,\n        courseID,\n        isSubscriptionInfo,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isSubscriptionInfo: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem movie\" onClick={() => {\n            // alert(itemJSON.query);\n\n            // if (!isTrial && isSubscriptionInfo !== 'on') {\n            //     // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n            //     // if (process.env.NODE_ENV === 'development') {\n            //     //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n            //     //         moduleName: \"AlertBuyProduct\",\n            //     //         courseID: courseID,\n            //     //     });\n            //     // }\n\n            //     // return;\n\n            //     if (isSubscriptionInfo === 'needLogin') {\n            //         data.showToastMessage({\n            //             message: \"로그인이 필요한 서비스입니다.\",\n            //             mtime: 3000\n            //         });\n            //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n            //             from: \"buyProduct\",\n            //             courseID: courseID,\n            //         });\n            //     } else {\n            //         // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n            //         EventEmitter.dispatch(Event.SHOW_ALERT, {\n            //             moduleName: \"AlertBuyProduct2\",\n            //             courseID: courseID,\n            //         });\n            //     }\n            //     return;\n            // }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {/* {isAvailableBook} */}\n                {/* {isTrial && isSubscriptionInfo !== 'on' && <div className=\"mark-trial\">\n                    무료보기\n                </div>} */}\n                <img className={classnames([\"img\", { trial: isTrial }])} src={`/resource/courses/${courseID}/thumb/a${idxPad}.jpg`}></img>\n                <div className=\"sceneno\">\n                    <div className=\"t1\">DAY</div>\n                    <div className=\"t2\">{idxPad}</div>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">{Tits}</div>\n\n        </li>\n    );\n}\nconst CItem = (\n    {\n        itemJSON,\n        courseID,\n        isSubscriptionInfo,\n        idx\n    }: {\n        itemJSON: any,\n        courseID: string,\n        isSubscriptionInfo: string,\n        idx: number\n    }) => {\n    const Tits = itemJSON.tit.map((str: string, i: number) => {\n        return <div key={i} className=\"sentense\">{i + 1}. {str}</div>\n    })\n    const idxPad = _pad(String(idx + 1), 3, '0');\n    const isTrial = itemJSON.isTrial === 'true';\n\n    return (\n        <li className=\"CourseItem normal\" onClick={() => {\n            // alert(itemJSON.query);\n\n            // if (!isTrial && isSubscriptionInfo !== 'on') {\n            //     // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n            //     // if (process.env.NODE_ENV === 'development') {\n            //     //     EventEmitter.dispatch(Event.SHOW_ALERT, {\n            //     //         moduleName: \"AlertBuyProduct\",\n            //     //         courseID: courseID,\n            //     //     });\n            //     // }\n\n            //     // return;\n\n            //     if (isSubscriptionInfo === 'needLogin') {\n            //         data.showToastMessage({\n            //             message: \"로그인이 필요한 서비스입니다.\",\n            //             mtime: 3000\n            //         });\n            //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n            //             from: \"buyProduct\",\n            //             courseID: courseID,\n            //         });\n            //     } else {\n            //         // alert('구매내역이 존재하지 않습니다. 구매 후 이용 가능합니다.')\n            //         EventEmitter.dispatch(Event.SHOW_ALERT, {\n            //             moduleName: \"AlertBuyProduct2\",\n            //             courseID: courseID,\n            //         });\n            //     }\n            //     return;\n            // }\n            // core.setParameter(itemJSON.query);\n            data.gotoPage('CoursePlay', itemJSON.query)\n        }} key={idx}>\n\n            <div className={classnames([\"group-img\", { trial: isTrial }])}>\n                {/* {isTrial && isSubscriptionInfo !== 'on' && <div className=\"mark-trial\">\n                    무료보기\n                </div>} */}\n\n                <div className=\"sceneno\">\n                    <span className=\"t1\">DAY</span>\n                    <span className=\"t2\">{idxPad}</span>\n                </div>\n            </div>\n\n            <div className=\"sentenses\">\n                <div className=\"sentense\">[{itemJSON.tit[0]}]</div>\n                <div className=\"sentense\">{itemJSON.tit[1]}</div>\n            </div>\n\n        </li>\n    );\n}\nexport default WCourseItem;","import classnames from 'classnames';\nimport React, { useState } from 'react';\nimport WCourseItem from './WCourseItem';\nconst WCourse = ({\n    json,\n    parentName,\n}: {\n    json: any\n    parentName: string,\n}) => {\n    let viewType = 'normal';\n    const courseID = json.courseID;\n    const topics = json.item.map((item2: any, i2: number) => {\n        if (json.itemViewType) {\n            viewType = json.itemViewType;\n        }\n        return <WCourseItem\n            viewType={viewType}\n            itemJSON={item2}\n            courseID={courseID}\n            idx={i2}\n            key={courseID + i2}\n        />\n\n    })\n    const isShowTitle = parentName === 'CourseMain' ? false : true;\n    const [isHide, setIsHide] = useState(parentName === 'CourseMain' ? false : true);\n    return (\n        <div className=\"Course\">\n            {\n                //\n                isShowTitle && <h3 className=\"title\" onClick={() => {\n                    setIsHide(!isHide);\n                }}>\n                    <Tags str={json.tags} key={courseID} />\n                    {\n                        isHide ? <i className=\"fas fa-plus i-icon\"></i> : <i className=\"fas fa-minus i-icon\"></i>\n                    }\n                    {json.title}\n                    <span className=\"badge\">{json.item.length}</span>\n                </h3>\n            }\n            <ul className={classnames(['slideup', { \"hide\": isHide }])}>\n                {!isHide && topics}\n            </ul>\n\n        </div>\n    );\n};\n\n\nconst Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default WCourse;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useState } from 'react';\nimport data from '../core/data';\nimport fbase from '../fb/fbase';\nimport {\n    BrowserView, isBrowser,\n    MobileView\n} from \"react-device-detect\";\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { lastURLState } from '../core/store';\n\nlet uniqCnt = 0;\nconst PageHome = () => {\n    const [lastURL, setlastURL] = useRecoilState(lastURLState);\n    // data.topicMainJSON = topicMainJSON;\n    const course1 = data.mainJSON.map((item1: any, i: number) => {\n        if (item1.isHomeList === \"true\") {\n            return <CourseItem json={item1} key={uniqCnt++} />\n        }\n\n    });\n\n    EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n        // if (fbase.userMoreInfo.historyClips) {\n        //     const arr = fbase.userMoreInfo.historyClips.slice(0);\n        //     setListeningTpid(arr.reverse()[0]);\n        // }\n        setlastURL(fbase.userMoreInfo.lastURL);\n    });\n    const [inputEmail, setInputEmail] = useState('');\n    const onChange = (event: any) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setInputEmail(value);\n        }\n    }\n    const subscriptionInfo = fbase.isSubscriptionInfo();\n    const isOwner = data.getSubscriptionState(fbase.isSubscriptionInfo()) === 'on';\n    // console.log(\"subscriptionInfosubscriptionInfo\", subscriptionInfo, isOwner)\n    return (\n        <div className=\"PageHome\">\n            <div className=\"notice\">\n                <BrowserView>\n                    <div className=\"tit-main\">\n                        <div className=\"pc-br\">영어 대본으로 공부하는 당신을 위한 모든 기능 </div>\n                        <div className=\"pc-br\"><span className=\"em\">❝카셋 플레이어❞</span></div>\n                    </div>\n                    <div className=\"tit-sub\">\n                        <div className=\"pc-br\">매 주 업데이트 되는 짧고 흥미로운 생활영어 모음</div>\n                        {/* <div className=\"pc-br\">쉐도잉에 최적화된 표현을 선별한 반복 학습 플레이어를 경험하세요.</div> */}\n                    </div>\n                </BrowserView>\n                <MobileView>\n                    <div className=\"tit-main\">\n                        영어대본으로 공부하는 <br></br>당신을 위한 모든 기능 <br></br><span className=\"em\">❝카셋 플레이어❞</span>\n                    </div>\n                    <div className=\"tit-sub\">\n                        매주 업데이트 되는 짧고 흥미로운<br></br> 생활영어를 카셋 플레이어로 반복, 받아쓰기, 속도 적응 훈련하세요.\n                    </div>\n                </MobileView>\n\n                {\n                    subscriptionInfo === 'needLogin' && <div className=\"group-user-email\">\n                        <div className=\"free-message\"><i className=\"far fa-comment-dots\"></i><div className=\"pill pill-event\">EVENT</div>일주일간 무료로 이용해 보세요.</div>\n                        <div>\n                            <input className=\"form-styling\"\n                                placeholder=\"이메일 주소 입력\"\n                                autoCapitalize=\"false\"\n                                name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                        </div>\n                        <button onClick={() => {\n                            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                                from: \"joinFromHome\",\n                                email: inputEmail,\n                            });\n                        }} className=\"btn btn-start-free\">간편 가입 <i className=\"fas fa-long-arrow-alt-right\"></i></button>\n                        <div className=\"have-id\">이미 아이디가 있는경우 <button onClick={() => {\n                            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                                from: \"loginFromHome\",\n                                email: inputEmail,\n                            });\n                        }} className=\"btn btn-login\">로그인</button></div>\n                    </div>\n                }\n                {\n                    // 구매정보가 있는데 구매필요한 경우(!isOwnew - 지난경우)\n                    // (subscriptionInfo && !isOwner) && <div>\n                    //     <button onClick={() => {\n\n                    //     }} className=\"btn btn-start-free\">프리패스 구매 <i className=\"fas fa-long-arrow-alt-right\"></i></button>\n                    // </div>\n                }\n\n\n            </div>\n            {\n                lastURL && <div className=\"last-listening\">\n                    <button onClick={() => {\n                        data.gotoPage('CoursePlay', lastURL);\n                    }} className=\"btn btn-listening\">이어서 학습하기<i className=\"fas fa-caret-square-right\"></i></button>\n                </div>\n            }\n\n            <ul className=\"course-list\">\n                {course1}\n            </ul>\n        </div>\n    );\n};\n\nconst CourseItem = ({\n    json\n}: {\n    json: any\n}) => {\n    const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n    // const isOwner: boolean = true;\n\n    return (\n        <>\n\n            <li className=\"course-item\" onClick={() => {\n                data.gotoPage('CourseMain', json.query);\n            }}>\n                <div className={classnames([\"cover-img\", css`\n                background-image: url(\"${data.getRootPath()}resource/courses/${json.courseID}/cover.png\");\n            `])}>\n                    <div className={classnames([\"tag-level\", `level${json.level}`])}>\n                        <div className=\"title\">LEVEL</div>\n                        <div className=\"guage g1\"></div>\n                        <div className=\"guage g2\"></div>\n                        <div className=\"guage g3\"></div>\n                        <div className=\"guage g4\"></div>\n                    </div>\n                    {/* <div>Lv.1</div> */}\n                    <div className={classnames([\"tag-iscomplete\", { ing: json.isMakeComplete === \"false\" }])}>\n                        {json.isMakeComplete === \"false\" ? \"연재중\" : \"연재완료\"}\n                    </div>\n                </div>\n                <div className=\"info\">\n                    <h3>{json.title}</h3>\n                    <div className=\"info-sub\">\n                        <div className=\"course-num\">{json.item.length}일 코스</div>\n                        <Tags str={json.tags} key={json.courseID} />\n                        {/* <div className=\"btns-func\">\n                            {data.numberWithCommas(parseInt(json.prices[0]))}원\n                            {\n                                isOwner && <span>구매완료</span>\n                            }\n                        </div> */}\n\n                    </div>\n\n\n                </div>\n            </li>\n        </>\n\n    )\n}\n\nexport const Tags = ({\n    str\n}: {\n    str: string\n}) => {\n    const arr = str.split(',');\n    let Tag = arr.map((item: string, i: number) => {\n        return <span className=\"tag\" key={i}>#{item}</span>\n    });\n    if (str === '') {\n        Tag = [];\n    }\n    return (\n        <div className=\"Tags\">\n            {Tag}\n        </div>\n    );\n}\n\nexport default PageHome;","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport WCourse from '../components/WCourse';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { printCourseIDState } from '../core/store';\nimport fbase from '../fb/fbase';\nimport { Tags } from './PageHome';\n\nconst selfName = \"CourseMain\";\nconst CourseMain = ({\n    location\n}: {\n    location: any\n}) => {\n    useEffect(() => {\n        data.gotoTop();\n    }, [])\n    // const query: any = qs.parse(location.search, {\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [render, setRender] = useState(0);\n    const d = location.search.substring(3);\n    const decryptQuery = data.decryptURL(d);\n    let cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n\n    // 캠패인 경우 // /scm?campaign=캠패인아이디&utm_source=shorturl&utm_medium=event&utm_campaign=nv_pl_morden_t1\n    // 캠패인 경우 // https://casete.in/scm?campaign=nv_store_modern&utm_source=myblog&utm_medium=post&utm_campaign=storelink\n    if (window.location.href.includes('/scm')) {\n        const campaignid = qs.parse(data.getOnlyquerystring()).campaign as string;\n        if (campaignid) {\n            const info: any = data.getCampaignInfo(campaignid);\n            if (info) {\n                cid = info.cid;\n            }\n        }\n    }\n\n    EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n        setRender(Math.random());\n    });\n    ZZAudioProgram.pause();\n    return (\n        <div>\n            {\n                cid\n                    ?\n                    <CourseMainList cid={cid} />\n                    :\n                    <div>\n                        없는 경로 입니다.<br></br>\n                        <button onClick={() => {\n                            data.gotoPage('home', '')\n                        }}>메인페이지로 돌아가기</button>\n                    </div>\n            }\n        </div>\n    );\n};\n\nconst CourseMainList = ({\n    cid\n}: {\n    cid: string\n}) => {\n    const setprintCourseID = useSetRecoilState(printCourseIDState);\n    const mainJSONFilter = data.mainJSON.filter((item: any, i: number) => {\n        return item.courseID === cid;\n    })\n    const courseItemListJSON = mainJSONFilter[0];\n    const getSubscriptionState = data.getSubscriptionState(fbase.isSubscriptionInfo());\n    const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n\n    return (\n        <div className=\"CourseMainList\">\n            <div className={css`height:20px;`}></div>\n            <div className=\"contents\">\n                <div className=\"course-item\">\n                    <div className={classnames([\"cover-img\", css`\n                        background-image: url(\"${data.getRootPath()}resource/courses/${courseItemListJSON.courseID}/cover.png\");\n                    `])}>\n                    </div>\n                    <div className=\"info\">\n                        <h3>{courseItemListJSON.title}</h3>\n                        <div className=\"info-sub\">\n                            <div>{courseItemListJSON.item.length}개 코스</div>\n                            <div className=\"tags\">\n                                <Tags str={courseItemListJSON.tags} key={courseItemListJSON.courseID} />\n                            </div>\n                            {/* {\n                                isOwner\n                                    ?\n                                    <div>구매완료</div>\n                                    :\n                                    <button className=\"btn btn-border\">구매 1,300원</button>\n                            } */}\n                        </div>\n\n\n                    </div>\n                </div>\n                <div className=\"list-header\">\n                    <div className=\"list-info\">{courseItemListJSON.item.length}개 코스</div>\n                    <div className=\"funcs\">\n                        <button className=\"btn\" onClick={() => {\n                            // alert(courseItemListJSON.courseID)\n                            // setprintCourseID(courseItemListJSON.courseID);\n                            // data.gotoPage('CoursePrint',)\n                            window.location.href = `#/CoursePrint?id=${courseItemListJSON.openID}`;\n                        }}><i className=\"fas fa-table\"></i> 엑셀 & 프린트</button>\n                    </div>\n                </div>\n                {cid && <WCourse json={courseItemListJSON} parentName={selfName} />}\n            </div>\n        </div>\n    );\n}\n\nexport default CourseMain;","import React from 'react';\n\nconst LoadingDom = () => {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"lds-ellipsis\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingDom;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\nlet sentense = \"\";\nlet sentenseSplit: string[] = [];\nlet correctArr: string[] = [];// 답안지\nlet shuffleWords: TWord[] = [];\n\nconst MDictation = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    if (sentense !== sentenseEn) {\n        sentense = sentenseEn;\n        sentenseSplit = sentense.split(' ');\n        correctArr = sentenseSplit.slice(0);// 답안지\n        shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n            return {\n                word: item,\n                oriIdx: i,\n            }\n        }));\n    }\n\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const words = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('Wrong~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('Complete!!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    return (\n        <div className=\"MDictation\">\n            <h2>받아쓰기훈련</h2>\n            {/* <div>\n                {sentense}\n            </div> */}\n\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            <div className=\"sentenseKo\">\n                {sentenseKo}\n            </div>\n            <div className=\"words\">\n                {!isComplete && words}\n            </div>\n            <div className=\"ditaction-func\">\n                <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>Hint</button>\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>Reset</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"message-box\">\n                    <div>\n                        <div>{message}</div>\n                        {message.substr(0, 8) === 'Complete' && <div className=\"lets-shadowing\">Let's shadowing!!</div>}\n                    </div>\n\n                </div>\n            </div>}\n        </div>\n    );\n};\n\nexport default MDictation","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\n// import appBridge from './core/AppBridge';\nimport data from '../core/data';\n// import lang from \"./core/i18n\";\nimport { isShowShadowingState } from '../core/store';\nimport Equalizer from './Equalizer';\nimport MDictation from './MDictation';\n\nconst selfName = 'PageShadowing';\nlet temprepeatMode: any;\nconst PageShadowing = () => {\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    useEffect(() => {\n\n        ZZAudioProgram.play({\n            idx: data.pageShadowingParam.sentenseIdx,\n            totalIdx: data.pageShadowingParam.totalIdx,\n            src: data.pageShadowingParam.audioSrc,\n            repeat: 9999,\n            repeatCnt: 9999,\n            allplay: false,\n        });\n\n        // temprepeatMode = appBridge.settingInfo.repeatMode;\n        // appBridge.settingInfo.repeatMode = '1';\n        // data.setCurrPlayBtnState('play');\n        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n\n        // 아이폰에서 푸터가 안나타나서 강제로 스크롤한번\n        (window as any).scrollTo(0, 10);\n        setTimeout(() => {\n            (window as any).scrollTo(0, 0);\n        }, 1000)\n\n        return () => {\n            // data.setCurrPlayBtnState('stop');\n        }\n    }, []);\n    return (\n        <div className=\"PageShadowing\">\n            {/* <PageHeader parentSelf={selfName} /> */}\n            {/* <h2>Shadowing & Dictation</h2> */}\n            <button onClick={() => {\n                ZZAudioProgram.pause();\n                setIsShowShadowing(false);\n            }} className=\"btn btn-close\">\n                <i className=\"fas fa-times\"></i>\n            </button>\n            <MDictation\n                sentenseEn={data.pageShadowingParam.sentenseEn}\n                sentenseKo={data.pageShadowingParam.sentenseKo}\n            />\n            <ControlBtns />\n        </div>\n    );\n};\n\nconst ControlBtns = () => {\n    const [isPlay, setIsPlay] = useState(true);\n    const [interval, setInterval] = useState(0);\n    const [speed, setSpeed] = useState(1);\n    ZZAudioProgram.livePlayInfo.interval = interval;\n    ZZAudioProgram.livePlayInfo.speed = speed;\n    // data.playerSetting.interval = interval;\n    // data.playerSetting.speed = speed;\n    const isCheck = false;\n    // const [isCheck, setIsCheck] = useState((() => {\n    //     return appBridge.settingInfo.doneSentense.includes(`${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`);\n    // })());\n\n    const checkClick = (tf: boolean) => {\n        // setIsCheck(tf);\n\n        // const makeKey = `${data.pageShadowingParam.topicID}_${data.pageShadowingParam.sentenseIdx}`;\n\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     data.pageShadowingParam.sentenseEn\n        // );\n\n    }\n    return (\n        <div className={`func-setting`}>\n            <div className=\"row\">\n                <div className=\"col1\">속도</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 1 }])}\n                        onClick={() => {\n                            setSpeed(1);\n                        }}>x1</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.9 }])}\n                        onClick={() => {\n                            setSpeed(0.9);\n                        }}>x0.9</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.8 }])}\n                        onClick={() => {\n                            setSpeed(0.8);\n                        }}>x0.8</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: speed === 0.7 }])}\n                        onClick={() => {\n                            setSpeed(0.7);\n                        }}>x0.7</button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col1\">간격</div>\n                <div className=\"col2\">\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 0 }])}\n                        onClick={() => {\n                            setInterval(0);\n                        }}>0s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1 }])}\n                        onClick={() => {\n                            setInterval(1);\n                        }}>1s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 1.5 }])}\n                        onClick={() => {\n                            setInterval(1.5);\n                        }}>1.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2 }])}\n                        onClick={() => {\n                            setInterval(2);\n                        }}>2s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 2.5 }])}\n                        onClick={() => {\n                            setInterval(2.5);\n                        }}>2.5s</button>\n                    <button\n                        className={classnames([\"btn btn-blank btn-fc\",\n                            { active: interval === 9999 }])}\n                        onClick={() => {\n                            setInterval(9999);\n                        }}>문장길이</button>\n                </div>\n            </div>\n\n\n            <div className=\"footer\">\n                {\n                    isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // data.setCurrPlayBtnState('stop', 'a1');\n                        // appBridge.settingInfo.repeatMode = temprepeatMode;\n                        setIsPlay(false);\n                        ZZAudioProgram.pause();\n                    }}><Equalizer /><span className=\"txt\">Stop</span></button>\n                }\n                {\n                    !isPlay && <button className=\"btn btn-play\" onClick={() => {\n                        // temprepeatMode = appBridge.settingInfo.repeatMode;\n                        // appBridge.settingInfo.repeatMode = '1';\n                        // data.setCurrPlayBtnState('play');\n                        // data.audioPlayPause(data.pageShadowingParam.sentenseIdx);\n                        setIsPlay(true);\n                        ZZAudioProgram.play({\n                            idx: data.pageShadowingParam.sentenseIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // totalIdx: totalIdx, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            // src: audioSrc, // SD훈련으로 넘어올때 것 그대로 머지해서 사용 \n                            repeat: 9999,\n                            repeatCnt: 9999,\n                            allplay: false,\n                        });\n\n                    }}><i className=\"fas fa-retweet\"></i><span className=\"txt\">Play</span></button>\n                }\n\n                {/* <button className=\"btn btn-bookmark\">\n                    {isCheck\n                        ?\n                        <i className=\"fas fa-bookmark checkbox check\" onClick={() => {\n                            checkClick(false);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                        :\n                        <i className=\"far fa-bookmark checkbox\" onClick={() => {\n                            checkClick(true);\n                        }}><span className=\"i-label\">문장저장</span></i>\n                    }\n                </button> */}\n            </div >\n\n        </div >\n    );\n}\n\nexport default PageShadowing;","import { padStart as _pad } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { setSceneIdxState, isYTModuleState, ytbSentenseHideState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\n\n// let courseIdx = 0;\n// const info = {\n//     title: \"Lv3 미드 프렌즈 1편\",\n//     totalday: \"\",\n//      sentenseRepeat: 10,\n// allBlurCnt:8,// 다가림 \n// koBlurCnt:6,// 영어보이고 한글가림 \n// }\n// const info = {\n//     title: \"Lv3 영화 인턴\",\n//     totalday: \"51\",\n//     sentenseRepeat: 10,\n// allBlurCnt:8,// 다가림 \n// koBlurCnt:6,// 영어보이고 한글가림 \n// }\n// const info = {\n//     title: \"Lv2 상황별 생활영어\",\n//     totalday: \"20\",\n//     sentenseRepeat: 5,\n//     allBlurCnt: 4,// 다가림 \n//     koBlurCnt: 3,// 영어보이고 한글가림 \n// }\nconst info = {\n    title: \"Lv1 왕초보 생활영어\",\n    totalday: \"20\",\n    sentenseRepeat: 5,\n    allBlurCnt: 4,// 다가림 \n    koBlurCnt: 3,// 영어보이고 한글가림 \n}\n// const info = {\n//     title: \"Lv3 미드 모던패밀리 S1-1\",\n//     totalday: \"\",\n//     sentenseRepeat: 10,\n//     allBlurCnt: 8,// 다가림 \n//     koBlurCnt: 6,// 영어보이고 한글가림 \n// }\n// const sentenseRepeat: number = 10;// 문장 반복횟수 즉 듣기+말하기 이므로 결국 (5*2)10번 재생\nlet courseToMainJSON: any = {};\nlet _cid = '';\nlet _tpid = '';\nlet _tpidx = 0;\nconst YTModule = ({\n    cid,\n    tpid,\n    tpidx,\n}: {\n    cid: string,\n    tpid: string,\n    tpidx: number,\n}) => {\n    const setYtbSentenseHide = useSetRecoilState(ytbSentenseHideState);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const [isYTModule, setIsYTModule] = useRecoilState(isYTModuleState);\n    const [update, setUpdate] = useState(0);\n    courseToMainJSON = data.courseToMainJSON(cid);\n    _cid = cid;\n    _tpid = tpid;\n    _tpidx = tpidx;\n    console.log('cid, tpid', cid, tpid);\n    useEffect(() => {\n\n        setIsYTModule(true);\n        // courseIdx = data.courseToMainIdx(cid, tpid);\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n            let cntForRepeat = ZZAudioProgram.livePlayInfo.repeatCnt;\n            if (!cntForRepeat) cntForRepeat = info.sentenseRepeat * 2;\n            const turnCnt = Math.ceil(cntForRepeat / 2);\n\n            if (turnCnt > info.allBlurCnt) {\n                setYtbSentenseHide('00');\n\n            } else if (turnCnt > info.koBlurCnt) {\n                setYtbSentenseHide('e0');\n\n            } else {\n                setYtbSentenseHide('ek');\n\n            }\n            const cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n            console.log('iiinfo :: ', cnt, cnt! % 2, ZZAudioProgram.livePlayInfo.idx, ZZAudioProgram.livePlayInfo.totalIdx! - 1);\n            ZZAudioProgram.setVolume(1);\n            if (cnt! % 2 === 1) {\n                ZZAudioProgram.setVolume(0.15);\n            }\n            // 마지막인 경우\n            if (cnt === 0 && ZZAudioProgram.livePlayInfo.idx === ZZAudioProgram.livePlayInfo.totalIdx! - 1) {\n                ZZAudioProgram.pause();\n                setSceneIdx(3);\n            }\n\n            setUpdate(Math.random());\n        })\n    }, [])\n    const ls = ZZAudioProgram.livePlayInfo.repeatCnt! % 2 === 1 ? 'speak' : 'listen';\n    return (\n        <div className=\"YTModule\">\n\n            <SceneIntro />\n            <SceneOuttro />\n            <SceneSentense />\n            <Scene0 />\n\n            {\n                sceneIdx === 2 &&\n                <>\n                    <div className=\"yt-header\">\n                        <div className=\"yt-header-in\">\n                            <span className=\"logo\">카셋영어 회화</span>\n                            <span className=\"divide\">/</span>\n                            {info.title}\n                            <span className=\"divide\">/</span>\n                            <span className=\"day\">DAY{_pad(String(_tpidx + 1), 3, '0')}</span>\n                        </div>\n                    </div>\n\n\n                    <div className=\"yt-footer\">\n                        <div className=\"repeat-cnt\">{(() => {\n                            let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n                            if (!cnt) cnt = info.sentenseRepeat * 2;\n                            return Math.ceil(cnt / 2);\n                        })()}<span className=\"repeat-cnt-tot\">/{info.sentenseRepeat}</span></div>\n                        <div className=\"pill-listen-speak\">\n                            <div className=\"pill-item\">듣기</div>\n                            <div className=\"pill-item\">말하기</div>\n                            <div className={`pill-active ${ls}`}>{ls === 'speak' ? '말하기' : '듣기'}</div>\n                        </div>\n\n                    </div>\n                </>\n            }\n\n\n        </div>\n    );\n};\n\nconst Scene0 = () => {\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const pauseAndNextstep = () => {\n        setSceneIdx(sceneIdx + 1);\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 0 && <div className=\"scene scene-0\">\n                <div className=\"scene-in scene-0-in\">\n                    <span className=\"font1\">명조폰트</span>\n                    <span className=\"font2\">고딕폰트</span>\n                    <button onClick={() => {\n                        setTimeout(() => {\n                            setSceneIdx(1);\n                            // ZZAudioProgram.playEffect('mp3-effect1');\n\n                        }, 3000);\n\n                    }}>시작</button>\n                </div>\n            </div>}\n        </>\n\n    )\n}\nconst SceneIntro = () => {\n    // debugger;\n    // courseIdx = data.courseToMainIdx(_cid, _tpid);\n\n    const [init, setInit] = useState(false);\n    const [innerScene, setInnerScene] = useState(0);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 1) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n\n            setTimeout(() => {\n                ZZAudioProgram.playEffect('effect_short1', 0.7);\n                // 이너씬 1로 전환\n                setInnerScene(1);\n            }, 3000);\n            setTimeout(() => {\n\n                // 메인씬 2로 전환\n                setSceneIdx(2);\n            }, 8000);\n        }\n\n    }\n    // console.log('ZZAudioProgram.livePlayInfo', ZZAudioProgram.livePlayInfo)\n    return (\n        <>\n            {sceneIdx === 1 && <div className=\"scene scene-intro\">\n                <div className=\"scene-in scene-intro-in\">\n                    {\n                        innerScene === 0 && <div className=\"innerscene0\">\n                            <div className=\"section-main\">\n                                {/* <div className=\"txt0\">카셋 영어 회화</div> */}\n                                <div className=\"txt1\">{info.title}</div>\n                                <div className=\"txt2\"><span className=\"day\">\n                                    {_pad(String(_tpidx + 1), 3, '0')}\n                                </span><div className=\"divide\"></div><div className=\"tot\">{info.totalday}</div></div>\n                            </div>\n                            <div className=\"section-footer\">\n                                <div>카셋영어 회화</div>\n                            </div>\n                        </div>\n                    }\n                    {\n                        innerScene === 1 && <div className=\"innerscene1\">\n                            <ul>\n                                <li><i className=\"fas fa-check\"></i>총 {courseToMainJSON.item[_tpidx].tit.length}개의 문장</li>\n                                <li><i className=\"fas fa-check\"></i>한 문장당 <div className=\"pill-listen-speak\">\n                                    <div className=\"pill-item\">듣기</div>\n                                    <div className=\"pill-item\">말하기</div>\n                                </div> {info.sentenseRepeat}세트로 구성</li>\n                            </ul>\n                            <div className=\"txt0\">{info.title} <span className=\"pb\"><i className=\"far fa-file-audio\"></i>따라하기 프로그램</span>은 <br></br><span className=\"pb\">카셋영어 홈페이지</span>를 방문해 주세요.</div>\n                            {/* * 총 3개의 문장\n                            * 1 문장당 [듣고/말하기] 5세트로 구성\n                            *\n                            * 영화 인턴 플레이어 북은 홈페이지를 방문해 주세요. */}\n                        </div>\n                    }\n\n                </div>\n            </div>}\n        </>\n    )\n}\n\nconst SceneSentense = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 2) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n\n            setInit(true);\n            setTimeout(() => {\n\n                // 시작\n                ZZAudioProgram.livePlayInfo.repeat = info.sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.repeatCnt = info.sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.interval = 1;\n\n                ZZAudioProgram.play({\n                    allplay: true,\n                    totalIdx: data.topicJSON.sentense.length,\n                    repeat: ZZAudioProgram.livePlayInfo.repeat,\n                    repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                })\n\n            }, 1000);\n        }\n\n\n    }\n    return (\n        <>\n            {sceneIdx === 2 && <div className=\"scene guide-frame\">\n                <div className=\"scene-in guide-frame-in\"></div>\n            </div>}\n        </>\n    )\n}\nconst SceneOuttro = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const [isEot, setIsEot] = useState(false);\n    if (sceneIdx === 3) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n            ZZAudioProgram.playEffect('effect_ending', 0.3);\n\n            setTimeout(() => {\n                data.sendTelelog('test casete hello');\n            }, 18000);\n\n            setTimeout(() => {\n                setIsEot(true);\n            }, 24000);\n\n            setTimeout(() => {\n                // 이너씬 1로 전환\n                alert('eot');\n            }, 25000);\n        }\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 3 && <div className=\"scene scene-outtro\">\n                <div className=\"scene-in scene-outtro-in\">\n                    <div>\n                        <div className=\"txt0\"><i className=\"fas fa-check\"></i>영상이 마음에 드셨다면 <span className=\"em\">좋아요,구독</span> 잊지 마세요!</div>\n                        {/* <div className=\"txt1\">채널을 운영하는 힘이 됩니다!</div> */}\n                        <div className=\"txt1\"><i className=\"fas fa-check\"></i>{info.title}<span className=\"em\"><i className=\"far fa-file-audio\"></i>따라하기 프로그램</span>은 <span className=\"pb\">카셋영어 홈페이지</span>방문!</div>\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default YTModule;","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isShowSpeedmateState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\nlet sentenseCnt = 0;\nlet speed = 0.7;\nconst isYTMode = false;\nconst cntSetObj: any = {\n    '0.7': 10,\n    '0.8': 10,\n    '0.9': 10,\n    '1.0': 60,\n    '1': 60,\n    '1.1': 10,\n}\nconst PageSpeedmate = () => {\n    const [isShowSpeedmate, setisShowSpeedmate] = useRecoilState(isShowSpeedmateState);\n    const [update, setUpdate] = useState(0);\n\n    const sentensePauseHandler = () => {\n\n        // let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n        sentenseCnt++;\n        if (isYTMode) {\n            if (sentenseCnt > 90) {\n                speed = 1.1;\n            } else if (sentenseCnt > 30) {\n                speed = 1;\n            } else if (sentenseCnt > 20) {\n                speed = 0.9;\n            } else if (sentenseCnt > 10) {\n                speed = 0.8;\n            }\n        }\n\n        ZZAudioProgram.livePlayInfo.speed = speed;\n        // console.log('ZZAudioProgramcnt', sentenseCnt, ZZAudioProgram.livePlayInfo.speed);\n\n        setUpdate(Math.random);\n\n    }\n    /// dddd-2\n    useEffect(() => {\n\n        ZZAudioProgram.play({\n            idx: data.pageShadowingParam.sentenseIdx,\n            totalIdx: data.pageShadowingParam.totalIdx,\n            src: data.pageShadowingParam.audioSrc,\n            speed: 0.7,\n            repeat: 9999,\n            repeatCnt: 9999,\n            allplay: false,\n        });\n        // alert(data.pageShadowingParam.audioSrc + data.pageShadowingParam.sentenseIdx);\n        // ZZAudioProgram.play({\n        //     idx: data.pageShadowingParam.sentenseIdx,\n        //     totalIdx: data.pageShadowingParam.totalIdx,\n        //     src: data.pageShadowingParam.audioSrc,\n        //     repeat: 9999,\n        //     repeatCnt: 9999,\n        //     allplay: false,\n        // });\n        sentenseCnt = 0;\n        speed = 0.7;\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, sentensePauseHandler);\n        return () => {\n            EventEmitter.remove(Event.SENTENSE_PAUSE, sentensePauseHandler);\n        }\n    }, [])\n    /// dddd-3\n    return (\n        <>\n            {\n                isShowSpeedmate && <div className=\"PageSpeedmate\">\n                    <button onClick={() => {\n                        ZZAudioProgram.pause();\n                        ZZAudioProgram.livePlayInfo.speed = 1;\n\n                        setisShowSpeedmate(false);\n                    }} className=\"btn btn-close\">\n                        <i className=\"fas fa-times\"></i>\n                    </button>\n                    <h2>쉐도잉 속도적응 훈련</h2>\n                    <div className=\"box-sentense\">\n                        <div className=\"box-sentense-in\">\n                            <div className=\"en\">{data.pageShadowingParam.sentenseEn}</div>\n                            <div className=\"ko\">{data.pageShadowingParam.sentenseKo}</div>\n                        </div>\n                        <div className=\"box-state\">\n                            <div className=\"dp-state\">속도 : x{speed}</div>\n                            <div className=\"dp-state\">총 반복 : {sentenseCnt + 1}</div>\n                        </div>\n\n                    </div>\n\n\n                    {isYTMode && <StepPill />}\n                    {!isYTMode && <>\n                        <div className=\"box-btn-speed\">\n                            <button className=\"btn btn-speed slow\" onClick={() => {\n                                speed = Number((speed - 0.1).toFixed(1));\n                                ZZAudioProgram.livePlayInfo.speed = speed;\n                                setUpdate(Math.random);\n                            }}>더 <br></br>느리게</button>\n                            <button className=\"btn btn-speed fast\" onClick={() => {\n                                speed = Number((speed + 0.1).toFixed(1));\n                                ZZAudioProgram.livePlayInfo.speed = speed;\n                                setUpdate(Math.random);\n                            }}>더 <br></br>빠르게</button>\n                        </div>\n                    </>}\n                </div>\n            }\n        </>\n    );\n};\n/// dddd-4\nconst getStateClass = (inSpeed: number, inSetSpeed: number) => {\n    if (inSpeed === inSetSpeed) {\n        return 'active';\n    } else if (inSpeed > inSetSpeed) {\n        return 'done';\n    }\n    return 'need';// done, active,\n}\nconst getStateCnt = (inSetSpeed: number) => {\n    if (speed < inSetSpeed) {\n        return cntSetObj[String(inSetSpeed)];\n    }\n    const cnt = sentenseCnt;\n    if (inSetSpeed === 0.7) {\n        if (cnt < 10) {\n            return 10 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 0.8) {\n        if (cnt < 20) {\n            return 20 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 0.9) {\n        if (cnt < 30) {\n            return 30 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 1.0) {\n        if (cnt < 90) {\n            return 90 - cnt;\n        } else {\n            return 'done';\n        }\n    } else if (inSetSpeed === 1.1) {\n        if (cnt < 100) {\n            return 100 - cnt;\n        } else {\n            return 'done';\n        }\n    }\n    return 'done';\n}\n/// dddd-5\nconst cntDisplay = (inStepSpeed: number) => {\n    const getState = getStateCnt(inStepSpeed);\n    if (getState === 'done') {\n        return '완료';\n    }\n    return getState + '/' + cntSetObj[String(inStepSpeed)] + '회 반복';\n}\nconst StepPill = () => {\n    console.log('renStepPill');\n    return (<div className=\"pill-scroll\">\n        <ul className=\"pills\">\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.7)])}>\n                <div>x0.7 배속</div>\n                <div>{cntDisplay(0.7)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.7)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.8)])}>\n                <div>x0.8 배속</div>\n                <div>{cntDisplay(0.8)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.8)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 0.9)])}>\n                <div>x0.9 배속</div>\n                <div>{cntDisplay(0.9)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 0.9)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 1.0)])}>\n                <div>x1 배속</div>\n                <div>{cntDisplay(1.0)}</div>\n            </li>\n            <li className={classnames([\"pill-arrow\", getStateClass(speed, 1.0)])}>\n                <i className=\"fas fa-arrow-right\"></i>\n            </li>\n            <li className={classnames([\"pill-item\", getStateClass(speed, 1.1)])}>\n                <div>x1.1 배속</div>\n                <div>{cntDisplay(1.1)}</div>\n            </li>\n        </ul>\n    </div>);\n}\n\nexport default PageSpeedmate;","import { padStart as _pad } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { setSceneIdxState, isYTModuleState, ytbSentenseHideState } from '../core/store';\nimport ZZAudioProgram from './ZZAudioProgram';\n\n// let courseIdx = 0;\nconst sentenseRepeat: number = 10;// 문장 반복횟수 즉 듣기+말하기 이므로 결국 (5*2)10번 재생\nlet courseToMainJSON: any = {};\nlet _cid = '';\nlet _tpid = '';\nlet _tpidx = 0;\nconst YTSpeedModule = ({\n    cid,\n    tpid,\n    tpidx,\n}: {\n    cid: string,\n    tpid: string,\n    tpidx: number,\n}) => {\n    const setYtbSentenseHide = useSetRecoilState(ytbSentenseHideState);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const [isYTModule, setIsYTModule] = useRecoilState(isYTModuleState);\n    const [update, setUpdate] = useState(0);\n    courseToMainJSON = data.courseToMainJSON(cid);\n    _cid = cid;\n    _tpid = tpid;\n    _tpidx = tpidx;\n    console.log('cid, tpid', cid, tpid);\n    useEffect(() => {\n\n        setIsYTModule(true);\n        // courseIdx = data.courseToMainIdx(cid, tpid);\n        EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n            let cntForRepeat = ZZAudioProgram.livePlayInfo.repeatCnt;\n            if (!cntForRepeat) cntForRepeat = sentenseRepeat * 2;\n            const turnCnt = Math.ceil(cntForRepeat / 2);\n\n            if (turnCnt > 8) {\n                setYtbSentenseHide('00');\n\n            } else if (turnCnt > 6) {\n                setYtbSentenseHide('e0');\n\n            } else {\n                setYtbSentenseHide('ek');\n\n            }\n            const cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n            console.log('iiinfo :: ', cnt, cnt! % 2, ZZAudioProgram.livePlayInfo.idx, ZZAudioProgram.livePlayInfo.totalIdx! - 1);\n            ZZAudioProgram.setVolume(1);\n            if (cnt! % 2 === 1) {\n                ZZAudioProgram.setVolume(0.15);\n            }\n            // 마지막인 경우\n            if (cnt === 0 && ZZAudioProgram.livePlayInfo.idx === ZZAudioProgram.livePlayInfo.totalIdx! - 1) {\n                ZZAudioProgram.pause();\n                setSceneIdx(3);\n            }\n\n            setUpdate(Math.random());\n        })\n    }, [])\n    const ls = ZZAudioProgram.livePlayInfo.repeatCnt! % 2 === 1 ? 'speak' : 'listen';\n    return (\n        <div className=\"YTModule\">\n\n            <SceneIntro />\n            <SceneOuttro />\n            <SceneSentense />\n            <Scene0 />\n\n            {\n                sceneIdx === 2 &&\n                <>\n                    <div className=\"yt-header\">\n                        <div className=\"yt-header-in\">\n                            <span className=\"logo\">카셋 영어 회화</span>\n                            <span className=\"divide\">/</span>\n                            영화 인턴편\n                            <span className=\"divide\">/</span>\n                            <span className=\"day\">DAY{_pad(String(_tpidx + 1), 3, '0')}</span>\n                        </div>\n                    </div>\n\n\n                    <div className=\"yt-footer\">\n                        <div className=\"repeat-cnt\">{(() => {\n                            let cnt = ZZAudioProgram.livePlayInfo.repeatCnt;\n                            if (!cnt) cnt = sentenseRepeat * 2;\n                            return Math.ceil(cnt / 2);\n                        })()}<span className=\"repeat-cnt-tot\">/{sentenseRepeat}</span></div>\n                        <div className=\"pill-listen-speak\">\n                            <div className=\"pill-item\">듣기</div>\n                            <div className=\"pill-item\">말하기</div>\n                            <div className={`pill-active ${ls}`}>{ls === 'speak' ? '말하기' : '듣기'}</div>\n                        </div>\n\n                    </div>\n                </>\n            }\n\n\n        </div>\n    );\n};\n\nconst Scene0 = () => {\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    const pauseAndNextstep = () => {\n        setSceneIdx(sceneIdx + 1);\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 0 && <div className=\"scene scene-0\">\n                <div className=\"scene-in scene-0-in\">\n                    <span className=\"font1\">명조폰트</span>\n                    <span className=\"font2\">고딕폰트</span>\n                    <button onClick={() => {\n                        setTimeout(() => {\n                            setSceneIdx(1);\n                            // ZZAudioProgram.playEffect('mp3-effect1');\n\n                        }, 3000);\n                        data.sendTelelog('End ytb : ' + sceneIdx);\n                    }}>시작</button>\n                </div>\n            </div>}\n        </>\n\n    )\n}\nconst SceneIntro = () => {\n    // debugger;\n    // courseIdx = data.courseToMainIdx(_cid, _tpid);\n    console.log('courseIdx2', _cid, _tpid);\n    const [init, setInit] = useState(false);\n    const [innerScene, setInnerScene] = useState(0);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 1) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n\n            setTimeout(() => {\n                ZZAudioProgram.playEffect('effect_short1', 0.7);\n                // 이너씬 1로 전환\n                setInnerScene(1);\n            }, 3000);\n            setTimeout(() => {\n\n                // 메인씬 2로 전환\n                setSceneIdx(2);\n            }, 8000);\n        }\n\n    }\n    // console.log('ZZAudioProgram.livePlayInfo', ZZAudioProgram.livePlayInfo)\n    return (\n        <>\n            {sceneIdx === 1 && <div className=\"scene scene-intro\">\n                <div className=\"scene-in scene-intro-in\">\n                    {\n                        innerScene === 0 && <div className=\"innerscene0\">\n                            <div className=\"section-main\">\n                                {/* <div className=\"txt0\">카셋 영어 회화</div> */}\n                                <div className=\"txt1\">영화 인턴 편</div>\n                                <div className=\"txt2\"><span className=\"day\">\n                                    {_pad(String(_tpidx + 1), 3, '0')}\n                                </span><div className=\"divide\"></div><div className=\"tot\">51</div></div>\n                            </div>\n                            <div className=\"section-footer\">\n                                <div>카셋 영어 회화</div>\n                            </div>\n                        </div>\n                    }\n                    {\n                        innerScene === 1 && <div className=\"innerscene1\">\n                            <ul>\n                                <li><i className=\"fas fa-check\"></i>총 {courseToMainJSON.item[_tpidx].tit.length}개의 문장</li>\n                                <li><i className=\"fas fa-check\"></i>한 문장당 <div className=\"pill-listen-speak\">\n                                    <div className=\"pill-item\">듣기</div>\n                                    <div className=\"pill-item\">말하기</div>\n                                </div> {sentenseRepeat}세트로 구성</li>\n                            </ul>\n                            <div className=\"txt0\">영화 인턴 <span className=\"pb\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <br></br><span className=\"pb\">카셋 홈페이지</span>를 방문해 주세요.</div>\n                            {/* * 총 3개의 문장\n                            * 1 문장당 [듣고/말하기] 5세트로 구성\n                            *\n                            * 영화 인턴 플레이어 북은 홈페이지를 방문해 주세요. */}\n                        </div>\n                    }\n\n                </div>\n            </div>}\n        </>\n    )\n}\n\nconst SceneSentense = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 2) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n\n            setInit(true);\n            setTimeout(() => {\n\n                // 시작\n                ZZAudioProgram.livePlayInfo.repeat = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.repeatCnt = sentenseRepeat * 2;\n                ZZAudioProgram.livePlayInfo.interval = 1;\n\n                ZZAudioProgram.play({\n                    allplay: true,\n                    src: data.pageShadowingParam.audioSrc,\n                    totalIdx: data.topicJSON.sentense.length,\n                    repeat: ZZAudioProgram.livePlayInfo.repeat,\n                    repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                })\n\n            }, 1000);\n        }\n\n\n    }\n    return (\n        <>\n            {sceneIdx === 2 && <div className=\"scene guide-frame\">\n                <div className=\"scene-in guide-frame-in\"></div>\n            </div>}\n        </>\n    )\n}\nconst SceneOuttro = () => {\n    const [init, setInit] = useState(false);\n    const [sceneIdx, setSceneIdx] = useRecoilState(setSceneIdxState);\n    if (sceneIdx === 3) {\n        // 한번만 실행되도록 init추가\n        if (!init) {\n            setInit(true);\n            ZZAudioProgram.playEffect('effect_ending', 0.5);\n            setTimeout(() => {\n                // 이너씬 1로 전환\n                alert('eot')\n                data.sendTelelog('eot ytb : ' + sceneIdx);\n            }, 10000);\n        }\n\n    }\n\n    return (\n        <>\n            {sceneIdx === 3 && <div className=\"scene scene-outtro\">\n                <div className=\"scene-in scene-outtro-in\">\n                    <div>\n                        <div className=\"txt0\"><i className=\"fas fa-check\"></i>영상이 마음에 드셨다면 <span className=\"em\">좋아요,구독</span> 잊지 마세요!</div>\n                        {/* <div className=\"txt1\">채널을 운영하는 힘이 됩니다!</div> */}\n                        <div className=\"txt1\"><i className=\"fas fa-check\"></i>영화 인턴 <span className=\"em\"><i className=\"far fa-file-audio\"></i>쉐도잉 프로그램</span>은 <span className=\"pb\">카셋 홈페이지</span>방문!</div>\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default YTSpeedModule;","import animateScrollTo from 'animated-scroll-to';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport Equalizer from '../components/Equalizer';\nimport LoadingDom from '../components/LoadingDom';\nimport PageShadowing from '../components/PageShadowing';\nimport YTModule from '../components/YTModule';\nimport ZZAudioProgram from '../components/ZZAudioProgram';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { padStart as _pad } from 'lodash';\nimport {\n    btnRepeatModeUpdateState,\n    isCloseDetailPanelState,\n    ytbSentenseHideState,\n    isShowSpeedmateState,\n    isShowShadowingState, isYTModuleState, scriptModeState, isYTSpeedModuleState, lastURLState\n} from \"../core/store\";\nimport fbase from '../fb/fbase';\nimport PageSpeedmate from '../components/PageSpeedmate';\nimport YTSpeedModule from '../components/YTSpeedModule';\nimport qs from 'qs';\n\n// let scriptMode = 'ek';\nlet audioSrc: string = '';\nlet tpidx: number;\nlet isOwner: boolean = false;\nlet isTrial: boolean = false;\nconst CoursePlay = ({\n    location\n}: {\n    location: any\n}) => {\n    // const query:any = qs.parse(location.search, {\n    //     charset: 'iso-8859-1',\n    //     ignoreQueryPrefix: true // /about?details=true 같은 쿼리 주소의 '?'를 생략해주는 옵션입니다.\n    // });\n    const [isCheckedAuth, setisCheckedAuth] = useState(false);\n    const isShowShadowing = useRecoilValue(isShowShadowingState);\n    const isShowSpeedmate = useRecoilValue(isShowSpeedmateState);\n    const setlastURL = useSetRecoilState(lastURLState);\n\n    const datasetClipHistory = (intpid: string) => {\n        setisCheckedAuth(true);\n        const hash = (window as any).location.hash;\n        const lastURL = hash.split('?d=')[1];\n        fbase.userMoreInfo.lastURL = lastURL;\n        data.setClipHistory(intpid);\n        setlastURL(lastURL);\n\n    }\n\n    useEffect(() => {\n        // 이게먼저호출될지 userInfo가 먼저로드될지 몰라 아래처럼 구성\n        // data.setClipHistory(tpid);\n        // firebase데이터 로드해서 구성완료 후에 topic history Sync\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            console.log('checkkkk')\n            setisCheckedAuth(true);\n            datasetClipHistory(tpid);\n            // ZZAudioProgram.prePlay({\n            //     allplay: false,\n            //     totalIdx: 2\n            // })\n        });\n        if (fbase.userInfo !== 'loading') {\n            console.log('checkkkk2')\n            setisCheckedAuth(true);\n            datasetClipHistory(tpid);\n        }\n\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n\n            // 화면 프레싱중이 아닌경우\n            if (!data.isSentensePressing) {\n                // 스크롤링 중 아닌경우\n                data.isScrolling((result: boolean) => {\n                    // SentenseItem num-${idx}\n                    const $el = (document as any).querySelector(`.SentenseItem.num-${idx}`);\n                    const y = ($el) ? $el.offsetTop : null;\n                    if (y === null) return;\n\n                    // if (!result) core.scrollTo(y, '.view-Topic');\n                    // console.log('AudioProgram.livePl', result, ZZAudioProgram.livePlayInfo.allplay);\n                    if (!result && ZZAudioProgram.livePlayInfo.allplay) {\n                        animateScrollTo(y - 200, {\n                            elementToScroll: (document as any).querySelector('html')\n                        });\n                    }\n                })\n            }\n\n\n        });\n\n\n\n\n        return () => {\n\n        }\n    }, []);\n    ZZAudioProgram.pause();\n    // ** qs같은 파서를 쓰면 암호화 정보에 +가 망가진다\n    const [isData, setisData] = useState(false);\n    const search = window.location.search;\n    // console.log('decp search: ', search)\n    const d = search.substring(3);// ?d=을 제외한 나머지\n    const decryptQuery = data.parseQuery();\n    let cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n    let tpid = (decryptQuery && decryptQuery.tpid) ? decryptQuery.tpid : '';\n    tpidx = decryptQuery.idx;\n\n    // 캠패인 경우 // /scp?campaign=캠패인아이디\n    if (window.location.href.includes('/scp')) {\n        const campaignid = qs.parse(data.getOnlyquerystring()).campaign as string;\n        if (campaignid) {\n            const info: any = data.getCampaignInfo(campaignid);\n            if (info) {\n                cid = info.cid;\n                tpid = info.tpid;\n            }\n        }\n    }\n\n    audioSrc = `./resource/courses/${cid}/topics/${tpid}/mm.mp3`;\n    useEffect(() => {\n        ZZAudioProgram.presetSrc(audioSrc)\n\n\n        const topicJSON = data.getTopicJSON(cid, tpid).then((result: any) => {\n\n            data.topicJSON = result.data;\n            ZZAudioProgram.livePlayInfo.json = data.topicJSON;\n            setisData(true);\n\n        });\n    }, [])\n\n\n    useEffect(() => {\n\n        // 회원정보 체크가 끝나고 렌더인 경우 퍼미션 체크 \n        if (isCheckedAuth) {\n            const getSubscriptionState = data.getSubscriptionState(fbase.isSubscriptionInfo());\n            const isOwner = getSubscriptionState === 'on';\n            // const isOwner = !['needLogin', 'needPurchase'].includes(fbase.isSubscriptionInfo());\n            const isTrial = data.courseToMainJSON(cid).item[tpidx] && data.courseToMainJSON(cid).item[tpidx].isTrial === \"true\";\n\n        }\n    }, [isCheckedAuth])\n\n\n\n    const getSubscriptionState = data.getSubscriptionState(fbase.isSubscriptionInfo());\n    isOwner = getSubscriptionState === 'on';\n    isTrial = data.courseToMainJSON(cid).item[tpidx] && data.courseToMainJSON(cid).item[tpidx].isTrial === \"true\";\n    console.log('isCheckedAuth::', isCheckedAuth)\n    return (\n        <>\n            {\n                isCheckedAuth\n                    ?\n                    <div className={classnames([\"CoursePlay\", { ytview: decryptQuery.yt }])}>\n                        {decryptQuery.yt === 'true' && <YTModule cid={cid} tpid={tpid} tpidx={tpidx} />}\n                        {decryptQuery.ytspeed === 'true' && <YTSpeedModule cid={cid} tpid={tpid} tpidx={tpidx} />}\n                        {\n                            isData\n                                ?\n                                <div>\n                                    {\n                                        (cid && tpid)\n                                            ?\n                                            <CoursePlayList cid={cid} tpid={tpid} />\n                                            :\n                                            <div>\n                                                없는 경로 입니다.<br></br>\n                                                <button onClick={() => {\n                                                    data.gotoPage('home', '')\n                                                }}>메인페이지로 돌아가기</button>\n                                            </div>\n                                    }\n                                </div>\n                                :\n                                <div>loading...</div>\n                        }\n                        {isShowShadowing && <PageShadowing />}\n                        {isShowSpeedmate && <PageSpeedmate />}\n                    </div>\n                    :\n                    <LoadingDom />\n            }\n        </>\n\n\n    );\n};\n\nconst CoursePlayList = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n\n    return (\n        <div>\n            {/* {cid} */}\n            <TopicCover cid={cid} tpid={tpid} />\n            <div className=\"container-playlist\">\n                <PlayLists cid={cid} tpid={tpid} />\n                <GotoNextPrev cid={cid} tpid={tpid} />\n                {/* <GotoFullScript topicID={data.currJSON.id} /> */}\n            </div>\n            <PlayerControl cid={cid} tpid={tpid} />\n        </div>\n    );\n}\n\nconst GotoNextPrev = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    return (<ul className=\"GotoNextPrev\">\n        <li\n            onClick={() => {\n                data.gotoNextPrev(tpidx, cid, 'prev');\n                data.gotoTop();\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            }}\n            className=\"btn-list prev\"><i className=\"far fa-arrow-alt-circle-left icon\"></i>이전목록</li>\n        <li\n            onClick={() => {\n                data.gotoCourseMainPage(cid);\n            }}\n            className=\"btn-list list\"><i className=\"fas fa-list-ul icon\"></i>전체목록</li>\n        <li\n            onClick={() => {\n                data.gotoNextPrev(tpidx, cid, 'next');\n                data.gotoTop();\n                setTimeout(() => {\n                    window.location.reload();\n                }, 100);\n            }}\n            className=\"btn-list next\">다음목록<i className=\"far fa-arrow-alt-circle-right icon\"></i></li>\n    </ul>);\n}\n\nconst TopicCover = ({\n    cid,\n    tpid\n}: {\n    cid: string,\n    tpid: string\n}) => {\n    // const info = data.currJSON.json.info;\n    // const tpid = useRecoilValue(tpidState);\n    // const cid = useRecoilValue(cidState);\n    // const [isKeep, setIsKeep] = useState((() => {\n    //     return fbase.userMoreInfo.keepClips.includes(tpid);\n    // })());\n\n    const courseToMainJSON = data.courseToMainJSON(cid);\n    const courseToMainIdx = data.courseToMainIdx(cid, tpid);\n    let itemViewType = 'dialog';// movie, dialog\n    if (courseToMainJSON && courseToMainJSON.itemViewType) {\n        itemViewType = courseToMainJSON.itemViewType;\n\n    }\n    return (\n        <div className={classnames([\"TopicCover\", itemViewType, css`\n            background-image: url(\"${data.getRootPath()}resource/courses/${cid}/thumb/${tpid.substr(0, 4)}.jpg\");\n        `])}>\n            {\n                itemViewType === 'movie'\n                    ?\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> <br></br>{_pad(String(tpidx + 1), 3, '0')}\n                        </div>\n                        <div className=\"col-right\">\n\n                        </div>\n                    </div>\n                    :\n                    <div className={`cover-main-${itemViewType}`}>\n                        <div className=\"col-left\">\n                            <span className=\"scene\">DAY</span> {_pad(String(tpidx + 1), 3, '0')}\n                        </div>\n                    </div>\n            }\n\n\n\n        </div>\n    )\n}\n\nconst PlayLists = ({\n    cid,\n    tpid,\n}: {\n    cid: string,\n    tpid: string,\n}) => {\n    useEffect(() => {\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n\n            // setActiveIdx(idx);\n            setRender(render + Math.random());\n        });\n        // EventEmitter.subscribe(Event.SENTENSE_PAUSE, () => {\n        //     setActiveIdx(-1);\n        // });\n        return () => {\n            EventEmitter.remove(Event.CONTROL_UI_UPDATE);\n            EventEmitter.remove(Event.SENTENSE_PAUSE);\n        };\n    }, []);\n\n    const isCloseDetailPanel = useRecoilValue(isCloseDetailPanelState);\n    const [render, setRender] = useState(0);\n    // const [activeIdx, setActiveIdx] = useState(-1);\n    // console.log(\"data.topicJSON\", data.topicJSON)\n    const sentense = data.topicJSON.sentense;\n    const Component = sentense.map((item: any, i: number) => {\n        return <SentenseItem\n            idx={i}\n            totalIdx={sentense.length}\n            cid={cid} tpid={tpid}\n            renderCnt={render}\n            isOwner={isOwner}\n            isTrial={isTrial}\n            // isActive={activeIdx === i}\n            json={item}\n            key={`sentense${i}`}\n        />;\n    });\n    // console.log('tmplog_fbase.userMoreInfo', fbase.userMoreInfo)\n    // const [forceRender, setForceRender] = useState(0);\n    // callModeChange = () => {\n    //     setForceRender(forceRender + 1);\n    // }\n\n    return (\n        <div className={classnames([\"PlayLists\", css`\n            padding-bottom:${isCloseDetailPanel ? 30 : 267}px;\n        `])}>\n            {Component}\n        </div>\n    )\n}\n\nconst SentenseItem = ({\n\n    // isActive = false,\n    renderCnt,\n    json,\n    idx,\n    totalIdx,\n    cid,\n    tpid,\n    isOwner,\n    isTrial,\n}: {\n\n    // isActive: boolean,\n    renderCnt: number,\n    json: any,\n    idx: number,\n    totalIdx: number,\n    cid: string,\n    tpid: string,\n    isOwner: boolean,\n    isTrial: boolean,\n}) => {\n\n\n    const [isOpenDesc, setIsOpenDesc] = useState(false);\n    const [isGlassMode, setIsGlassMode] = useState(false);\n    const scriptMode = useRecoilValue(scriptModeState);\n    const [isCheck, setIsCheck] = useState(fbase.userMoreInfo.doneSentense.includes(`${tpid}_${idx}`));\n\n    const checkClick = (tf: boolean) => {\n\n        if (!fbase.isLogin()) {\n            data.showToastMessage({\n                message: \"로그인이 필요한 서비스입니다.\",\n                mtime: 3000\n            })\n            EventEmitter.dispatch(Event.FB_START_LOGIN, {\n                from: \"buyProduct\",\n                courseID: json.courseID,\n            });\n            return;\n        }\n        setIsCheck(tf);\n\n        const makeKey = `${tpid}_${idx}`;\n\n        data.setSettingKeepClipSentense(\n            'done',\n            tf ? 'add' : 'remove',\n            makeKey\n        )\n        // data.setSettingKeepClipSentense(\n        //     'sentense',\n        //     tf ? 'add' : 'remove',\n        //     makeKey\n        // )\n        // 문장을 저장\n        // data.setSettingKeepSentenseMoreInfo(\n        //     tf ? 'add' : 'remove',\n        //     makeKey,\n        //     json.en\n        // );\n\n    }\n    const isActive = idx === ZZAudioProgram.livePlayInfo.idx ? true : false;\n    const words = json.words;\n    const setIsShowShadowing = useSetRecoilState(isShowShadowingState);\n    const setIsShowSpeedmate = useSetRecoilState(isShowSpeedmateState);\n    // console.log('jsonjsonjson',json);\n    // const timeArr = json.timeen.split('|');\n    // const isOnePlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999)?false:true;\n    const isInfinityPlay: boolean = (isActive && ZZAudioProgram.livePlayInfo.repeat === 9999) ? true : false;\n    const playClick = () => {\n\n\n        ZZAudioProgram.play({\n            idx: idx,\n            totalIdx: totalIdx,\n            src: audioSrc,\n            repeat: 1,\n            repeatCnt: 1,\n            allplay: false,\n        });\n    }\n\n    const ytbSentenseHide = useRecoilValue(ytbSentenseHideState);\n    const isYTModule = useRecoilValue(isYTModuleState);\n    const isYTSpeedModule = useRecoilValue(isYTSpeedModuleState);\n    let ytbHideClassEn = '';\n    let ytbHideClassKo = '';\n    if (isYTModule || isYTSpeedModule) {\n\n        if (ZZAudioProgram.livePlayInfo.idx === null) {\n            // 최초에 아직 결정되기 전에도 blur로 처리\n            ytbHideClassEn = 'blur';\n            ytbHideClassKo = 'blur';\n        }\n\n        // console.log('dioProgram.livePlayInf', idx, ZZAudioProgram.livePlayInfo.idx);\n\n        if (isActive) {\n            // 활성화 & 하이드 턴이면\n            ytbHideClassEn = ytbSentenseHide.substr(0, 1) === '0' ? 'blur' : '';\n            ytbHideClassKo = ytbSentenseHide.substr(1, 1) === '0' ? 'blur' : '';\n        } else if (idx > ZZAudioProgram.livePlayInfo.idx!) {\n            // 아직 진행 전 문장이면\n            ytbHideClassEn = 'blur';\n            ytbHideClassKo = 'blur';\n        }\n\n    }\n\n    return (\n        <div onTouchStart={() => {\n            data.sentensePressing();\n        }} className={classnames([`SentenseItem num-${idx}`, { active: isGlassMode }, { active: isActive }])}>\n\n            <div className={classnames([\"item-sound\", { active: isActive }])}>\n                <div className=\"item-main\">\n                    <div className=\"col-left\" onClick={() => {\n                        playClick();\n                        data.sentensePressing();\n                        // data.setCurrPlayBtnState('stop', 'a4');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                        // setTimeout(() => {\n                        //     // 1개 반복\n                        //     playOneItem();\n                        // })\n\n                    }}>\n                        <ItemCnt idx={idx} />\n                        <div>\n                            {\n                                isGlassMode\n                                    ?\n                                    <>\n                                        <div className=\"title-en\">{json.en}</div>\n                                        <div className=\"title-ko\">{json.ko}</div>\n                                    </>\n                                    :\n                                    <>\n                                        {['ek', 'e0'].includes(scriptMode) && <div className={classnames([\"enko title-en\", ytbHideClassEn])}>{json.en}</div>}\n                                        {/* {['_k'].includes(scriptMode) && <div className={classnames([\"title-en_\", ytbHideClassEn])}>{json.en_}</div>} */}\n                                        {['0k', '00'].includes(scriptMode) && <div className={classnames([\"enko title-en_0\", ytbHideClassEn])}>{json.en_0}</div>}\n                                        {['00', 'e0'].includes(scriptMode) && <div className={classnames([\"enko title-ko_0\", ytbHideClassKo])}>{json.ko_0}</div>}\n                                        {['_k', 'ek', '0k'].includes(scriptMode) && <div className={classnames([\"enko title-ko\", ytbHideClassKo])}>{json.ko}</div>}\n                                    </>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-right\">\n                        {/* {idx} */}\n\n\n                    </div>\n                </div>\n                <div className=\"item-bottom\">\n                    {!isTrial && !isOwner && <div className=\"unlock-cover\">\n                        <button onClick={() => {\n                            playClick();\n                        }} className=\"btn btn-play-one\">\n                            <i className=\"fas fa-volume-up\">\n                                <span className=\"i-label\">듣기</span>\n                            </i>\n                        </button>\n                        <div className=\"btn-unlock\" onClick={() => {\n                            EventEmitter.dispatch(Event.SHOW_ALERT, {\n                                moduleName: \"AlertBuyProduct2\",\n                                courseID: cid,\n                            });\n                        }}>\n                            <i className=\"fas fa-lock\"></i> 추가기능 프리패스 필요\n                        </div>\n\n                    </div>}\n                    <div>\n                        <div className=\"col\">\n                            <button onClick={() => {\n                                // data.setCurrPlayBtnState('stop', 'a3');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                // setTimeout(() => {\n                                //     // 1개 반복\n                                //     playOneItem();\n                                // })\n                                playClick();\n                            }} className=\"btn\">\n                                <i className=\"fas fa-volume-up\">\n                                    <span className=\"i-label\">듣기</span>\n                                </i>\n                            </button>\n                            <button className=\"btn\">\n                                {\n                                    isInfinityPlay ?\n                                        <div className=\"stop-repeat\" onClick={() => {\n\n                                            ZZAudioProgram.pause();\n                                        }}>\n                                            <Equalizer />\n                                            <span className=\"i-label\">반복종료</span>\n                                        </div>\n                                        :\n                                        <div onClick={() => {\n\n                                            ZZAudioProgram.play({\n                                                idx: idx,\n                                                totalIdx: totalIdx,\n                                                src: audioSrc,\n                                                repeat: 9999,\n                                                repeatCnt: 9999,\n                                                allplay: false,\n                                            });\n                                        }} >\n                                            <i className=\"fas fa-retweet\"></i><span className=\"i-label\">무한반복</span>\n                                        </div>\n                                }\n                                {/* {!(sentenseRepeatIdx === idx) && <i onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a2');// 현재 실행되고 있는 경우 하단 메인 컨트롤을 멈추기위해서\n                                    setTimeout(() => {\n                                        temprepeatMode = fbase.userMoreInfo.repeatMode;\n                                        fbase.userMoreInfo.repeatMode = '1';\n                                        data.setCurrPlayBtnState('play');\n                                        // // setIsRepeat(true);\n                                        data.audioPlayPause(idx);\n                                        // repeat equalizer보이기 인덱스\n                                        setSentenseRepeatIdxState(idx);\n                                    })\n                                }} className=\"fas fa-retweet\">\n                                    <span className=\"i-label\">무한반복</span>\n                                </i>}\n                                {sentenseRepeatIdx === idx && <div className=\"stop-repeat\" onClick={() => {\n                                    data.setCurrPlayBtnState('stop', 'a1');\n                                    fbase.userMoreInfo.repeatMode = temprepeatMode;\n                                    // setIsRepeat(false);\n                                    // repeat equalizer보이기 인덱스\n                                    setSentenseRepeatIdxState(9999);\n                                }} >\n                                    <Equalizer />\n                                    <span className=\"i-label\">반복종료</span>\n                                </div>} */}\n\n                            </button>\n                            <button className=\"btn\">\n                                {isCheck\n                                    ?\n                                    <i className=\"fas fa-check-square checkbox check\" onClick={() => {\n                                        checkClick(false);\n                                    }}><span className=\"i-label\">학습완료</span></i>\n                                    :\n                                    <i className=\"fas fa-check-square checkbox\" onClick={() => {\n                                        checkClick(true);\n                                    }}><span className=\"i-label\">학습중</span></i>\n                                }\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            {(words && words.length > 0) && <button className=\"btn btn-word\" onClick={() => {\n                                setIsOpenDesc(!isOpenDesc);\n                            }}><i className=\"fas fa-plus\">\n                                    <span className=\"i-label\">단어({words.length})</span></i>\n                            </button>}\n\n                            <button className=\"btn btn-sndtraining\" onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.totalIdx = totalIdx;\n                                data.pageShadowingParam.audioSrc = audioSrc;\n                                data.pageShadowingParam.topicID = tpid;\n\n                                // ZZAudioProgram.play({\n                                //     idx: data.pageShadowingParam.sentenseIdx,\n                                //     totalIdx: data.pageShadowingParam.totalIdx,\n                                //     src: data.pageShadowingParam.audioSrc,\n                                //     speed: 0.7,\n                                //     repeat: 9999,\n                                //     repeatCnt: 9999,\n                                //     allplay: false,\n                                // });\n                                ZZAudioProgram.prePlay({\n                                    allplay: false,\n                                    totalIdx: 2\n                                })\n                                setTimeout(() => {\n                                    setIsShowSpeedmate(true);\n                                }, 1000)\n\n\n\n                            }}>\n                                <span className=\"logo-snd\">S</span><span className=\"i-label\">속도적응훈련</span>\n                                {/* <i className=\"fas fa-retweet\"></i><span className=\"i-label\">속도적응훈련</span> */}\n                            </button>\n\n                            <button onClick={() => {\n                                data.pageShadowingParam.sentenseEn = json.en;\n                                data.pageShadowingParam.sentenseKo = json.ko;\n                                data.pageShadowingParam.sentenseIdx = idx;\n                                data.pageShadowingParam.totalIdx = totalIdx;\n                                data.pageShadowingParam.audioSrc = audioSrc;\n                                data.pageShadowingParam.topicID = tpid;\n                                ZZAudioProgram.prePlay({\n                                    allplay: false,\n                                    totalIdx: 2\n                                })\n                                setTimeout(() => {\n                                    setIsShowShadowing(true);\n                                }, 1000)\n\n\n                                // setIsShowSpeedmate(true);\n\n                            }} className=\"btn btn-sndtraining\">\n                                <span className=\"logo-snd\">D</span><span className=\"i-label\">받아쓰기훈련</span>\n                            </button>\n                            {['_k', 'e0', '0k', '00'].includes(scriptMode) && <button className={classnames([\"btn btn-glass\", { glasson: isGlassMode }])} onClick={() => {\n\n                                setIsGlassMode(true);\n                                setTimeout(() => {\n                                    setIsGlassMode(false);\n                                }, 3000);\n                            }}><i className=\"fas fa-eye i-con\"><span className=\"i-label\">잠깐보기</span></i>\n                            </button>}\n                        </div>\n                    </div>\n                    {isOpenDesc && words && <div>\n                        <WordList json={words} modeClass=\"\" />\n                    </div>}\n                </div>\n                {(isYTModule || isYTSpeedModule) && isActive && words && <div>\n                    <WordList json={words} modeClass=\"yt-words\" />\n                </div>}\n            </div>\n        </div >\n    );\n}\n\nconst PlayerControl = ({\n    cid,\n    tpid\n}: {\n    cid: string,\n    tpid: string\n}) => {\n    // alert(data.env.screenHeight);\n    const isYTModule = useRecoilValue(isYTModuleState);\n    const isYTSpeedModule = useRecoilValue(isYTSpeedModuleState);\n    const [renderCnt, setRenderCnt] = useState(0);\n    const [isClose, setIsClose] = useRecoilState(isCloseDetailPanelState);\n    const [repeat, setRepeat] = useState(1);\n    const [interval, setInterval] = useState(1);\n    const [speed, setSpeed] = useState(1);\n\n    // EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, (idx: number) => {\n    //     setRenderCnt(Math.random());\n    // });\n    // const isFreeClip: boolean = data.isFreeClip(tpid);\n    // const isAllPass: boolean = fbase.userMoreInfo.buyCourses.length === 0;\n\n    // useEffect(() => {\n    //     EventEmitter.subscribe(Event.PURCHASE_COMPLETE, () => {\n    //         setRenderCnt(renderCnt + 1);\n    //     });\n    // }, []);\n    // data.playerSetting = {\n    //     repeat: repeat,\n    //     interval: interval,\n    //     speed: speed,\n    // }\n    return (\n        <>\n            {\n                !(isYTModule || isYTSpeedModule) &&\n                <div className={`PlayerControl`}>\n                    <div onClick={() => {\n                        if (isClose) {\n                            setIsClose(!isClose);\n                        }\n                    }} className={classnames([\"functions\", { close: isClose }])}>\n                        <div className=\"center\">\n                            <div className=\"func-header\">\n                                <button className=\"btn btn-blank btn-open\" onClick={() => {\n                                    setIsClose(!isClose);\n                                }}>\n                                    {isClose && <>설정열기<i className=\"fas fa-chevron-up up\"></i></>}\n                                    {!isClose && <>설정닫기<i className=\"fas fa-chevron-down down\"></i></>}\n                                </button>\n\n                            </div>\n\n\n\n\n\n                            <div className={`func-setting`}>\n                                {!isTrial && !isOwner && <div onClick={() => {\n                                    EventEmitter.dispatch(Event.SHOW_ALERT, {\n                                        moduleName: \"AlertBuyProduct2\",\n                                        courseID: cid,\n                                    });\n                                }} className=\"btn-unlock unlock-cover\">\n                                    <i className=\"fas fa-lock\"></i> 추가기능 프리패스 필요\n                                </div>}\n                                <div className=\"row\">\n                                    <div className=\"col1\">반복</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 1 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 1;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 1;\n                                                setRepeat(1);\n                                            }}>x1</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 2 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 2;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 2;\n                                                setRepeat(2);\n                                            }}>x2</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 3 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 3;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 3;\n                                                setRepeat(3);\n                                            }}>x3</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 4 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 4;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 4;\n                                                setRepeat(4);\n                                            }}>x4</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 5 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 5;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 5;\n                                                setRepeat(5);\n                                            }}>x5</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: repeat === 10 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.repeat = 10;\n                                                ZZAudioProgram.livePlayInfo.repeatCnt = 10;\n                                                setRepeat(10);\n                                            }}>x10</button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col1\">속도</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 1 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 1;\n                                                setSpeed(1);\n                                            }}>x1</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.9 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.9;\n                                                setSpeed(0.9);\n                                            }}>x0.9</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.8 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.8;\n                                                setSpeed(0.8);\n                                            }}>x0.8</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: speed === 0.7 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.speed = 0.7;\n                                                setSpeed(0.7);\n                                            }}>x0.7</button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col1\">간격</div>\n                                    <div className=\"col2\">\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 0 }])}\n                                            onClick={() => {\n                                                setInterval(0);\n                                                ZZAudioProgram.livePlayInfo.interval = 0;\n                                            }}>0s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 1 }])}\n                                            onClick={() => {\n                                                setInterval(1);\n                                                ZZAudioProgram.livePlayInfo.interval = 1;\n                                            }}>1s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 1.5 }])}\n                                            onClick={() => {\n                                                setInterval(1.5);\n                                                ZZAudioProgram.livePlayInfo.interval = 1.5;\n                                            }}>1.5s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 2 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 2;\n                                                setInterval(2);\n                                            }}>2s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 2.5 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 2.5;\n                                                setInterval(2.5);\n                                            }}>2.5s</button>\n                                        <button\n                                            className={classnames([\"btn btn-blank btn-fc\",\n                                                { active: interval === 9999 }])}\n                                            onClick={() => {\n                                                ZZAudioProgram.livePlayInfo.interval = 9999;\n                                                setInterval(9999);\n                                            }}>쉐도잉타임</button>\n\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"func-summary\">\n                                반복<span className=\"bold\">x{repeat}</span>\n                        속도<span className=\"bold\">x{speed}</span>\n                        간격<span className=\"bold\">{(() => {\n                                    return interval === 9999 ? '쉐도잉타임' : interval + 's';\n                                })()}</span>\n\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"controller\">\n\n                        <div className=\"col-left\">\n                            <div>\n                                <BtnRepeatMode />\n                                <BtnScriptMode />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            }\n        </>\n\n    )\n}\n\nconst BtnRepeatMode = () => {\n\n    useEffect(() => {\n        // EventEmitter.subscribe(Event.CHANGE_BTN_PLAY_STATE, (sta: string) => {\n        //     // alert(sta);\n        //     if (sta === 'stop') {\n        //         setIsDisable(true);\n        //     } else {\n        //         setIsDisable(false);\n        //     }\n        // });\n        // EventEmitter.subscribe(Event.AUDIO_STOP, () => {\n\n        //     // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n        //     setUpdate(update + 1);\n        // })\n        EventEmitter.subscribe(Event.CONTROL_UI_UPDATE, () => {\n\n            // console.log('tmplog_currPlayBtnStateAUDIO_STOP', update);\n            setUpdate(Math.random());\n        })\n    }, []);\n\n    let dataRepeatMode = '1';// TODO : fbase.userMoreInfo.repeatMode;\n    const [update, setUpdate] = useRecoilState(btnRepeatModeUpdateState);\n    const [mode, setMode] = useState(dataRepeatMode);\n    const [isDisable, setIsDisable] = useState(true);\n    // 1개 반복은 개별의 반복으로 처리해서 메인컨트롤러 플레이는 아님\n    const isPlay = ZZAudioProgram.livePlayInfo.allplay;// TODO : (data.currPlayBtnState === 'play' && fbase.userMoreInfo.repeatMode !== '1');\n\n\n\n    // const setSentenseRepeatIdxState = useSetRecoilState(sentenseRepeatIdxState);\n\n    return (\n        <>\n            <div className=\"BtnRepeatMode2\">\n                <button onClick={() => {\n                    // // 개별아이템 반복중일경우 tempRepeatMode처리\n                    // if (temprepeatMode !== 'nil') {\n                    //     fbase.userMoreInfo.repeatMode = temprepeatMode;\n                    //     temprepeatMode = 'nil';\n                    // }\n                    // fbase.userMoreInfo.repeatMode = 'ALL';\n                    // // 개별아이템 반복모드 켜진경우 중지 처리\n                    // setSentenseRepeatIdxState(9999);\n                    // if (isPlay) {\n                    //     data.setCurrPlayBtnState('stop', 'BtnRepeatMode2');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"멈춤\");\n                    // } else {\n                    //     data.setCurrPlayBtnState('play');\n                    //     EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"play\");\n                    //     EventEmitter.dispatch(Event.SHOW_NOTI_MESSAGE, \"실행\");\n                    // }\n                    // setUpdate(update + 1);\n                    const isPlay = ZZAudioProgram.livePlayInfo.allplay;//ZZAudioProgram.livePlayInfo.idx !== null;\n                    // console.log('isPlay', isPlay);\n\n                    if (isPlay) {\n                        ZZAudioProgram.pause();\n                    } else {\n                        ZZAudioProgram.play({\n                            allplay: true,\n                            totalIdx: data.topicJSON.sentense.length,\n                            repeat: ZZAudioProgram.livePlayInfo.repeat,\n                            repeatCnt: ZZAudioProgram.livePlayInfo.repeatCnt,\n                        })\n                    }\n\n                }} className={classnames([\"btn btn-sound\", { active: isPlay }])}>\n                    {isPlay && <><Equalizer /><span className=\"i-label active\">듣기중단</span></>}\n                    {!isPlay && <i className=\"fas fa-volume-up\"><span className=\"i-label\">전체듣기</span></i>}\n                </button>\n                {/* <button onClick={() => {\n                    if (dataRepeatMode === 'ALL') {\n                        // TODO: fbase.userMoreInfo.repeatMode = '';\n                    } else {\n                        // TODO: fbase.userMoreInfo.repeatMode = 'ALL'\n                    }\n                    setUpdate(update + 1);\n                }} className={classnames([\"btn btn-repeat\", { active: dataRepeatMode === 'ALL' }])}>\n                    <i className=\"fas fa-redo-alt\"></i>\n                </button> */}\n            </div>\n\n        </>\n    )\n}\n\nconst scriptModeStr: any = {\n    // '_k': '_/한',\n    '00': '.../...',\n    'e0': '영/...',\n    '0k': '.../한',\n    'ek': '영/한',\n}\nconst BtnScriptMode = () => {\n    // const [mode, setMode] = useState(scriptMode);\n    const [scriptMode, setscriptMode] = useRecoilState(scriptModeState);\n\n    return (\n        <>\n            <div className=\"BtnScriptMode2\">\n                <button onClick={() => {\n                    const mode = 'ek';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'ek' }])}>영+한</button>\n                <button onClick={() => {\n                    const mode = 'e0';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === 'e0' }])}>영어만</button>\n                <button onClick={() => {\n                    const mode = '0k';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '0k' }])}>한글만 </button>\n                <button onClick={() => {\n                    const mode = '00';\n                    setscriptMode(mode);\n                    // callModeChange();\n                }} className={classnames([\"btn btn-scriptmode\", { active: scriptMode === '00' }])}>안보임</button>\n            </div>\n\n        </>\n\n    )\n}\n\nconst WordList = ({\n    json,\n    modeClass,\n}: {\n    json: any,\n    modeClass: string,\n}) => {\n    const Itm = json.map((item: string[], i: number) => {\n        return <li className=\"item-word\">\n            <span className=\"word\">{item[0]}</span>\n            <span className=\"mean\">{item[1]}</span>\n        </li>\n    })\n    return (\n        <ul className={classnames([\"items-word\", modeClass])}>\n            {Itm}\n        </ul>\n    );\n}\n\nconst ItemCnt = ({\n    idx,\n}: {\n    idx: number,\n}) => {\n    return (\n        <span className=\"item-cnt\">\n            {idx + 1}\n        </span>\n    )\n}\n\nexport default CoursePlay;","import qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport data from '../core/data';\nconst printJSON = require('../resource/mainJSONPrint.json');\nconst CoursePrint = () => {\n    let param: any = null;\n    if (data.isHashURL) {\n        param = qs.parse(window.location.hash.split('?')[1]);\n    } else {\n        param = qs.parse(window.location.search.substr(1));\n    }\n    console.log('paramparam', param)\n    // const param = qs.parse(window.location.search.substr(1));\n    const selectCourseJSON = printJSON.find((item: any, i: number) => {\n\n        if (item.info.openID === param.id) {\n            return item;\n        }\n\n    });\n    let tr = [];\n    if (selectCourseJSON) {\n        tr = selectCourseJSON.list.map((item: any, i: number) => {\n            return <DaySentenses arr={item} idx={i} key={i} />\n        })\n    }\n    useEffect(() => {\n\n    }, [])\n\n    return (\n        <div className=\"CoursePrint\">\n            {\n                selectCourseJSON && <div>\n                    <div className=\"header\">\n                        <div className=\"row-right\">\n                            <button className=\"btn btn-border\" onClick={() => {\n\n                                (window as any).printScript('카셋회화훈련-인턴');\n                            }}><i className=\"fas fa-file-download\"></i> 엑셀로 다운로드</button>\n                        </div>\n\n                    </div>\n                    <table id=\"script-print-table\">\n                        <thead>\n                            <tr >\n                                <td >일자</td>\n                                <td >No.</td>\n                                <td >한글</td>\n                                <td >영어</td>\n                                <td >확인</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tr}\n\n                        </tbody>\n                    </table>\n\n\n                </div>\n            }\n        </div>\n    );\n};\nconst DaySentenses = ({\n    arr,\n    idx,\n}: {\n    arr: any,\n    idx: number,\n}) => {\n    const SentenseList = arr.map((item: any, i: number) => {\n        return <tr key={'tr' + i} className={`tr-day n-${i}`} >\n            {i === 0 && <td key={'tr' + i} rowSpan={arr.length}>DAY{idx + 1}</td>}\n            <td data-tableexport-xlsxformatid=\"1\">{i + 1}</td>\n            <td className=\"td-text-left\">{item.ko}</td>\n            <td className=\"td-text-left\">{item.en}</td>\n            <td className=\"td-memo\">&nbsp;</td>\n        </tr>\n    })\n    return (<>\n        {SentenseList}\n    </>);\n}\n\n\nexport default CoursePrint;","import React from 'react';\nimport data from '../core/data';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            <div className=\"utils-layout-marginauto0\">\n                <div className=\"logo btn-fc\" onClick={() => {\n                    data.gotoPage('home', '');\n                }}><i className=\"fas fa-home i-left\"></i>카대영(카셋 대본 영어)</div>\n                <br></br>\n                <a href=\"http://pf.kakao.com/_HxlMJK/chat\" className=\"btn btn-blank btn-fc\" target=\"_blank\"><i className=\"fas fa-chevron-circle-right i-left\"></i>카카오채널 문의하기</a><br></br>\n                <a href=\"mailto:dev@casete.in\" className=\"btn btn-blank btn-fc\"><i className=\"fas fa-chevron-circle-right i-left\"></i>이메일 문의하기</a><br></br>\n                <div className=\"version\">version 1.2.8</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;","\nimport React, { useState } from 'react';\nimport data, { productTable } from '../core/data';\nimport fbase, { authService, dbService } from './fbase';\nimport Days from '../core/Days';\nimport classnames from 'classnames';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport axios from 'axios';\n\n\nconst FBViewLogin = () => {\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    const isSubscriptionInfo = fbase.isSubscriptionInfo();\n\n    const isOwner = data.getSubscriptionState(fbase.isSubscriptionInfo()) === 'on';\n    const [inputCode, setInputCode] = useState('');\n    const onChangeInput = (e: any) => {\n\n        setInputCode(e.target.value);\n    }\n    return (\n        <div className=\"FBViewLogin\">\n            <div>\n                <button onClick={() => {\n                    // setisShowLoginPopup(true);\n                    data.gotoPage('mypage', '');\n                }} className={classnames([\"btn btn-userinfo\", { \"login\": isOwner }])}><i className=\"fas fa-user-circle\">\n\n                    </i>\n                    <div className=\"print-user\">\n                        {/* <div className=\"user-id\">maca222oshu</div> */}\n                        {/* <div className=\"user-id\">{fbase.userInfo.email.split('@')[0]}</div> */}\n                        <span className=\"purchase-state\">({isOwner ? \"프리패스\" : \"무료 이용 중\"})</span>\n                    </div>\n                </button>\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login-info\">\n                    <div className=\"popup-login-info-in\">\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n                                사용자정보\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n                        <div className=\"area-user\">\n                            <span className=\"user-id\">{fbase.userInfo.email.split('@')[0]}</span>\n                            <button className=\"btn btn-border round\" onClick={() => {\n                                authService.signOut().then(() => {\n                                    (window as any).location.href = \"/\";\n                                });\n                            }}>로그아웃</button>\n                        </div>\n\n\n\n                        <div className=\"purchase-list\">\n                            <h4 className=\"title\"><i className=\"fas fa-book\"></i>현재 이용권</h4>\n                            {/* <SubscriptionInfo infoStr={fbase.isSubscriptionInfo()} /> */}\n                            <SubscriptionInfoArr />\n                            <div>\n                                <h4 className=\"title\"><i className=\"fas fa-book\"></i>프리패스 구매링크</h4>\n                                <button onClick={() => {\n                                    fbase.buyFbSubscriptionInfo('t1w');\n                                }}>네이버스토어 이동</button>\n                            </div>\n                            <div>\n                                <h4 className=\"title\"><i className=\"fas fa-book\"></i>프리패스 등록</h4>\n                                <div className=\"group-input-code\">\n                                    <div className=\"input-code\">\n                                        <input value={inputCode} onChange={onChangeInput} placeholder=\"프리패스 코드 입력\"></input>\n                                    </div>\n                                    <div className=\"input-btn\">\n                                        <button onClick={() => {\n\n                                            fbase.submitCouponCode(inputCode, 'firstjoin');\n\n                                        }}>등록확인</button>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n\n                        {/* <button onClick={() => {\n                            // 저장\n                            dbService.collection('userstatus').add({ todo: \"test\" }).then((res: any) => {\n                                console.log(res)\n                            })\n                        }}>정보변경</button> */}\n                    </div>\n\n                </div>\n            }\n\n\n        </div>\n    );\n};\n\nconst SubscriptionInfoArr = () => {\n    return (<ul>SubscriptionInfoArr</ul>);\n}\n\nconst SubscriptionInfo = ({\n    infoStr,\n}: {\n    infoStr: string\n}) => {\n    // console.log('tmplog_getSubscriptionState', infoStr)\n    let subscriptionType = data.getSubscriptionState(infoStr);\n    let dp1 = '';\n    let dp2 = '';\n\n    if (subscriptionType === 'empty') {\n        dp1 = '프리패스 이용 내역 없음';\n    } else {\n        let todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n        const infoArr = infoStr.split('##');\n\n        let [productCD, stStr, edStr] = infoArr;\n        if (productCD.substr(0, 1) === 't') {\n            productCD = productCD.substr(1);\n        }\n        let productCDtoStr: string = '';\n        if (productCD === '1w') {\n            productCDtoStr = '1주일'\n        } else {\n            productCDtoStr = productTable[productCD].title;\n        }\n\n        dp2 = `${data.dateMyFormat(stStr)} ~ ${data.dateMyFormat(edStr)}`\n        if (subscriptionType === 'on') {\n            dp1 = productCDtoStr + ' 프리패스 이용 중';\n        } else if (subscriptionType === 'expired01') {\n            dp1 = '프리패스 만료';\n        }\n    }\n\n    return (\n        <ul className={classnames([\"list\", subscriptionType])}>\n            <li className=\"dp1\">\n                {dp1}\n                {\n                    [\"empty\"].includes(subscriptionType) &&\n                    <button onClick={() => {\n                        EventEmitter.dispatch(Event.SHOW_ALERT, {\n                            moduleName: \"AlertBuyProduct2\",\n                            courseID: '',\n                        });\n                    }} className=\"btn btn-border btn-buy\">\n                        <i className=\"fas fa-plus-square\"></i>프리패스 구매하기\n                    </button>\n                }\n                {\n                    [\"expired01\"].includes(subscriptionType) &&\n                    <button onClick={() => {\n                        EventEmitter.dispatch(Event.SHOW_ALERT, {\n                            moduleName: \"AlertBuyProduct2\",\n                            courseID: '',\n                        });\n                    }} className=\"btn btn-border btn-buy\">\n                        <i className=\"fas fa-plus-square\"></i>다시 구매하기\n                    </button>\n                }\n            </li>\n            {\n                dp2 && <li className=\"dp2\">{dp2}</li>\n            }\n\n        </ul>\n    );\n}\n\nexport default FBViewLogin;","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport Days from '../core/Days';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport { isLoadingState } from '../core/store';\nimport fbase, { authService } from './fbase';\n// let tempLoginPopupParam: {\n//     from: string,\n//     courseID: string,\n// } | null = null;\nconst btnLabel: any = {\n    'login': '로그인',\n    'join': '가입신청',\n    'findpw': '이메일로 링크보내기',\n};\nconst FBViewLogout = () => {\n    const [inputEmail, setInputEmail] = useState('');\n    const [inputPw, setInputPw] = useState('');\n    const [inputPw2, setInputPw2] = useState('');\n    // const [newAccount, setNewAccount] = useState(false);\n    const [isShowLoginPopup, setisShowLoginPopup] = useState(false);\n    const [viewMode, setViewMode] = useState('login');// login, join, findpw\n    const setisLoading = useSetRecoilState(isLoadingState);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.FB_START_LOGIN, (options: any) => {\n            // tempLoginPopupParam = options;\n            setisShowLoginPopup(true);\n            if (options.from === 'joinFromHome') {\n                setInputEmail(options.email);\n                setViewMode('join');\n            } else if (options.from === 'loginFromHome') {\n                setInputEmail(options.email);\n                setViewMode('login');\n            }\n        })\n    }, []);\n    const onChange = (event: any) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setInputEmail(value);\n        } else if (name === \"pw\") {\n            setInputPw(value);\n        } else if (name === \"pw2\") {\n            setInputPw2(value);\n        }\n    }\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (!inputEmail) {\n            alert('이메일을 입력해주세요.')\n            return;\n        }\n        // 신규가입인경우 비번 두번입력 비교\n        if (viewMode === 'join' && (inputPw !== inputPw2)) {\n            alert(fbase.convertErrorMessage({\n                code: 'auth/invalidNewPw'\n            }));\n            return;\n        }\n        try {\n\n            if (viewMode === 'join') {\n                setisLoading(true);\n                setTimeout(() => {\n                    setisLoading(false);\n                }, 1500)\n                // create account\n                await authService.createUserWithEmailAndPassword(inputEmail, inputPw);\n                setisLoading(false);\n                // 회원가입 후 일주일간 무료체험 이벤트 \n                setTimeout(() => {\n\n                    fbase.buyFbSubscriptionInfo('t1w');\n                    alert('가입 감사 이벤트!! 일주일간 무료 프리패스가 제공되었습니다.');\n                    setisLoading(true);\n                    data.sendTelelog('Welcome:' + inputEmail);\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 2000);\n                }, 1000);\n            } else if (viewMode === 'login') {\n                setisLoading(true);\n                setTimeout(() => {\n                    setisLoading(false);\n                }, 1500)\n                // log in\n                await authService.signInWithEmailAndPassword(inputEmail, inputPw);\n                setisLoading(false);\n            } else if (viewMode === 'findpw') {\n                // 비번 찾기\n                authService.sendPasswordResetEmail(inputEmail).then(() => {\n                    alert(`입력하신 ${inputEmail}로 발송한 메일을 확인해주세요.`)\n                }).catch((error: any) => {\n\n                    if (error.code === 'auth/user-not-found') {\n                        alert(fbase.convertErrorMessage({\n                            code: error.code\n                        }));\n                    } else {\n                        alert('ERROR : ' + error.message);\n                    }\n                });\n\n            }\n\n        } catch (error) {\n            //   setError(error.message);\n            console.log(error);\n            alert(fbase.convertErrorMessage(error));\n            // alert(error.message);\n        }\n    }\n\n    // if (!isShowLoginPopup) {\n    //     if (tempLoginPopupParam !== null && tempLoginPopupParam.from === 'buyProduct') {\n    //         EventEmitter.dispatch(Event.FB_START_LOGIN, {\n    //             from: \"buyProduct\",\n    //             courseID: tempLoginPopupParam.courseID,\n    //         });\n    //     }\n    //     tempLoginPopupParam = null;\n    // }\n    return (\n        <div className=\"FBViewLogout\">\n            <div>\n                <button onClick={() => {\n                    setisShowLoginPopup(true);\n                    setViewMode('login');\n                }} className=\"btn btn-login\"><i className=\"fas fa-user-circle i-left\"></i>로그인</button>\n\n\n            </div>\n            {\n                isShowLoginPopup &&\n                <div className=\"popup-login\">\n                    <div className=\"popup-login-in\">\n\n                        <div className=\"popup-header\">\n                            <h3 className=\"center\">\n\n                                <div className=\"nav\">\n                                    <div className=\"nav-tabs\">\n                                        <div onClick={() => {\n                                            setViewMode('login');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"login\" }])}>\n                                            로그인\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                        <div onClick={() => {\n                                            setViewMode('join');\n                                        }} className={classnames([\"nav-item\", { \"active\": viewMode === \"join\" }])}>\n                                            회원가입\n                                                <div className=\"underline\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {\n                                    ['findpw'].includes(viewMode) && <div className=\"tit-findpw\">비밀번호 찾기 </div>\n                                }\n                            </h3>\n                            <div className=\"right\">\n                                <button onClick={() => {\n                                    setisShowLoginPopup(false);\n                                }} className=\"btn btn-close\"><i className=\"fas fa-times\"></i></button>\n                            </div>\n                        </div>\n\n                        <form onSubmit={onSubmit}>\n                            <ul>\n                                <li>\n                                    <input className=\"form-styling\"\n                                        placeholder=\"이메일 입력\"\n                                        autoCapitalize=\"false\"\n                                        name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                </li>\n                                {\n                                    ['login', 'join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 입력\"\n                                            name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                    </li>\n                                }\n                                {\n                                    ['join'].includes(viewMode) &&\n                                    <li>\n                                        <input className=\"form-styling\"\n                                            placeholder=\"비밀번호 확인\"\n                                            name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                    </li>\n                                }\n\n                            </ul>\n                            {/* <table>\n                                <tbody>\n                                    <tr>\n                                        <td>이메일</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"email\" type=\"text\" onChange={onChange} value={inputEmail}></input>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>비밀번호</td>\n                                        <td>\n                                            <input className=\"form-styling\" name=\"pw\" type=\"password\" onChange={onChange} value={inputPw}></input>\n                                        </td>\n                                    </tr>\n                                    {\n                                        newAccount && <>\n                                            <tr>\n                                                <td>비밀번호 확인</td>\n                                                <td>\n                                                    <input className=\"form-styling\" name=\"pw2\" type=\"password\" onChange={onChange} value={inputPw2}></input>\n                                                </td>\n                                            </tr>\n                                        </>\n                                    }\n                                </tbody>\n                            </table> */}\n                            <button className=\"btn-login\">{btnLabel[viewMode]}</button>\n                        </form>\n                        {\n                            ['login', 'join'].includes(viewMode) &&\n                            <div className=\"footer-pw\">\n                                <button className=\"btn btn-underline\" onClick={() => {\n                                    // setNewAccount(true);\n                                    setViewMode('findpw')\n                                    // fbase.sendPasswordResetEmail(inputEmail);\n                                }}>비밀번호를 잊으셨나요?</button>\n                            </div>\n                        }\n\n                        {/* <AuthLoginUI /> */}\n                    </div>\n                    {/* <FindPassword /> */}\n                </div>\n\n            }\n\n\n        </div>\n    );\n};\n\nconst AuthLoginUI = () => {\n\n    const [stepCD, setStepCD] = useState('signin');\n\n    return (\n        <div className=\"AuthLoginUI\">\n            <div className=\"kareui-template-04 kareui-wrapper\">\n\n                <div className=\"section-top\">\n                    <div className=\"btn-group\">\n                        <div className=\"nav nav-tabs\">\n                            <div onClick={() => {\n                                setStepCD('signin');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signin\" }])}>\n                                로그인\n\t\t\t\t\t        </div>\n                            <div onClick={() => {\n                                setStepCD('signup');\n                            }} className={classnames([\"nav-item\", { \"active\": stepCD === \"signup\" }])}>\n                                회원가입\n\t\t\t\t\t        </div>\n                        </div>\n                        <div className=\"nav-active\">\n                            <div className={classnames([\"underline\", stepCD])}></div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className={`tab-content ${stepCD}`}>\n\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signin\" }])} id=\"signin\">\n\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n                            {/* <label htmlFor=\"username\">사용자이메일</label> */}\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n                            <label htmlFor=\"password\">비밀번호</label>\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호\" />\n\n                            <button className=\"btn-login\">\n                                로그인하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                    <div className={classnames([\"tab-pane\", { \"active\": stepCD === \"signup\" }])} id=\"signup\">\n                        <form className=\"section form-box\" action=\"\" method=\"post\" name=\"form\">\n\n                            <input className=\"form-styling\" type=\"text\" name=\"username\" placeholder=\"사용자 이메일\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"email\" placeholder=\"비밀번호\" />\n\n                            <input className=\"form-styling\" type=\"text\" name=\"password\" placeholder=\"비밀번호 확인\" />\n\n                            <button className=\"btn-login\">\n                                회원가입하기\n\t\t\t\t\t</button>\n                        </form>\n\n                        <div className=\"forgot\">\n                            <a href=\"#\">비밀번호를 잊으셨나요?</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst FindPassword = () => {\n    return (\n        <div>\n            <input placeholder=\"이메일 입력\" autoCapitalize=\"false\"></input>\n\n\n            <button onClick={() => {\n                const emailStr = \"macaoshu@gmail.com\";\n                // authService.sendPasswordResetEmail(emailStr).then(() => {\n                //     alert(`입력하신 ${emailStr}로 발송한 메일을 확인해주세요.`)\n                // }).catch((error: any) => {\n                //     const errorMessage = error.errorMessage;\n                //     alert('ERROR : ' + errorMessage);\n                // });\n            }}>비밀번호찾기</button>\n        </div>\n    )\n}\n\nexport default FBViewLogout;","\nimport React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from './fbase';\nimport FBViewLogin from './FBViewLogin';\nimport FBViewLogout from './FBViewLogout';\n// import \"./FBState.scss\";\n\nconst FBState = () => {\n\n    const [checkedLogin, setCheckedLogin] = useState(false);\n    const [update, setUpdate] = useState(0);\n    useEffect(() => {\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, (userInfo: any) => {\n            console.log('Event.ON_AUTH_STATE_CHANGED')\n            setCheckedLogin(true);\n            setUpdate(Math.random());\n        });\n        fbase.initLogin();\n\n    }, []);\n\n    return (\n        <div className=\"FBState\">\n            {\n                checkedLogin\n                    ?\n                    fbase.userInfo ? <FBViewLogin /> : <FBViewLogout />\n                    :\n                    <div>loading...</div>\n            }\n        </div>\n    );\n};\n\nexport default FBState;","import classnames from 'classnames';\nimport qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport data from '../core/data';\nimport { isYTModuleState, mainMenuState } from '../core/store';\nimport FBState from '../fb/FBState';\n\nconst Header = () => {\n    const isYTModule = useRecoilValue(isYTModuleState);\n    const [mainMenu, setMainMenu] = useRecoilState(mainMenuState);\n    const [viewType, setViewType] = useState('');\n    useEffect(() => {\n        const href = window.location.href;\n\n        // let queryViewMode = '';\n        // 암호화 url인 경우\n        // if (href.indexOf('?d=') > 0) {\n        //     const decryptQuery = data.parseQuery();\n\n        // } else {\n        //     const query = qs.parse(data.getOnlyquerystring());\n\n        // }\n\n        if (href.indexOf('#/ert') != -1) {\n\n            setViewType('ert');\n        }\n\n    }, [])\n\n    return (\n        <>\n            {!isYTModule && <>\n                <div className=\"Header\">\n                    <div className=\"safe-area\"></div>\n                    <div className=\"utils-layout-marginauto0 header-in\">\n                        <div className=\"div1\">\n                            {\n                                viewType === 'ert'\n                                    ?\n                                    <>\n                                        <div className=\"logo\" onClick={() => {\n                                            data.gotoPage('ert', '');\n                                        }}>\n                                            <i className=\"fas fa-compact-disc i-icon fa-spin\"></i>\n                                            <span className=\"str-ko\">카셋 문장 만들기</span>\n                                        </div>\n                                    </>\n                                    :\n                                    <>\n                                        <div className=\"logo\" onClick={() => {\n                                            data.gotoPage('home', '');\n                                        }}>\n                                            <i className=\"fas fa-compact-disc i-icon fa-spin\"></i>\n                                            <span className=\"str-ko\">카셋 대본 영어</span>\n                                        </div>\n                                    </>\n                            }\n\n                            <div className=\"user-info\">\n                                <FBState />\n                            </div>\n                        </div>\n                        {/* <ul className=\"div2\">\n                            <li onClick={() => {\n                                setMainMenu('shadowing');\n                                data.gotoPage('home', '');\n                            }} className={classnames(\"menu\", { active: mainMenu === 'shadowing' })}>\n                                말하기/듣기<span className=\"small\">(쉐도잉)</span>\n                                <div className=\"line\"></div>\n                            </li>\n                            <li onClick={() => {\n                                setMainMenu('writing');\n                                data.gotoPage('ert', '');\n                            }} className={classnames(\"menu\", { active: mainMenu === 'writing' })}>\n                                쓰기<span className=\"small\">(영작문)</span>\n                                <div className=\"line\"></div>\n                            </li>\n                        </ul> */}\n\n                    </div>\n                </div></>}\n        </>\n    )\n};\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport data from '../core/data';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase, { authService } from '../fb/fbase';\n\nconst Mypage = () => {\n    const [isCheckedAuth, setisCheckedAuth] = useState(false);\n    const checkLoginUser = () => {\n        if (!fbase.userInfo) {\n            alert('로그인 후 이용 가능한 페이지입니다.')\n            // 홈으로 \n            data.gotoPage('home', '');\n        }\n    }\n    useEffect(() => {\n        // 이게먼저호출될지 userInfo가 먼저로드될지 몰라 아래처럼 구성\n        // data.setClipHistory(tpid);\n        // firebase데이터 로드해서 구성완료 후에 topic history Sync\n        EventEmitter.subscribe(Event.ON_AUTH_STATE_CHANGED, () => {\n            setisCheckedAuth(true);\n            checkLoginUser();\n\n        });\n        if (fbase.userInfo !== 'loading') {\n            setisCheckedAuth(true);\n            checkLoginUser();\n        }\n\n    }, []);\n    const currSubsArr: string[] = fbase.currentAvailableSubscriptionInfo();\n    const [inputCode, setInputCode] = useState('');\n    const onChangeInput = (e: any) => {\n        setInputCode(e.target.value);\n    }\n\n    return (\n        <div className=\"Mypage\">\n\n            <div className=\"group-user\">\n                <div className=\"user\">{fbase.userInfo && fbase.userInfo.email && fbase.userInfo.email.split('@')[0]}</div>\n                <div><button className=\"btn btn-border round\" onClick={() => {\n                    authService.signOut().then(() => {\n                        (window as any).location.href = \"/\";\n                    });\n                }}>로그아웃</button></div>\n            </div>\n            <div className=\"divide-line\"></div>\n            <div className=\"group\">\n                <div className=\"title\">프리패스</div>\n                <div className=\"content content-sub\">\n                    {isCheckedAuth && <SubscriptionHistory arr={currSubsArr} />}\n                </div>\n            </div>\n            <div className=\"divide-line\"></div>\n            <div className=\"group\">\n                <div className=\"title\">프리패스 구매처</div>\n                <div className=\"content content-buy\">\n                    <a className=\"btn btn-border btn-smartstore\" href=\"https://smartstore.naver.com/casete\" target=\"_blank\">네이버스토어 바로가기</a>\n                </div>\n            </div>\n            <div className=\"divide-line\"></div>\n            <div className=\"group\">\n                <div className=\"title\">프리패스 등록</div>\n                <div className=\"content content-input\">\n                    <div className=\"input-code\">\n                        <input value={inputCode} onChange={onChangeInput} placeholder=\"프리패스 코드 입력\"></input>\n                    </div>\n                    <div className=\"input-btn\">\n                        <button className=\"btn btn-border\" onClick={() => {\n                            fbase.submitCouponCode(inputCode, 'mypage');\n\n                        }}>등록확인</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst SubscriptionHistory = ({ arr }: { arr: string[] }) => {\n    const Comp = arr.map((item: string, i: number) => {\n        const arr = item.split('##');\n        return <li className=\"terms\">{\n            `${data.dateMyFormat(arr[1])} ~ ${data.dateMyFormat(arr[2])}`\n        }</li>\n    })\n    return (\n        <>\n            {\n                arr.length > 0\n                    ?\n                    <div>\n                        <div className=\"freepassuser\"><i className=\"far fa-laugh\"></i>유지중</div>\n                        <ul className=\"list\">\n                            {Comp}\n                        </ul>\n                    </div>\n\n                    :\n                    <div><i className=\"far fa-laugh\"></i>무료 이용 중</div>\n            }\n\n        </>);\n}\n\nexport default Mypage;","import classnames from 'classnames';\nimport dayjs from 'dayjs';\nimport { css } from 'emotion';\nimport React, { useState } from 'react';\nimport { atom, useRecoilState, useRecoilValue } from 'recoil';\n\nconst sentenseCntHistory: any = {\n    \"2020\": [\n        [2, 0, 100,],\n        null,\n        [],\n    ],\n    \"2021\": [\n        [4, 0, 120, null, 10, 0, 0, 0, 3, 2, 3],\n        null,\n        [],\n    ]\n}\n\nconst updateCntHistory = (inDay: string, inPlusCnt: number) => {\n    // year\n    let yearArr = sentenseCntHistory[inDay.substr(0, 4)];\n    if (!yearArr) yearArr = sentenseCntHistory[inDay.substr(0, 4)] = [];\n    // month\n    let monthArr = yearArr[parseInt(inDay.substr(4, 2)) - 1];\n    // console.log('tempa-- ',monthArr)\n    if (!monthArr) monthArr = yearArr[parseInt(inDay.substr(4, 2)) - 1] = [];\n    // day\n    let dayNum = monthArr[parseInt(inDay.substr(6, 2)) - 1];\n    if (!dayNum) dayNum = 0;\n    monthArr[parseInt(inDay.substr(6, 2)) - 1] = dayNum + inPlusCnt;\n\n}\nconst goalCnt: number = 20;\nconst currentDateState = atom({\n    key: \"currentDateState\",\n    default: dayjs.utc().local(),\n})\n\nconst PageRecord = () => {\n    const [update, setUpdate] = useState(0);\n    return (\n        <div className=\"PageRecord\">\n            <div className=\"calendar\">\n                <div>\n                    <CalNav />\n                </div>\n                <div className=\"cal-table\">\n                    <WeekHeader />\n                    <WeekDays />\n                </div>\n\n                {/* <div>\n                    guide 조금만 더 노력해요\n                    목표 달성중이네요 이대로 쭉쭉\n                </div> */}\n\n                <button onClick={() => {\n                    updateCntHistory(\"20210127\", 1);\n                    setUpdate(Math.random());\n\n                }}>오늘+1</button>\n            </div>\n        </div>\n    );\n};\nconst CalNav = () => {\n    const [currentDate, setCurrentDate] = useRecoilState(currentDateState);\n    let todayStr = currentDate.format('YYYY.MM');\n    return (\n        <div className=\"CalNav\">\n            <div className=\"child l\">\n                <button className=\"btn\" onClick={() => {\n                    setCurrentDate(currentDate.add(-1, \"month\"));\n                }}><i className=\"fas fa-arrow-alt-circle-left\"></i></button>\n            </div>\n            <div className=\"child c\">{todayStr}</div>\n            <div className=\"child r\">\n                <button className=\"btn\" onClick={() => {\n                    setCurrentDate(currentDate.add(1, \"month\"));\n                }}><i className=\"fas fa-arrow-alt-circle-right\"></i></button>\n            </div>\n        </div>\n    )\n}\n\nconst WeekHeader = () => {\n\n    return (\n        <>\n            {/* temp <div>\n                다짐 : 나는 매일 100개의 문장을 반복 한다!\n                <div>수정</div>\n            </div> */}\n\n            <ul className=\"tr-week th-week\">\n                <li className=\"td-day\">S</li>\n                <li className=\"td-day\">M</li>\n                <li className=\"td-day\">T</li>\n                <li className=\"td-day\">W</li>\n                <li className=\"td-day\">T</li>\n                <li className=\"td-day\">F</li>\n                <li className=\"td-day\">S</li>\n            </ul>\n        </>\n\n    );\n}\ntype DayDisplayInfo = {\n    date: Date,\n    repeatPercent: number,\n    repeatCnt: number,// 문장 반복 횟수\n}\n\nconst Day = ({ info, classarr }: { info: DayDisplayInfo, classarr: string[] }) => {\n    let dateStr = info.date.getDate();\n\n    if (info.repeatPercent > 100) info.repeatPercent = 100;\n    return (<li className={classnames(classarr.concat([\"td-day\"]))}>\n        <div>{dateStr}</div>\n        <div className=\"graph-border\">\n            <div className=\"cnt\">{info.repeatCnt > 0 ? info.repeatCnt : ''}</div>\n            <div className={classnames(\"graph-bar\", css`\n                width: ${info.repeatPercent}%;\n            `)}></div>\n        </div>\n    </li>);\n}\n\nconst dateBeforeDays = (date: Date, days: number) => {\n    return new Date((date as Date).getTime() - 60 * 60 * 24 * 1000 * days);\n}\nconst getDayDisplayInfo = (inDayInfo: Date): DayDisplayInfo => {\n    // sentenseCntHistory\n    const nyear = inDayInfo.getFullYear();\n    const nmonth = inDayInfo.getMonth();\n    const nday = inDayInfo.getDate();\n    let repeatCnt = 0;\n    try {\n        repeatCnt = sentenseCntHistory[nyear][nmonth][nday - 1];\n    } catch (e) {\n\n    }\n    if (!repeatCnt) repeatCnt = 0;\n    return {\n        date: inDayInfo,\n        repeatCnt: repeatCnt,\n        repeatPercent: (repeatCnt / goalCnt) * 100,\n    }\n\n}\nconst WeekDays = () => {\n    const currentDate = useRecoilValue(currentDateState);\n    const Days: any = [];\n    const showDate = new Date(currentDate.format('YYYY-MM-DD'));\n    const firstDate = new Date(showDate.getFullYear(), showDate.getMonth(), 1); // 시작일\n    const lastDate = new Date(\n        showDate.getFullYear(),\n        showDate.getMonth() + 1,\n        0\n    ).getDate(); // 마지막일\n    let firstWeek = firstDate.getDay();\n\n    for (let i = 1, max = 7 * 6; i <= max; i++) {\n        let dateData: Date;\n        let dayNum: number;\n        let classArr: Array<string> = [];\n\n        // ? 날짜버튼에 넣을 Date 객체 생성, 지난달, 다음달 구분 class 추가\n        if (i <= firstWeek) {\n            // 지난달 - 날짜 계산\n            dayNum = dateBeforeDays(firstDate, Math.abs(i - firstWeek - 1)).getDate(); // 증가값 - 시작요일 - 1;\n            dateData = dateBeforeDays(firstDate, Math.abs(i - firstWeek - 1));\n            classArr.push('before');\n        } else if (i > firstWeek + lastDate) {\n            // 다음달\n            dayNum = i - firstWeek - lastDate; // 증가값 - 시작요일 - 마지막날짜;\n            dateData = new Date(showDate.getFullYear(), showDate.getMonth() + 1, dayNum);\n            classArr.push('after');\n        } else {\n            // 이번달\n            dayNum = i - firstWeek; // 증가값 - 시작요일;\n            dateData = new Date(showDate.getFullYear(), showDate.getMonth(), dayNum); // 시작일\n        }\n\n\n\n        Days.push(\n            <Day info={getDayDisplayInfo(dateData)}\n                classarr={classArr}\n                key={String(dayNum)}\n            />\n        );\n    }\n    return (<div>\n        <ul className=\"tr-week\">{Days.slice(0, 7)}</ul>\n        <ul className=\"tr-week\">{Days.slice(7, 14)}</ul>\n        <ul className=\"tr-week\">{Days.slice(14, 21)}</ul>\n        <ul className=\"tr-week\">{Days.slice(21, 28)}</ul>\n        <ul className=\"tr-week\">{Days.slice(28, 35)}</ul>\n        <ul className=\"tr-week\">{Days.slice(35, 42)}</ul>\n    </div>);\n}\n\n\n\nexport default PageRecord;","import React from 'react';\nimport \"./scss/PageCSSHamburger.scss\";\n\nconst PageCSSHamburger = () => {\n    return (\n        <div className=\"PageCSSHamburger\">\n            <div className=\"hamburger\">\n                <input type=\"checkbox\"></input>\n                <span></span>\n                <span></span>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default PageCSSHamburger;","import React, { useEffect, useState } from 'react';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\n\nlet interval: any = null;\nconst ToastAlert = () => {\n    const [info, setInfo] = useState({\n        message: '',\n        mtime: 0,\n    });\n    useEffect(() => {\n        EventEmitter.subscribe(Event.SHOW_TOAST_MESSAGE, (option: {\n            message: string,\n            mtime: number\n        }) => {\n            setInfo(option);\n            if (option.mtime === 0) {\n                option.mtime = 3000;\n            }\n            if (interval) {\n                clearInterval(interval);\n            }\n            interval = setInterval(() => {\n                clearInterval(interval);\n                setInfo({\n                    message: '',\n                    mtime: 0,\n                })\n            }, option.mtime)\n        });\n    }, [])\n    return (\n        <div className={classnames(\"ToastAlert\", css`\n            bottom:${info.message === '' ? '-100px' : '20px'}\n        `)}>\n            {info.message}\n        </div>\n    );\n};\n\nexport default ToastAlert;","import classnames from 'classnames';\nimport { shuffle as _shuffle } from 'lodash';\nimport React, { useState } from 'react';\n\ntype TWord = {\n    word: string,\n    oriIdx: number,\n}\n// let sentense = \"\";\n// let sentenseSplit: string[] = [];\n// let correctArr: string[] = [];// 답안지\n// let shuffleWords: TWord[] = [];\n\nconst MDictation2 = ({\n    sentenseEn,\n    sentenseKo,\n}: {\n    sentenseEn: string,\n    sentenseKo: string,\n}) => {\n    // 문장이 달라진 경우만\n    sentenseEn = sentenseEn.trim()\n    // if (sentense !== sentenseEn) {\n    //     sentense = sentenseEn;\n    //     sentenseSplit = sentense.split(' ');\n    //     correctArr = sentenseSplit.slice(0);// 답안지\n    //     shuffleWords = _shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n    //         return {\n    //             word: item,\n    //             oriIdx: i,\n    //         }\n    //     }));\n    // }\n\n    const [sentenseSplit, setsentenseSplit] = useState(sentenseEn.split(' '));\n    const [submitIdx, setSubmitIdx] = useState(0);\n    const [submitArr, setSubmitArr] = useState<string[]>([]);\n    const [hintIdx, setHintIdx] = useState(-1);\n    const [message, setMessage] = useState('');\n    const [isComplete, setIsComplete] = useState(false);\n    const [correctArr, setCorrectArr] = useState(sentenseSplit.slice(0));\n    const [shuffleWords, setshuffleWorlds] = useState(_shuffle(sentenseSplit.map((item: string, i: number): TWord => {\n        return {\n            word: item,\n            oriIdx: i,\n        }\n    })));\n\n\n\n    const blanks = sentenseSplit.map((item: string, i: number) => {\n        const submitWord = submitArr[i];\n        return <div key={i} className=\"word-blank\"><span className={classnames([\"word-field\", { \"is-correct\": submitWord }])}>{item}</span></div>\n    })\n\n    const WordChips = shuffleWords.map((item: TWord, i: number) => {\n        const { word, oriIdx } = item;\n        const dpWord = (() => {\n            return word.replace(/\\,|\\.|\\-|\\?/g, '').toLowerCase();\n        })();\n        return <button key={i} onClick={() => {\n            // 하나가 대분자인경우 비교가 안되므로 소문자로 변환비교\n            if (correctArr[submitIdx].toLowerCase() === word.toLowerCase()) {\n                // setMessage('정답');\n                // setTimeout(() => {\n                //     setMessage('');\n                // }, 2000)\n            } else {\n                setMessage('오답~!');\n                setTimeout(() => {\n                    setMessage('');\n                }, 1500)\n                return;\n            }\n\n            const cloneArr: string[] = submitArr.slice(0);\n            cloneArr[submitIdx] = word;\n            setSubmitArr(cloneArr);\n            setSubmitIdx(submitIdx + 1);\n            if (correctArr.length === cloneArr.length) {\n                setMessage('정답 !!');\n                setIsComplete(true);\n                setTimeout(() => {\n                    setMessage('');\n                }, 2000)\n            }\n        }} className={classnames([\"word\", { \"shake\": hintIdx === oriIdx }, { \"is-done\": submitIdx > oriIdx }])}><span className=\"word-field\">{dpWord}</span></button>\n    });\n\n    console.log('rrrennnder');\n\n    return (\n        <div className=\"MDictation2\">\n            <div>{sentenseKo}</div>\n            <div className=\"blanks\">\n                {blanks}\n            </div>\n            {/* <div className=\"sentenseKo\">\n                {sentenseKo}\n            </div> */}\n            <div className=\"words\">\n                {!isComplete && WordChips}\n            </div>\n            <div className=\"ditaction-func\">\n                {!isComplete && <button onClick={() => {\n                    setHintIdx(submitIdx);\n                    setTimeout(() => {\n                        setHintIdx(-1);\n                    }, 1000)\n                }} className=\"btn btn-hint\"><i className=\"fas fa-search\"></i>힌트확인</button>}\n                {submitArr.length > 0 && <button onClick={() => {\n                    setSubmitArr([]);\n                    setSubmitIdx(0);\n                    setHintIdx(-1);\n                    setMessage('');\n                    setIsComplete(false);\n                }} className=\"btn btn-restart\"><i className=\"fas fa-redo-alt\"></i>초기화</button>}\n            </div>\n            {message !== '' && <div onClick={() => {\n                setMessage('');\n            }} className=\"message message-ani\">\n                <div className=\"flex-box\">\n                    <div className=\"message-box\">\n                        <div>{message}</div>\n\n                    </div>\n                </div>\n\n            </div>}\n        </div>\n    );\n};\n\nexport default MDictation2","import classnames from 'classnames';\nimport { css } from 'emotion';\nimport qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport { atom, useRecoilValue, useSetRecoilState } from 'recoil';\nimport stringSimilarity from 'string-similarity';\nimport MDictation2 from '../components/MDictation2';\nimport data from '../core/data';\nimport { mainMenuState } from '../core/store';\n// import CourseERTMain from './CourseERTMain';\n\ntype TCheckedEnKo = {\n    \"tag\": string,\n    \"en\": string,\n    \"en_\": string,\n    \"ko\": string,\n    \"words\": any,\n    \"pattern\": string,\n}\nlet ertjson: {\n    info: any,\n    sentense: TCheckedEnKo[]\n} = require('../resource/tempert.json')\n\n// let currentWCID = 'ertCourse001';\nlet currErtid = '';\n\nconst coursePrimaryStruct = {\n    \"sentenseDoneArr\": []\n}\n\nlet storageData: any = {\n    ertCourse001: {\n        \"sentenseDoneArr\": []\n    }\n}\nconst updateDoneItemState = atom({\n    key: \"updateDoneItemState\",\n    default: 0,\n})\n\nconst initStorageState = () => {\n    // ertCourse001\n    let getData = (window as any).localStorage.getItem('ertdata');\n    if (!getData) {\n        // 최초\n        storageData = {};\n        if (!storageData[currErtid]) storageData[currErtid] = Object.assign({}, coursePrimaryStruct);\n        // getData = storageData[currentWCID];\n    } else {\n        // 이미 있었던 경우\n        storageData = JSON.parse(getData);\n        // 코스 구조가 누락된 경우 보정\n        if (!storageData[currErtid]) storageData[currErtid] = Object.assign({}, coursePrimaryStruct);\n    }\n    syncStorageState();\n}\nconst syncStorageState = () => {\n    (window as any).localStorage.setItem(\"ertdata\", JSON.stringify(storageData));\n\n}\n\nconst setDoneItem = (inWCID: string, itemIdx: number) => {\n    const checkDouble = storageData[inWCID].sentenseDoneArr.filter((item: number) => {\n        return item !== itemIdx;\n    })\n    storageData[inWCID].sentenseDoneArr = checkDouble;// 중복 제거 후\n    storageData[inWCID].sentenseDoneArr.push(itemIdx);// 저장\n    syncStorageState();\n}\nconst setUndonItem = (inWCID: string, itemIdx: number) => {\n    const checkDouble = storageData[inWCID].sentenseDoneArr.filter((item: number) => {\n        return item !== itemIdx;\n    })\n    storageData[inWCID].sentenseDoneArr = checkDouble;// 중복 제거\n    syncStorageState();\n}\nconst CourseERT = () => {\n    const updateDoneItem = useRecoilValue(updateDoneItemState);\n    const [viewMode, setViewMode] = useState('study');\n    const [isData, setisData] = useState(false);\n    const setMainMenu = useSetRecoilState(mainMenuState);\n    useEffect(() => {\n        setMainMenu('writing');\n\n        // http://localhost:9822/#/ert?ertid=normalC1\n\n        // alert(currErtid);\n        const href = window.location.href;\n\n        let queryViewMode = '';\n        // 암호화 url인 경우\n        if (href.indexOf('?d=') > 0) {\n            const decryptQuery = data.parseQuery();\n            let cid = (decryptQuery && decryptQuery.cid) ? decryptQuery.cid : '';\n            let tpid = (decryptQuery && decryptQuery.tpid) ? decryptQuery.tpid : '';\n            queryViewMode = (decryptQuery && decryptQuery.mode) ? decryptQuery.mode : '';\n\n            data.getTopicJSON(cid, tpid).then((result: any) => {\n                ertjson = result.data;\n                currErtid = tpid;\n                // 스토리지 정보 초기화\n                initStorageState();\n                setisData(true);\n            }).catch((err: any) => {\n                currErtid = '';\n                // 코스 로드 오류\n            });\n        } else {\n            const query = qs.parse(data.getOnlyquerystring());\n            currErtid = (query && query.ertid) ? query.ertid as string : '';\n            if (currErtid) {\n                data.getERTJSON(currErtid).then((result: any) => {\n                    ertjson = result.data;\n                    // 스토리지 정보 초기화\n                    initStorageState();\n                    setisData(true);\n                }).catch((err: any) => {\n                    currErtid = '';\n                    // 코스 로드 오류\n                });\n\n            } else {\n                currErtid = '';\n                // 코스 아이디 없음\n\n            }\n        }\n        if (queryViewMode) {\n            setViewMode(queryViewMode);\n        }\n\n    }, []);\n\n    return (\n        <div className=\"CourseERT\">\n            <ul className=\"tabs\">\n                <li className={classnames([\"tab\", { active: viewMode === 'study' }])} onClick={() => {\n                    setViewMode('study');\n                }}>스터디모드</li>\n                <li className={classnames([\"tab\", { active: viewMode === 'testease' }])} onClick={() => {\n                    setViewMode('testease');\n                }}><div>테스트모드<br></br>\n                        <span className=\"small\">(easy)</span></div></li>\n                <li className={classnames([\"tab\", { active: viewMode === 'testhard' }])} onClick={() => {\n                    setViewMode('testhard');\n                }}><div>테스트모드<br></br>\n                        <span className=\"small\">(hard)</span></div></li>\n            </ul>\n            {\n                isData && <>\n                    <CompleteItem />\n                    {viewMode === 'study' && <ListMode />}\n                    {viewMode === 'testease' && <TestEaseMode />}\n                    {viewMode === 'testhard' && <TestHardMode />}\n                </>\n            }\n        </div>\n\n    );\n};\nconst CompleteItem = () => {\n    const doneArr = storageData[currErtid].sentenseDoneArr.length;\n    return (<div className=\"CompleteItem\">\n        <div className=\"gauge-group\">\n            <div className=\"txt\">\n                {\n                    doneArr > 0 && <>\n                        완료{doneArr}\n                        <span className=\"divide\">/</span>\n                    </>\n                }\n                <span className=\"tot\">총{ertjson.sentense.length}</span></div>\n            <div className={classnames([\"gauge\", css`\n                width: ${(doneArr / ertjson.sentense.length) * 100}%\n            `])}></div>\n        </div>\n    </div>);\n}\n\nconst PrintMode = () => {\n    const Compo = ertjson.sentense.map((item: TCheckedEnKo, i: number) => {\n        return <tr>\n            <td className=\"td1\">{i + 1}</td>\n            <td className=\"td2\">\n                {item.ko}<br></br>\n                <span className=\"placeholder\">→ 작문</span>\n\n            </td>\n            <td className=\"td3\">\n                <div>\n                    <div className=\"check-box ex\">√</div>\n                    <div className=\"check-box\">v</div>\n                    <div className=\"check-box\">v</div>\n                    <div className=\"check-box\">v</div>\n                    <div className=\"check-box\">v</div>\n                </div>\n            </td>\n            <td className=\"td4\">{item.en}</td>\n            <td className=\"td5\">&nbsp;</td>\n        </tr>\n    })\n    return (<div className=\"PrintMode\">\n        <button onClick={() => {\n            (window as any).printScript('#table-english-writing');\n        }}>저장</button>\n        <table className=\"print-table\" id=\"table-english-writing\">\n            <thead>\n                <td>no</td>\n                <td>한글 → 영어</td>\n                <td>체크</td>\n                <td>영어</td>\n                <td></td>\n            </thead>\n            <tbody>\n                {Compo}\n            </tbody>\n        </table>\n\n    </div>);\n}\nconst ListMode = () => {\n    const Compo = ertjson.sentense.map((item: TCheckedEnKo, i: number) => {\n        return <ListModeItem data={item} idx={i} key={`ListModeItem${i}`} />\n    })\n    return (<ul className=\"ListMode\">\n        {Compo}\n    </ul>);\n}\n\nconst ListModeItem = ({ data, idx }: { data: TCheckedEnKo, idx: number }) => {\n    const [isBack, setIsBack] = useState(false);\n    // let isDone = storageData[currErtid].sentenseDoneArr.includes(idx);\n    const [thisDone, setThisDone] = useState(storageData[currErtid].sentenseDoneArr.includes(idx))\n    const setupdateDoneItem = useSetRecoilState(updateDoneItemState);\n    // 완료\n    const setDone = (inWCID: string, inIdx: number) => {\n        setDoneItem(inWCID, inIdx);\n\n        setTimeout(() => {\n            setupdateDoneItem(Math.random());\n            setThisDone(true);\n        }, 100);\n    }\n    // 완료 해제\n    const setUndone = (inWCID: string, inIdx: number) => {\n        setUndonItem(inWCID, inIdx);\n        setTimeout(() => {\n            // setenInput('');\n            // setisChecked(false);\n            setupdateDoneItem(Math.random());\n            setThisDone(false);\n        }, 100);\n    }\n    const turn = () => {\n        if (thisDone) return;\n        setIsBack(!isBack);\n    }\n    return (<li>\n        <div className={classnames([\"flip-box\", { back: isBack }, css`\n            height: 200px !important;\n        `])}>\n            <div className={classnames([\"flip-box-inner\", { done: thisDone }])}>\n                <div className=\"flip-box-front\">\n                    {/* {isDone && <div className=\"done\">완료</div>} */}\n                    <div className=\"flip-box-in\">\n                        <div className=\"top\" onClick={() => {\n                            turn();\n                        }}><div className=\"no\">{idx + 1}</div></div>\n                        <div className=\"middle\" onClick={() => {\n                            turn();\n                        }}>{data.ko}</div>\n                        <div className=\"footer\">\n                            {\n                                thisDone\n                                    ?\n                                    <div className=\"done\">\n                                        <span className=\"label-done\">완료</span>\n                                        <button className=\"btn btn-border btn-redo\" onClick={() => {\n                                            setUndone(currErtid, idx);\n                                        }}><i className=\"fas fa-redo\"></i>다시복습</button>\n                                    </div>\n                                    :\n                                    <div className=\"study\">\n                                        <button className=\"btn btn-done\" onClick={() => {\n                                            setDone(currErtid, idx);\n                                        }}><i className=\"fas fa-check-circle\"></i>완료처리</button>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n\n\n                </div>\n                <div className=\"flip-box-back\">\n                    <div className=\"flip-box-in\">\n                        <div className=\"top\" onClick={() => {\n                            turn();\n                        }}><div className=\"no\">{idx + 1}</div></div>\n                        <div className=\"middle\" onClick={() => {\n                            turn();\n                        }}>{data.en}</div>\n                        <div className=\"footer\"></div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </li>);\n}\n\nconst getLevel = (tagStr: string) => {\n\n    if (!tagStr) return '';\n    if (tagStr.includes('lv1')) return 'lv1';\n    if (tagStr.includes('lv2')) return 'lv2';\n    if (tagStr.includes('lv3')) return 'lv3';\n    if (tagStr.includes('lv4')) return 'lv4';\n    if (tagStr.includes('lv5')) return 'lv5';\n    return '';\n}\n\nconst TestEaseMode = () => {\n    const CompSentenseItem = ertjson.sentense.map((item: any, i: number) => {\n        return <SentenseEaseItem data={item} key={'SentenseItem' + i} idx={i} />\n    })\n    return (<div className=\"TestMode\">\n        <ul className=\"test-cards\">\n            {CompSentenseItem}\n        </ul>\n        <button>이전</button>\n        <button>다음</button>\n    </div>);\n}\n\nconst TestHardMode = () => {\n    const CompSentenseItem = ertjson.sentense.map((item: any, i: number) => {\n        return <SentenseHardItem data={item} key={'SentenseItem' + i} idx={i} />\n    })\n    return (<div className=\"TestMode\">\n        <ul className=\"test-cards\">\n            {CompSentenseItem}\n        </ul>\n\n    </div>);\n}\n\nconst SentenseHardItem = ({ data, idx }: { data: TCheckedEnKo, idx: number }) => {\n    // isDone : 완전 학습 완료\n    // isChecked : 체크만 완료\n    const [enInput, setenInput] = useState('');\n    const setupdateDoneItem = useSetRecoilState(updateDoneItemState);\n    const onChange = (e: any) => {\n        setenInput(e.target.value);\n    }\n    const onEnterPress = (e: any) => {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            setisChecked(true);\n        }\n    }\n    const [isChecked, setisChecked] = useState(false);\n    const [showHint2, setShowHint2] = useState(false);\n    const [thisDone, setThisDone] = useState(false);\n    const lv = getLevel(data.tag);\n    const correctPercent = parseInt(String(stringSimilarity.compareTwoStrings(data.en, enInput) * 100));\n    // 완료\n    const setDone = (inWCID: string, inIdx: number) => {\n        setDoneItem(inWCID, inIdx);\n        setShowHint2(false);\n        setTimeout(() => {\n            setupdateDoneItem(Math.random());\n            setThisDone(true);\n        }, 100);\n    }\n    // 완료 해제\n    const setUndone = (inWCID: string, inIdx: number) => {\n        setUndonItem(inWCID, inIdx);\n        setTimeout(() => {\n            setenInput('');\n            setisChecked(false);\n            setupdateDoneItem(Math.random());\n            setThisDone(false);\n        }, 100);\n    }\n    let isDone = storageData[currErtid].sentenseDoneArr.includes(idx) || thisDone;\n    let stateClass: 'wrong' | 'correct' | 'done' | '' = '';\n    // 체크 완료\n    if (isChecked) {\n        if (correctPercent > 94) {\n            stateClass = 'correct';\n        } else {\n            stateClass = 'wrong';\n        }\n    }\n    if (isDone) stateClass = 'done';\n    return (<li className={classnames([\"card\", stateClass])}>\n        <div className=\"no\">{idx + 1}</div>\n        <div className=\"card-in\">\n\n            <span className=\"display-none\">{thisDone}</span>\n            <div>\n                {/* <div className=\"label\">한글</div> */}\n                {data.ko}\n            </div>\n            {\n                isDone\n                    ?\n                    <div>{data.en}</div>\n                    :\n                    <>\n                        {\n                            isChecked\n                                ?\n                                <div className=\"check-result\">\n                                    <div className=\"label\">입력 결과</div>\n                                    <CheckedEnKoA data={data} enInput={enInput} key={`sent1_${idx}`} type=\"x\" />\n                                    <div className=\"label\">정답({correctPercent}% 일치)</div>\n                                    {correctPercent > 80 && <button className=\"btn btn-border btn-done\" onClick={() => {\n                                        setDone(currErtid, idx)\n                                    }}><i className=\"fas fa-check-circle\"></i>완료처리</button>}\n\n                                    <CheckedEnKoA data={data} enInput={enInput} key={`sent2_${idx}`} type=\"o\" />\n                                </div>\n                                :\n                                <div className=\"check-before\">\n                                    <div className=\"label\">영어 입력</div>\n                                    <textarea className=\"input\" value={enInput} onChange={onChange} onKeyDown={onEnterPress}></textarea>\n\n                                </div>\n                        }\n                    </>\n            }\n            {(data.words && data.words.length > 0 && showHint2) && <Words wordArr={data.words} />}\n            {\n                (data.words && data.words.length > 0) && <>\n                    {\n                        showHint2\n                            ?\n                            <button className=\"btn btn-word\" onClick={() => {\n                                setShowHint2(false);\n                            }}><i className=\"fas fa-minus\"></i>단어닫기</button>\n                            :\n                            <button className=\"btn btn-word\" onClick={() => {\n                                setShowHint2(true);\n                            }}><i className=\"fas fa-plus\"></i>단어({data.words.length})</button>\n                    }\n\n                </>\n            }\n            <div className=\"footer\">\n                {\n                    isDone\n                        ?\n                        <div className=\"done\">\n                            <span className=\"label-done\">완료</span>\n                            <button className=\"btn btn-border btn-redo\" onClick={() => {\n                                setUndone(currErtid, idx);\n                            }}><i className=\"fas fa-redo\"></i>다시복습</button>\n                        </div>\n                        :\n                        <div className=\"study\">\n                            {\n                                isChecked\n                                    ?\n                                    <button className=\"btn btn-border btn-redo\" onClick={() => {\n                                        setisChecked(false);\n                                        setenInput('');\n                                    }}><i className=\"fas fa-redo\"></i>재시도</button>\n                                    :\n                                    <>\n                                        <button className=\"btn btn-done\" onClick={() => {\n                                            setDone(currErtid, idx);\n                                        }}><i className=\"fas fa-check-circle\"></i>완료처리</button>\n\n                                        <button className=\"btn\" onClick={() => {\n                                            let hintStr = data.en_;\n                                            if (!hintStr) {\n                                                const arr = data.en.split(' ');\n                                                if (lv === 'lv1') {\n                                                    hintStr = arr[0] + ' ' + arr[1] + ' ';\n                                                } else if (lv === 'lv2') {\n                                                    hintStr = arr[0] + ' ' + arr[1] + ' ' + arr[2] + ' ';\n                                                } else {\n                                                    hintStr = arr[0] + ' ' + arr[1] + ' ' + arr[2] + ' ' + arr[3] + ' ';\n                                                }\n                                            }\n                                            setenInput(hintStr);\n                                        }}><i className=\"fas fa-search\"></i>힌트</button>\n                                        <button className=\"btn\" onClick={() => {\n                                            setisChecked(true);\n                                        }}><i className=\"fas fa-check\"></i>정답확인</button>\n\n                                    </>\n                            }\n                        </div>\n                }\n            </div>\n        </div>\n\n    </li>);\n}\nconst SentenseEaseItem = ({ data, idx }: { data: TCheckedEnKo, idx: number }) => {\n    // isDone : 완전 학습 완료\n    // isChecked : 체크만 완료\n    const [enInput, setenInput] = useState('');\n    const setupdateDoneItem = useSetRecoilState(updateDoneItemState);\n    const onChange = (e: any) => {\n        setenInput(e.target.value);\n    }\n    // const [isChecked, setisChecked] = useState(false);\n    const [showHint2, setShowHint2] = useState(false);\n    const [thisDone, setThisDone] = useState(false);\n    const lv = getLevel(data.tag);\n    const correctPercent = parseInt(String(stringSimilarity.compareTwoStrings(data.en, enInput) * 100));\n    const setDone = (inWCID: string, inIdx: number) => {\n        setDoneItem(inWCID, inIdx);\n\n        setTimeout(() => {\n            setupdateDoneItem(Math.random());\n            setThisDone(true);\n        }, 100);\n    }\n    // 완료 해제\n    const setUndone = (inWCID: string, inIdx: number) => {\n        setUndonItem(inWCID, inIdx);\n        setTimeout(() => {\n            setenInput('');\n            // setisChecked(false);\n            setupdateDoneItem(Math.random());\n            setThisDone(false);\n        }, 100);\n    }\n    let isDone = storageData[currErtid].sentenseDoneArr.includes(idx) || thisDone;\n    let stateClass: 'wrong' | 'correct' | 'done' | '' = '';\n    // 체크 완료\n\n    if (isDone) stateClass = 'done';\n    return (<li className={classnames([\"card\", stateClass])}>\n        <div className=\"no\">{idx + 1}</div>\n        <div className=\"card-in\">\n            {\n                isDone\n                    ?\n                    <div>\n                        <div>{data.ko}</div>\n                        <div>{data.en}</div>\n                    </div>\n\n                    :\n                    <>\n                        <div className=\"check-before\">\n                            <MDictation2\n                                sentenseEn={data.en}\n                                sentenseKo={data.ko}\n                            />\n                        </div>\n                    </>\n            }\n            <div className=\"footer\">\n                {\n                    isDone\n                        ?\n                        <div className=\"done\">\n                            <span className=\"label-done\">완료</span>\n                            <button className=\"btn btn-border btn-redo\" onClick={() => {\n                                setUndone(currErtid, idx);\n                            }}><i className=\"fas fa-redo\"></i>다시복습</button>\n                        </div>\n                        :\n                        <div className=\"study\">\n                            <button className=\"btn btn-done\" onClick={() => {\n                                setDone(currErtid, idx);\n                            }}><i className=\"fas fa-check-circle\"></i>완료처리</button>\n                        </div>\n                }\n            </div>\n        </div>\n\n    </li>);\n}\nconst onlyWord = (word: string) => {\n    word = word.replace(\"'s\", \"\");\n    word = word.replace(\".\", \"\");\n    word = word.replace(\"!\", \"\");\n    word = word.replace(\"?\", \"\");\n    return word.toLowerCase();\n}\ntype TWordInfo = {\n    slim: string,\n    oriDP: string,\n}\nconst CheckedEnKoA = ({\n    data,\n    enInput,\n    type,\n}: {\n    data: TCheckedEnKo,\n    enInput: string,\n    type: 'o' | 'x'\n}) => {\n    const tmpInput = enInput;\n    const tmpEn = data.en;\n\n    let dpStr = ''// 출력할 대상\n    let dpStr2 = ''// 비교할 대상\n    if (type === 'x') {\n        // 정답\n        dpStr = tmpInput;\n        dpStr2 = tmpEn;\n    } else if (type === 'o') {\n        // 입력\n        dpStr = tmpEn;\n        dpStr2 = tmpInput;\n    }\n    const tmpInputArr = dpStr.split(' ');\n    const tmpEnArr = dpStr2.split(' ');\n    // 실제 비교 단어와 오리지널로 구분\n    const tmpInputArr2: TWordInfo[] = tmpInputArr.map((word: string, i: number) => {\n        return {\n            slim: onlyWord(word),\n            oriDP: word,\n        }\n    });\n    // 실제 비교 단어와 오리지널로 구분\n    const tmpEnArr2: TWordInfo[] = tmpEnArr.map((word: string, i: number) => {\n        return {\n            slim: onlyWord(word),\n            oriDP: word,\n        }\n    });\n    let resultA: any = [];\n    const isRightWords = (word: string, idx: number) => {\n        let compareWord = \" \" + word;\n        if (idx === 0) {\n            compareWord = word;\n        } else {\n            compareWord = \" \" + word;// 최초 단어가 아닌경우 앞에 띄어쓰기까지 비교\n        }\n        let makeSentnse = ' ';\n        tmpEnArr2.forEach((word: TWordInfo, i: number) => {\n            makeSentnse += word.slim + ' ';\n        })\n        console.log('makeSentnseA', makeSentnse, word, makeSentnse.includes(compareWord))\n        return makeSentnse.includes(compareWord);\n    }\n    let wordPlus: string[] = [];\n    tmpInputArr2.forEach((word: TWordInfo, i: number) => {\n        wordPlus.push(word.slim);\n        const check = isRightWords(word.slim, i);\n        console.log('check:', check, word.slim)\n        let checkClass = \"\";\n        // 연속 단어가 틀린경우 다시 초기화 함\n        if (!check) {\n            wordPlus = [];\n            checkClass = type === 'x' ? \"wrong\" : \"correction\";\n        }\n        resultA.push(<span className={checkClass}>{word.oriDP + ' '}</span>);\n    })\n    return (<div className=\"inputEn\">\n        <div>{resultA}</div>\n    </div>)\n}\n\nconst Words = ({ wordArr }: { wordArr: any }) => {\n    const Comp = wordArr.map((item: any, i: number) => {\n        return <li className=\"word-item\">\n            <div className=\"en\">{item[0]}</div>\n            <span className=\"divide\">::</span>\n            <div className=\"means\">{item[1]}</div>\n        </li>\n    })\n    return (\n        <ul className=\"Words\">\n            {Comp}\n        </ul>\n    );\n}\n\nexport default CourseERT;","import React, { useEffect } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport { mainMenuState } from '../core/store';\nimport data from '../core/data';\nimport classnames from 'classnames';\nimport { css } from 'emotion';\n\nconst CourseERTMain = () => {\n    const setMainMenu = useSetRecoilState(mainMenuState);\n\n    useEffect(() => {\n        setMainMenu('writing');\n    }, []);\n\n    const CompCate = data.ertJSON.map((json: any, i: number) => {\n        return <Category json={json} key={'cate' + i} idx={i} />\n    })\n\n    return (\n        <div className=\"CourseERTMain\">\n            {CompCate}\n        </div>\n    );\n};\n\nconst Category = ({\n    json,\n    idx,\n}: {\n    json: any,\n    idx: number,\n}) => {\n    const CompItem = json.items.map((obj: any, jIdx: number) => {\n        return <li className=\"grid-item\" key={\"compitem\" + jIdx}>\n            <div onClick={() => {\n                if (obj.type === 'shadowing') {\n                    data.gotoPage('ertserve', obj.query)\n                } else {\n                    data.gotoPage('ertd', obj.query)\n                }\n\n            }} className={classnames([\"grid-item-in\", css`\n            background-color:${obj.color}\n        `])} >\n                <i className={`icon ${obj.icon}`}></i>\n\n                <div className=\"item-title\">{obj.title}</div>\n            </div>\n        </li>\n    })\n    return (<div className=\"Category\">\n        <div className=\"category-title\">{json.desc}</div>\n        <ul className=\"grid-container\">\n            {CompItem}\n        </ul>\n    </div>)\n}\n\nexport default CourseERTMain;","import qs from 'qs';\nimport React, { useEffect, useState } from 'react';\nimport { useSetRecoilState } from 'recoil';\nimport data from '../core/data';\nimport { mainMenuState } from '../core/store';\nlet courseData: any = {};\n// let curropenid = '';\nconst CourseERTServe = () => {\n    const setMainMenu = useSetRecoilState(mainMenuState);\n    const [curropenid, setcurropenid] = useState('');\n    const [isReady, setIsReady] = useState(false);\n\n    useEffect(() => {\n        setMainMenu('writing');\n        const query = qs.parse(data.getOnlyquerystring());\n        const openid = (query && query.openid) ? query.openid as string : '';\n        setcurropenid(openid);\n        courseData = data.courseToMainJSONWithKey(openid, 'openID')\n        console.log('courseData-curropenid0', courseData.item, curropenid)\n        setIsReady(true);\n    }, [])\n\n    let CompItem: any = null;\n    if (courseData && courseData.item) {\n        CompItem = courseData.item.map((item: any, i: number) => {\n            const arr = String(item.tit).split(',');\n            return <li onClick={() => {\n                // console.log('tmplog_item', item.query)\n                data.gotoPage('ertd', '?d=' + item.query)\n            }} className=\"item\" key={'li' + i}>\n                <div>{arr[0]}</div>\n                <div>{arr[2]}</div>\n            </li>\n        })\n    }\n\n    console.log('courseData-curropenid1', courseData.item, curropenid)\n    return (\n        <div className=\"CourseERTServe\">\n            {(isReady && CompItem) && <ul className=\"\">\n                {CompItem}\n            </ul>\n            }\n        </div>\n    );\n};\n\nexport default CourseERTServe;","\nimport React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport PrintTable from '../components/PrintTable';\nimport Alert from './Alert';\nimport CourseMain from './CourseMain';\nimport CoursePlay from './CoursePlay';\nimport CoursePrint from './CoursePrint';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Mypage from './Mypage';\n\nimport PageRecord from './PageRecord';\nimport PageCSSHamburger from './PageCSSHamburger';\nimport PageHome from './PageHome';\nimport ToastAlert from './ToastAlert';\nimport CourseERT from './CourseERT';\nimport CourseERTMain from './CourseERTMain';\nimport CourseERTServe from './CourseERTServe';\n\nconst CompPageMiniplayer = lazy(() => import(\n    /* webpackChunkName: \"PageMiniplayer\" */\n    /* webpackPrefetch: true */\n    './PageMiniplayer'\n));\nconst CompPageBlogpost = lazy(() => import(\n    /* webpackChunkName: \"PageBlogpost\" */\n    /* webpackPrefetch: true */\n    './PageBlogpost'\n));\n\nconst PageRoute = () => {\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            {/* <Route path=\"/\" component={Header}/> */}\n            <Header />\n            {/* <Route path=\"/\" component={GNB}/> */}\n            <Loading />\n            <ToastAlert />\n            <Alert />\n            <PrintTable />\n\n            <div className=\"page-group utils-layout-marginauto0\">\n                <Route exact path=\"/\" component={PageHome} />\n                <Route path=\"/CourseMain\" component={CourseMain} />\n                <Route path=\"/scm\" component={CourseMain} />\n                <Route path=\"/CoursePlay\" component={CoursePlay} />\n                <Route path=\"/scp\" component={CoursePlay} />\n                <Route path=\"/CoursePrint\" component={CoursePrint} />\n                <Route path=\"/ert\" component={CourseERTMain} />\n                <Route path=\"/ertserve\" component={CourseERTServe} />\n                <Route path=\"/ertd\" component={CourseERT} />\n                <Route path=\"/record\" component={PageRecord} />\n                <Route path=\"/mypage\" component={Mypage} />\n                <Route path=\"/PageCSSHamburger\" component={PageCSSHamburger} />\n                {/* <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                        <Route path=\"/notice\" component={CompPageNotice} />\n                    </Switch>\n                </Suspense> */}\n            </div>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                    <Route path=\"/minip\" component={CompPageMiniplayer} />\n                    <Route path=\"/blogpost\" component={CompPageBlogpost} />\n                </Switch>\n            </Suspense>\n            <Footer />\n        </div>\n    );\n};\n\nexport default PageRoute;","import React from 'react';\nimport PageRoute from './pages/PageRoute';\nimport './scss/Main.scss';\nimport { isIE } from \"react-device-detect\";\n// starterKit-staticWebStyle1\nfunction App() {\n  // prevena\n  let isRen: boolean = false;\n  if (process.env.NODE_ENV === 'development') {\n    const href = (window as any).location.href;\n    if (href.split(\"localhost\").length > 1) {\n      isRen = true;\n    }\n  }\n\n  // PORT=9922\n  // == prevena\n\n  return (\n    <div className=\"App v1-3\">\n      {/* <Iframe\n        url={`https://loop-fa69b.web.app/indextg.html?ver=${appBridge.publishingInfo.webVersion}`}\n        width=\"1px\"\n        height=\"1px\"\n        id=\"gaiframe\"\n        position=\"absolute\" /> */}\n      {/* {isRen && <>\n        <PageRoute />\n      </>} */}\n      <PageRoute />\n    </div>\n  );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { RecoilRoot } from \"recoil\";\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <RecoilRoot>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n\ndayjs.extend(utc)\n\n\n\nexport default dayjs;\n","import axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport EventEmitter, { Event } from '../core/EventEmitter';\nimport fbase from '../fb/fbase';\nimport qs from 'qs';\nimport Days from '../core/Days';\nimport animateScrollTo from 'animated-scroll-to';\n\nconst mainJSON = require('../resource/mainJSON.json');\nconst ertJSON = require('../resource/ertJSON.json');\nconst key = \"XDVl1SGxRn\";\nconst queryDivideStr = 'AGQpG10Xdk&';//  AGQpG10Xdk&yt=true\nlet scrollingLazyTime: number = 0;\nlet scrollingTick: any = null;\n\nexport const productTable: any = {\n\n    \"1m\": {\n        title: \"1개월\",\n        price: 2400,\n        priceQR: '4b001708',\n    },\n    \"3m\": {\n        title: \"3개월\",\n        price: 6000,// 2000*3\n        priceQR: 'bb801565',\n    },\n    \"6m\": {\n        title: \"6개월\",\n        price: 9000,//1500*6\n        priceQR: '119404860',\n    },\n    \"12m\": {\n        title: \"12개월\",\n        price: 14400,// 1200*12,// \n        priceQR: '1c2008196',\n    },\n}\n\nclass Data {\n    isHashURL: boolean = true;\n    mainJSON: any = mainJSON;\n    ertJSON: any = ertJSON;\n    topicJSON: any;\n    isSentensePressing: boolean = false;\n    gaFrame: any;\n    logCnt: number = 0;\n    public pageShadowingParam: {\n        sentenseEn: string,\n        sentenseKo: string,\n        sentenseIdx: number,\n        topicID: string,\n        totalIdx: number,\n        audioSrc: string,\n    } = {\n            sentenseEn: '',\n            sentenseKo: '',\n            sentenseIdx: -1,\n            topicID: '',\n            totalIdx: 0,\n            audioSrc: '',\n        }\n\n\n    getRootPath() {\n        return '/';\n    }\n\n    parseQuery() {\n        // const queryDivideStr = 'AGQpG10Xdk&';\n        console.log('(window as any).location', (window as any).location);\n        const isHashMode = true;\n        let d = '';\n        if (isHashMode) {\n            const hash = (window as any).location.hash;\n            d = hash.split('?d=')[1];\n        } else {\n            d = (window as any).location.search.substring(3);\n        }\n\n        const incryptString = d.split(queryDivideStr)[0];\n        const etcparam = qs.parse(d.split(queryDivideStr)[1]);\n        const decryptParam = this.decryptURL(incryptString);\n        return Object.assign({}, decryptParam, etcparam);\n    }\n\n    getOnlyquerystring() {\n        let qstr = '';\n        const arr = window.location.href.split('?');\n        if (arr.length > 1) {\n            qstr = arr[1];\n        }\n        return qstr;\n    }\n\n    getCampaignInfo(campaignid: string) {\n        const infos: any = {\n            nv_pl_morden_t1: {\n                type: 'topic',\n                cid: 'D5izCzX',\n                tpid: '',\n            },\n            nv_store_modern: {\n                type: 'topic',\n                cid: 'D5izCzX',\n                tpid: '',\n            },\n            coursetestid: {\n                type: 'course',\n                cid: 'XapJbAg'\n            }\n\n        }\n        return infos[campaignid];\n    }\n\n    // setParameter => gotoPage\n    gotoPage(inParam: string, inQuery: string) {\n\n        if (inParam === 'home' || inParam === '/') {\n            window.location.href = '/';\n            return;\n        } else if (\n            inParam === 'ert' ||\n            inParam === 'ertserve' ||\n            inParam === 'ertd') {\n            if (inQuery) inQuery = `${inQuery}`;\n            window.location.href = `#/${inParam}${inQuery}`;\n            return;\n        }\n        // alert('TODO:gotoPage');\n        if (inQuery) inQuery = `?d=${inQuery}`;\n        window.location.href = `#/${inParam}${inQuery}`;\n    }\n    // 코스 메인으로 가기\n    gotoCourseMainPage(cid: string) {\n        const resultItem = this.courseToMainJSON(cid);\n        this.gotoPage('CourseMain', resultItem.query);\n    }\n    gotoTop() {\n        animateScrollTo(0, {\n            elementToScroll: (document as any).querySelector('html')\n        });\n    }\n    dateMyFormat(str: string) {\n        return `${str.substr(0, 4)}.${str.substr(4, 2)}.${str.substr(6, 2)}`\n    }\n    // mainJson에서 해당 코스 목록 조회\n    courseToMainJSON(cid: string) {\n        return mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        });\n    }\n    // mainJson에서 해당 코스 목록 조회\n    courseToMainJSONWithKey(value: string, keyStr: string) {\n        return mainJSON.find((item: any, i: number) => {\n            return item[keyStr] === value;\n        });\n    }\n\n    courseToMainIdx(cid: string, tpid: string) {\n        let returnIdx = 0;\n        if (!mainJSON) return returnIdx;\n        const findMainJSON = mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n            // console.log('item.courseID === cid', item.courseID, cid);\n            // if (item.courseID === cid) {\n            //     returnIdx = i;\n            // }\n        });\n\n        // findMainJSON.item.forEach((item: any, i: number) => {\n\n        // })\n        return returnIdx;\n    }\n\n    // 이전/다음 가기\n    gotoNextPrev(idx: number, cid: string, dir: 'next' | 'prev') {\n        const resultItem = mainJSON.find((item: any, i: number) => {\n            return item.courseID === cid;\n        })\n        if (idx === 0 && dir === 'prev') {\n            alert('이전 목록이 없습니다.(첫 번째 토픽)');\n            return;\n        }\n        if (idx === resultItem.item.length && dir === 'next') {\n            alert('마지막 목록 입니다.');\n            return;\n        }\n        const overIdx = dir === 'next' ? 1 : -1;\n        const nextItem = resultItem.item[idx + overIdx];\n        if (!nextItem) {\n            alert((dir === 'next' ? '다음' : '이전') + \" 목록이 없습니다.\");\n            return;\n        }\n\n        this.gotoPage('CoursePlay', resultItem.item[idx + overIdx].query);\n    }\n    setClipHistory(tpid: string) {\n\n        if (!fbase.userMoreInfo.historyClips) {\n            fbase.userMoreInfo.historyClips = [];\n        }\n\n        const arr = fbase.userMoreInfo.historyClips.filter((item: string) => {\n            // 동일 히스토리 존재하면 제거 \n            return item !== tpid;\n        })\n\n        arr.push(tpid);\n\n        fbase.userMoreInfo.historyClips = arr;\n        // debugger;\n        // appBridge.syncStorageData();\n        fbase.syncMoreInfo();\n    }\n    // 구독정보 스트링을 정보로 변환 \n    convertSubscriptionInfoStrToObj(str: string) {\n        const obj = {\n            termCD: '',\n            st: '',\n            et: '',\n            stInt: 0,\n            etInt: 0\n\n        }\n        if (str) {\n            const arr = str.split('##');\n            if (arr.length === 3) {\n                obj.termCD = arr[0];\n                obj.st = arr[1];\n                obj.et = arr[2];\n                obj.stInt = parseInt(arr[1]);\n                obj.etInt = parseInt(arr[2]);\n            }\n        }\n        return obj;\n    }\n    setSettingKeepClipSentense(\n        type1: 'clip' | 'sentense' | 'done',\n        type2: 'add' | 'remove',\n        value: any) {\n        console.log('setSettingKeepClipSentense', type1, type2, value);\n        let arr: string[] = [];\n        let newArr: string[] = [];\n        if (type1 === 'clip') {\n\n            arr = fbase.userMoreInfo.keepClips;\n        } else if (type1 === 'sentense') {\n            arr = fbase.userMoreInfo.keepSentense;\n        } else if (type1 === 'done') {\n            arr = fbase.userMoreInfo.doneSentense;\n        }\n        if (arr.includes(value)) {\n            // 포함되어있을때 삭제 케이스 \n            if (type2 === 'remove') {\n                // 삭제 \n                newArr = arr.filter((item, i) => {\n                    return item !== value;\n                });\n            }\n\n        } else {\n            // 불포함인데 포함 케이스 \n            if (type2 === 'add') {\n                // 포함 \n                arr.push(value)\n                newArr = JSON.parse(JSON.stringify(arr));\n            }\n\n        }\n\n        if (type1 === 'clip') {\n            fbase.userMoreInfo.keepClips = newArr;\n\n        } else if (type1 === 'sentense') {\n            fbase.userMoreInfo.keepSentense = newArr;\n\n        } else if (type1 === 'done') {\n            fbase.userMoreInfo.doneSentense = newArr;\n\n        }\n\n        fbase.syncMoreInfo();\n    }\n    decryptURL(text: string) {\n        try {\n            text = text.substring(7);\n            const bytes = CryptoJS.AES.decrypt(text, key);\n            let parse = null;\n            const make1 = bytes.toString(CryptoJS.enc.Utf8);\n            parse = JSON.parse(make1);\n            return parse;\n        } catch (err) {\n            // console.error(err);\n            return;\n        }\n    }\n    bodyOverflowHidden(tf: boolean) {\n        if (tf) {\n            document.body.classList.add('noscroll');\n        } else {\n            document.body.classList.remove('noscroll');\n        }\n\n    }\n    numberWithCommas = (x: number) => {\n        let parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    }\n    showAlert(message: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: 'AlertBasic',\n            message: message,\n        });\n    }\n    showAlertModule(moduleName: string) {\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: moduleName\n        });\n    }\n    hideAlert() {\n        EventEmitter.dispatch(Event.HIDE_ALERT, {});\n    }\n    showBuyMessage({\n        courseID\n    }: {\n        courseID: string\n    }) {\n\n        EventEmitter.dispatch(Event.CHANGE_BTN_PLAY_STATE, \"stop\");\n        EventEmitter.dispatch(Event.SHOW_ALERT, {\n            moduleName: \"AlertNoticeInapp\",\n            courseID: courseID,\n        })\n    }\n\n    showToastMessage(options: {\n        message: string,\n        mtime: number\n    }) {\n        EventEmitter.dispatch(Event.SHOW_TOAST_MESSAGE, options)\n    }\n    async getTopicJSON(cid: string, tpid: string) {\n        // this.topicJSON = await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {}).;\n        return await axios.get(`/resource/courses/${cid}/topics/${tpid}/mm.json`, {});\n    }\n\n    async getERTJSON(ertName: string) {\n        return await axios.get(`/resource/ertcourses/${ertName}.json`, {});\n    }\n    // sentense클릭동안 스크롤락 실행\n    sentensePressing() {\n        this.isSentensePressing = true;\n        scrollingLazyTime = 2000;// 2초\n        if (scrollingTick) {\n            clearInterval(scrollingTick);\n        }\n        scrollingTick = setInterval(() => {\n            scrollingLazyTime = scrollingLazyTime - 500;\n            if (scrollingLazyTime <= 0) {\n                this.isSentensePressing = false;\n                scrollingLazyTime = 0;\n                clearInterval(scrollingTick);\n            }\n        }, 500);\n    }\n    // 현재 화면이 스크롤링 중인가?\n    isScrolling(callback: (result: boolean) => void) {\n        const firstY = window.scrollY;\n        setTimeout(() => {\n            if (firstY === window.scrollY) {\n                callback(false);\n            } else {\n                callback(true);\n            }\n        }, 100);\n    }\n    ga(obj: {\n        hitType?: 'event',\n        eventCategory?: string,\n        eventAction: string,\n        eventLabel: string,\n        eventValue: string,\n    }) {\n        this.logCnt++;\n        // localStorage.setItem('karelcnt', logCnt)\n\n\n        const p = Object.assign({\n            hitType: 'event', //이벤트 종류 \n            // eventCategory: appBridge.settingInfo.kuid, //화면명(나는 고객 아이디) \n            // eventCategory: this.gaPageName, //화면명(나는 고객 아이디) \n            // eventAction: this.gaPageSubName, //서브화면명 \n            eventLabel: '', //이벤트명\n            eventValue: '',\n        }, obj);\n        // if (!p.eventCategory || String(p.eventCategory) == 'null') p.eventCategory = KUID;\n        // p.eventAction = logYMD + '#' + logCnt + '#' + p.eventAction;\n        // ka.log('ga:', p);\n        // 로컬 테스트는 로그 안쌓도록 \n        const host = (window as any).location.host;\n        if (host.indexOf('172.20.10') != -1) return;\n        if (host.indexOf('10.0.1') != -1) return;\n\n\n        if (this.gaFrame) {\n\n            // (this.gaFrame as any).eventLog(p);\n            this.gaFrame.postMessage(p, '*');\n        }\n\n        // ga('send', p.hitType, p.eventCategory, );\n        // (window as any).gtag(\n        //     p.hitType,\n        //     p.eventAction, {\n        //     event_category: p.eventCategory,\n        //     event_label: p.eventLabel\n        // })\n    }\n    // 구독상태 empty: 정보없음 on:구독중 expired01:기간만료\n    getSubscriptionState(infoStr: string) {\n        console.log('tmplog_getSubscriptionState', infoStr)\n\n        let subscriptionType = 'empty';\n        if (['needLogin', 'needPurchase'].includes(infoStr)) {\n            subscriptionType = infoStr;\n        } else {\n            let todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n            const infoArr = infoStr.split('##');\n\n            let [productCD, stStr, edStr] = infoArr;\n            if (infoArr.length === 3) {\n                if (productCD.substr(0, 1) === 't') {\n                    // 임시코드인 경우 \n                    productCD = productCD.substr(1);\n                }\n                // const productCDtoStr: string = productTable[productCD].title;\n                subscriptionType = 'on'\n\n                if (todayInt > parseInt(edStr)) {\n                    // 기간 지난경우\n                    subscriptionType = 'expired01';\n\n                }\n            } else {\n                subscriptionType = 'empty';\n\n            }\n\n        }\n        return subscriptionType;\n    }\n    sendTelelog(inMessage: string) {\n        // https://us-central1-loop-fa69b.cloudfunctions.net/sendTelegraf?message=testmessage\n        axios.get('https://us-central1-loop-fa69b.cloudfunctions.net/sendTelegraf', {\n            params: {\n                message: `${inMessage}`\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n            .finally(function () {\n                // always executed\n            });\n    }\n}\n\nexport default new Data();","\nimport EventEmitter, { Event } from \"../core/EventEmitter\";\n\n\nexport type TLivePlayInfo = {\n    idx?: number | null,// null이면 실행 안하는 중\n    totalIdx?: number,\n    src?: string,\n    json?: any,\n    st?: number,\n    et?: number,\n    callback?: () => void,\n    repeat?: number,\n    interval?: number,\n    speed?: number,\n    repeatCnt?: number,\n    allplay?: boolean,// 전체듣기\n    // allplayModoshi?: boolean,// 전체반복\n}\nlet audioTimeArr: number[];\nclass ZZAudioProgram {\n    // setLogStr = useSetRecoilState(logState);\n    get zzaudio() {\n        return (window as any).zzaudio;\n    }\n    livePlayInfo: TLivePlayInfo = {\n        idx: null,\n        totalIdx: 0,\n        interval: 1,\n        src: '',\n    };\n    presetSrc(src: string) {\n        this.livePlayInfo.src = src;\n        // setTimeout(() => {\n        //     this.livePlayInfo.src = src;\n        //     this.zzaudio.presetSrc(src);\n        // })\n\n    }\n    playEffect(inID: string, inVolume: number) {\n        if (!this.zzaudio) return;\n        this.zzaudio.playEffect(inID, inVolume);\n    }\n    // 0,100밀리로 시작만 \n    prePlay(param: TLivePlayInfo) {\n        const that = this;\n        this.livePlayInfo = Object.assign(this.livePlayInfo, param)\n        this.livePlayInfo.st = 0;\n        this.livePlayInfo.et = 100;\n\n        this.zzaudio.play(this.livePlayInfo);\n    }\n    play(param: TLivePlayInfo) {\n        // this.setLogStr('play' + '\\n');\n        // alert('play1');\n        const that = this;\n        this.livePlayInfo = Object.assign(this.livePlayInfo, param)\n\n        const idx = this.livePlayInfo.idx = this.livePlayInfo.idx || 0;\n        audioTimeArr = this.livePlayInfo.json.sentense[idx].timeen.split('|');\n        // this.livePlayInfo.repeatCnt = param.repeat;\n        this.livePlayInfo.callback = this.playComplete.bind(that);\n        this.livePlayInfo.st = audioTimeArr[0];\n        this.livePlayInfo.et = audioTimeArr[1];\n        if (param.repeat !== 9999) {\n            if (this.livePlayInfo.repeatCnt) this.livePlayInfo.repeatCnt--;\n        }\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, idx)\n        // EventEmitter.dispatch(Event.SENTENSE_PLAYING,idx)\n        // alert('play2');\n        this.zzaudio.play(this.livePlayInfo);\n    }\n    pause() {\n        this.livePlayInfo.idx = null;\n        this.livePlayInfo.allplay = false;\n        this.livePlayInfo.repeat = 0;\n        this.livePlayInfo.repeatCnt = 0;\n        // EventEmitter.dispatch(Event.SENTENSE_PAUSE,this.livePlayInfo.idx)\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, this.livePlayInfo.idx)\n        if (this.zzaudio) this.zzaudio.pause();\n    }\n    setVolume(vol: number) {\n        this.zzaudio.setVolume(vol);\n    }\n\n    async playComplete() {\n        // debugger;\n        // console.log('repeatCnt',livePlayInfo.repeatCnt)\n        //\n\n        const currentSoundTime = (audioTimeArr[1] - audioTimeArr[0]);\n        const intervalTime = (() => {\n            const settingInterval: any = this.livePlayInfo.interval;\n            if (settingInterval === 9999) {\n                return currentSoundTime;// 문장길이 +1초\n            } else {\n                return settingInterval * 1000;// 설정타임\n            }\n        })();\n        if (this.livePlayInfo.allplay || this.livePlayInfo.repeat === 9999) {\n            await delay(intervalTime);\n        }\n\n        EventEmitter.dispatch(Event.SENTENSE_PAUSE, this.livePlayInfo.idx)\n        EventEmitter.dispatch(Event.CONTROL_UI_UPDATE, this.livePlayInfo.idx)\n\n        this.livePlayInfo.repeatCnt = this.livePlayInfo.repeatCnt || 0;\n        if (this.livePlayInfo.repeatCnt > 0) {\n            // this.livePlayInfo.repeat = this.livePlayInfo.repeatCnt;\n\n            this.play(this.livePlayInfo);\n            return;\n        }\n        if (this.livePlayInfo.allplay) {\n            // debugger;\n            // 다음인덱스\n            const idx = this.livePlayInfo.idx || 0;\n\n            if (this.livePlayInfo.totalIdx) {\n                this.livePlayInfo.idx = idx + 1;\n                // 끝에 도달\n                if (this.livePlayInfo.idx >= this.livePlayInfo.totalIdx) {\n                    this.livePlayInfo.idx = 0;\n                }\n            }\n\n            // 반복 cnt복원\n            this.livePlayInfo.repeatCnt = this.livePlayInfo.repeat;\n\n            this.play(this.livePlayInfo);\n            return;\n        }\n        function delay(ms: number): Promise<void> {\n            return new Promise<void>(resolve => {\n                setTimeout(() => {\n                    console.log(`${ms} 밀리초가 지났습니다.`);\n                    resolve()\n                }, ms);\n            });\n        }\n        // if(repeatCnt > 0){\n        //     this.play();\n        //     param.repeatCnt\n        // }\n    }\n\n}\n\n\nexport default new ZZAudioProgram();","import React from 'react';\n\nconst Equalizer = () => {\n    return (\n        <div className=\"equalizer\">\n            <span className=\"eq1\"></span>\n            <span className=\"eq2\"></span>\n            <span className=\"eq3\"></span>\n        </div>\n    );\n};\n\nexport default Equalizer;","\n\n/**\n * use\n * import EventEmitter, {Event} from \"common/events/EventEmitter\";\n *\n * dispatch\n * EventEmitter.dispatch(Event.EVENT_EXAMPLE, {같이 넘길 파라메터 });\n *\n * subscribe\n * EventEmitter.subscribe(Event.EVENT_EXAMPLE, (options:any)=>{\n *  {같이 넘길 파라메터 }\n * });\n */\nexport class Event {\n\n\tpublic static ON_AUTH_STATE_CHANGED: string = \"onAuthStateChanged\";\n\tpublic static FB_START_LOGIN: string = \"fbStartLogin\";\n\tpublic static IS_APP_READY: string = \"isAppReady\";\n\tpublic static INSERT_PAGE: string = \"insertPage\";\n\tpublic static REPLACE_PAGE: string = \"replacePage\";\n\tpublic static GOTO_BACK: string = \"gotoBack\";\n\tpublic static RESET_PAGE: string = \"resetPage\";\n\tpublic static SHOW_ALERT: string = \"showAlert\";\n\tpublic static HIDE_ALERT: string = \"hideAlert\";\n\tpublic static INIT_AUDIO: string = 'initAudio';\n\tpublic static AUDIO_PLAY_PAUSE: string = 'audioPlayPause';\n\tpublic static AUDIO_STOP: string = 'audioStop';\n\tpublic static SENTENSE_PLAYING: string = 'sentensePlaying';\n\tpublic static SENTENSE_PAUSE: string = 'sentensePause';\n\tpublic static CONTROL_UI_UPDATE: string = 'controlUIUpdate';\n\tpublic static SET_BTN_PLAY_STATE: string = 'setBtnPlayState';// 외부에서 버튼 상태를 변경할때 발생\n\tpublic static CHANGE_BTN_PLAY_STATE: string = \"changeBtnPlayState\";// 버튼 자신이 변경되면 외부에 알리느라 발생\n\tpublic static SHOW_NOTI_MESSAGE: string = \"showNotiMessage\";\n\tpublic static PURCHASE_COMPLETE: string = \"purchaseComplete\";\n\tpublic static FREETIME_UPDATED: string = \"freetimeUpdated\";\n\tpublic static CLICK_HOTCLIP_THUMB: string = \"clickHotclipThumb\";\n\tpublic static SHOW_LOADING: string = \"showLoading\";\n\tpublic static HIDE_LOADING: string = \"hideLoading\";\n\tpublic static AUDIO_PLAY_COUNT: string = \"audioPlayClunt\";\n\tpublic static CHANGE_TPID: string = \"changeTPID\";\n\tpublic static SHOW_TOAST_MESSAGE: string = \"showToastMessage\";\n\n\n\tpublic events: any = {};\n\tpublic dispatch(event: string, data?: any): void {\n\t\tif (!this.events[event]) return;\n\t\tthis.events[event].forEach((callback: (arg0: any) => void) =>\n\t\t\tcallback(data)\n\t\t);\n\t}\n\tpublic subscribe(event: string, callback: any): void {\n\t\tif (!this.events[event]) this.events[event] = [];\n\t\tthis.events[event].push(callback);\n\t}\n\tpublic remove(event: string, callback?: any): void {\n\t\t// if (this.events[event]) this.events[event] = null;\n\t\tif (this.events[event]) this.events[event].splice(this.events[event].indexOf(callback), 1);\n\t}\n}\n\nexport default new Event();\n","import extend from 'deep-extend';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport { firebaseConfig } from \"../env\";\nimport EventEmitter, { Event } from \"../core/EventEmitter\";\nimport Days from '../core/Days';\nimport axios from 'axios';\nimport data from '../core/data';\n// import Days from '../core/Days';\n\nfirebase.initializeApp(firebaseConfig);\n\nclass FBase {\n    userInfo: any = 'loading';// loading인 경우 아예 정보 받기 전임\n    initUserInfoMerge: boolean = false;\n    userMoreInfo: {\n        joindate: string,\n        email: string,\n        uid: string,\n        repeatMode: 'ALL' | '1' | '' | 'nil',\n        // buyCourses: string[],\n        // subscriptionInfo: string,\n        subscriptionInfoHistory: string[],\n        showClips: string[],\n        keepClips: string[],\n        keepSentense: string[],\n        doneSentense: string[],\n        historyClips: string[],\n        lastURL: string,\n    } = {\n            joindate: '',\n            email: '',\n            uid: '',\n            repeatMode: '1',\n            // buyCourses: [],\n            // subscriptionInfo: '',// null\n            subscriptionInfoHistory: [],\n            showClips: [],\n            keepClips: [],\n            keepSentense: [],\n            doneSentense: [],\n            historyClips: [],\n            lastURL: '',\n        };\n    initLogin() {\n\n        authService.onAuthStateChanged((user) => {\n\n            // console.log('authService', user);\n\n            this.userInfo = user;\n\n            // 사용자 셋팅정보 조회\n            // 정보가 null인 경우 기본 정보 생성\n            // 있는경우 정보 덮어씌우기\n            if (this.userInfo) {\n\n                const docName = this.makeDocNameWithUserInfo();\n\n                dbService.collection('userstatus').doc(docName).get().then((docs: any) => {\n                    // console.log('tmplog_authService3');\n                    // console.log('docs.data()', docs.data());\n                    const data = docs.data();\n                    // console.log('docs.data()', docName, data);\n                    if (data) {\n                        // data.uid = this.userMoreInfo.uid;\n                        // console.log('docs.data()1');\n                        this.userMoreInfo = extend(this.userMoreInfo, data);\n                    } else {\n                        // console.log('docs.data()2');\n                        // 최초 진입(데이터 생성)\n                        this.userMoreInfo.joindate = Days.utc().local().format('YYYYMMDD')\n                        // this.userMoreInfo = this.userMoreInfo;\n                        this.syncMoreInfo();\n                    }\n\n                    this.userMoreInfo.email = this.userInfo.email;\n                    this.userMoreInfo.uid = this.userInfo.uid;\n                    this.initUserInfoMerge = true;\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                }).catch(function (err) {\n                    // console.log('tmplog_authService4err', err);\n                    EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, null);\n                    // if (err.code == 'failed-precondition') {\n                    //     // Multiple tabs open, persistence can only be enabled\n                    //     // in one tab at a a time.\n                    //     // ...\n                    // } else if (err.code == 'unimplemented') {\n                    //     // The current browser does not support all of the\n                    //     // features required to enable persistence\n                    //     // ...\n                    // }\n                });\n                // dbService.collection('userstatus').get().then((docs: any) => {\n                //     let searchUserDocCnt = 0;// 사용자에 대한 문서가 여러개인경우 오류\n                //     docs.docs.forEach((doc: any) => {\n\n                //         const data = doc.data();\n                //         console.log('userMoreInfoa0---', data, data.uid, '-', this.userInfo.uid)\n                //         if (data.uid === this.userInfo.uid) {\n                //             searchUserDocCnt++;\n                //             console.log('userMoreInfoab', this.userMoreInfo, data);\n                //             // 현재 데이터 존재하는경우\n                //             this.userMoreInfo = extend(this.userMoreInfo, data);\n                //         } else {\n                //\n                //         }\n                //         EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n\n                //     })\n                //     // console.log('userMoreInfoac', searchUserDocCnt);\n                //     // // 최초 진입\n                //     // if (searchUserDocCnt === 0) {\n                //     //     // 최초 진입(데이터 생성)\n                //     //     this.userMoreInfo = extend(this.userMoreInfo, {\n                //     //         uid: this.userInfo.uid\n                //     //     });\n                //     //     // 저장\n                //     //     // dbService.collection('userstatus').add(this.userMoreInfo).then((res: any) => {\n                //     //     //     console.log('tmplog_dbsync', res)\n                //     //     // });\n                //     //     this.syncMoreInfo();\n                //     // }\n                //     // // 데이터 중복\n                //     // if (searchUserDocCnt > 1) {\n                //     //     alert('에러' + searchUserDocCnt)\n                //     // }\n                //     // console.log('userMoreInfoarr', this.userMoreInfo)\n                //     // EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n                // });\n            } else {\n                console.log('tmplog_authService2');\n                // console.log('userMoreInfoarr2', this.userMoreInfo)\n                EventEmitter.dispatch(Event.ON_AUTH_STATE_CHANGED, user);\n            }\n\n\n\n        });\n    }\n\n    isLogin() {\n        let r = true;\n        if (this.userInfo === null || this.userInfo === 'loading') {\n            r = false;\n        }\n        return r;\n    }\n\n    submitCouponCode(inCouponCode: string, inFrom: string) {\n        if (!inCouponCode) {\n            alert('코드를 입력 해 주세요.')\n            return;\n        }\n\n        axios.get(`https://us-central1-casetebook.cloudfunctions.net/confirmPromocode?promocode=${inCouponCode}`).then((response: any) => {\n            // console.log(response.data, response.data.result === false);\n            if (response.data.result === true) {\n                this.buyFbSubscriptionInfo(response.data.term);\n\n\n                setTimeout(() => {\n                    if (inFrom === 'mypage') {\n                        alert('정상 등록 완료!');\n                    } else {\n                        alert('정상 등록 완료!');\n                    }\n                    data.hideAlert();\n                    window.location.reload();\n                }, 1000);\n            } else if (response.data.result === false) {\n                errorAlert(response.data.info);\n            }\n        }).catch((err: any) => {\n            errorAlert('');\n        })\n        function errorAlert(cd: string) {\n            // faillen // 길이오류 (변조)\n            // failotk // 이런이벤트 없음(변조) \n            // failtermcd // 기간코드가 이상함 (변조)\n            // failused // 이미사용 (재사용)\n            // failpushstore // 스토어에 코드 등록하다 에러 (시스템오류)\n            // failnotbeing // 발행하지 않은 코드 \n            let errorMessage = '';\n            // alert(cd);\n            if (['faillen', 'failotk', 'failtermcd', 'failnotbeing'].includes(cd)) {\n                alert('유효하지 않은 코드 입니다. \\n다시 확인 해 주세요');\n            } else if (cd === 'failused') {\n                alert('이미 사용한 코드입니다.\\n 사용하지 않은 코드인 경우 이메일 혹은 카카오 채널로 문의 주시면 신속히 확인해드리겠습니다.')\n            } else {\n                alert('등록과정에서 오류가 발생하였습니다. \\n 잠시 후 다시 시도해 주세요.');\n            }\n\n        }\n        // https://us-central1-casetebook.cloudfunctions.net/confirmPromocode?promocode=3qySWyoEwI\n    }\n\n    buyFbSubscriptionInfo(inTermcode: string) {\n\n        let onlyTermCode = inTermcode;\n\n        if (inTermcode.substr(0, 1) === 't') {\n            // t1m, t1w, t24w\n            onlyTermCode = inTermcode.substr(1);\n        }\n\n        let termNum = 1;\n        let weekMonthCD: 'm' | 'w' = 'm';\n        let weekMonthCDFull: 'month' | 'week' = 'month';\n        if (onlyTermCode.length === 3) {\n            // 10자리가 넘어가는 12w 같은경우 \n            termNum = parseInt(onlyTermCode.substr(0, 2));\n            weekMonthCD = onlyTermCode.substr(2) as 'm' | 'w';\n        } else {\n            // 10자리 이하 \n            termNum = parseInt(onlyTermCode.substr(0, 1));\n            weekMonthCD = onlyTermCode.substr(1) as 'm' | 'w';\n        }\n        if (weekMonthCD === 'w') weekMonthCDFull = 'week';\n\n        // 현재 구독중인 상품이 없거나 지난경우 \n        let startdateStr = Days.utc().local().format('YYYYMMDD');\n\n        const currentAvailableSubscriptionInfoArr = this.currentAvailableSubscriptionInfo();\n        // console.log('tmplog_getSubscriptionState 2ss', currentAvailableSubscriptionInfoArr)\n        // 현재 구독중인 상품이 있는경우 \n        // 마지막 가능상품 뒤를 시작날짜로 넣는다 \n        if (currentAvailableSubscriptionInfoArr.length > 0) {\n            // 마지막 가능한 프리티켓 날짜 뽑기 \n            const obj = data.convertSubscriptionInfoStrToObj(currentAvailableSubscriptionInfoArr[currentAvailableSubscriptionInfoArr.length - 1]);\n\n            startdateStr = Days(obj.et).add(1, 'day').format('YYYYMMDD');\n        }\n        let enddayStr = Days(startdateStr).add(termNum, weekMonthCDFull).format('YYYYMMDD');\n        const fbasesubscriptionInfo = `${inTermcode}##${startdateStr}##${enddayStr}`;\n        this.userMoreInfo.subscriptionInfoHistory.push(fbasesubscriptionInfo);\n        this.syncMoreInfo();\n    }\n\n    // 현재 구매정보 리턴\n    isSubscriptionInfo(): string {\n        // subscriptionInfoHistory\n        // 로그인이 안 된 경우\n        if (!this.isLogin()) {\n            return 'needLogin';\n        }\n        if (this.userMoreInfo.subscriptionInfoHistory.length === 0) {\n            return 'needPurchase';\n        }\n        const currentAvailableSubscriptionInfoArr = this.currentAvailableSubscriptionInfo();\n        if (currentAvailableSubscriptionInfoArr.length === 0 || !currentAvailableSubscriptionInfoArr) {\n            return 'needPurchase';\n        }\n        // console.log('tmplog_tmplog_getSubscriptionState ss', currentAvailableSubscriptionInfoArr, currentAvailableSubscriptionInfoArr.length, !currentAvailableSubscriptionInfoArr)\n        return currentAvailableSubscriptionInfoArr[0];\n    }\n\n    // 현재 및 미래 구독가능한 정보 조회 \n    currentAvailableSubscriptionInfo(): string[] {\n        const returnArr: string[] = [];\n        const todayInt = parseInt(Days.utc().local().format('YYYYMMDD'));\n        // console.log('tmplog_getSubscriptionState 3arr', this.userMoreInfo.subscriptionInfoHistory)\n        this.userMoreInfo.subscriptionInfoHistory.forEach((infoStr: string) => {\n            // t1m##20210212##20210312\n            const obj = data.convertSubscriptionInfoStrToObj(infoStr);\n\n            // 오늘이 기간안에 들어있으면 \n            if (obj.stInt >= todayInt && todayInt <= obj.etInt) {\n                returnArr.push(infoStr);\n            }\n        })\n        return returnArr;\n\n    }\n\n\n    // isAvailableBook(cid: string): 'available' | 'needLogin' | 'needPurchase' {\n\n    //     // 로그인이 안 된 경우\n    //     if (!this.isLogin()) {\n    //         return 'needLogin';\n    //     }\n    //     console.log('tmplog_this.userInfo', this.userMoreInfo)\n    //     // 구매 목록에 없는 경우\n    //     if (!this.userMoreInfo.buyCourses.includes(cid)) {\n    //         return 'needPurchase';\n    //     }\n    //     return 'available';\n    // }\n    syncMoreInfo() {\n        console.log('docs.data()-sync');\n        // 유저 로그인 전이면\n        if (!this.userInfo || this.userInfo === '' || this.userInfo === 'loading') {\n            // alert(this.userInfo);\n            return;\n        }\n        // 유저 데이터를 불러오기 전이면\n        if (!this.initUserInfoMerge) return;\n\n        dbService.collection(\"userstatus\").doc(this.makeDocNameWithUserInfo()).set(this.userMoreInfo, { merge: true }).then(function () {\n            console.log(\"Document successfully written!\");\n        });\n    }\n    makeDocNameWithUserInfo() {\n        let id = this.userInfo.email.split('@')[0];\n        const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n        if (reg.test(id)) {\n            id = id.replace(reg, '');\n        }\n        id += 'mXCeNH6A5fjdrDfaOjDe';// 여유있게 자르기위해 랜덤 문자 추가\n        id = id.substr(0, 10);// 10자리로 자름\n        // console.log('this.userInfo.email', this.userInfo.email);\n        return id + this.userInfo.uid;\n    }\n    callLogin(emailPw: {\n        email: string,\n        pw: string,\n    }, callback: (userInfo: any) => void) {\n\n    }\n    sendPasswordResetEmail(email: string) {\n        var auth = firebase.auth();\n        auth.sendPasswordResetEmail(email).then(function () {\n            alert(email + '로 발송된 이메일을 확인 해 주세요.')\n        }).catch((error) => {\n            console.log(error);\n            alert(this.convertErrorMessage(error));\n        });\n    }\n    convertErrorMessage(error: any) {\n        const errorMessage: any = {\n            'auth/invalid-email': '올바른 이메일을 입력하세요.',\n            'auth/invalidNewPw': '입력한 비밀번호가 일치하지 않습니다.',\n            'auth/weak-password': '6자리 이상의 비밀번호를 입력하세요',\n            'auth/wrong-password': '비밀번호가 올바르지 않습니다.',\n            'auth/user-not-found': '해당 가입정보가 없습니다. 정보를 확인 또는 회원가입을 해주세요.',\n            'auth/email-already-in-use': '이미 가입된 이메일입니다.',\n\n        }\n        const convertMessage = errorMessage[error.code]\n        if (convertMessage) {\n            return convertMessage;\n        }\n        console.log(error);\n        return error.message;\n    }\n}\n\nexport default new FBase();\n\n// export const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n// export const storageService = firebase.storage();","export const firebaseConfig = {\n    apiKey: \"AIzaSyBq__j-SvDbukmkLD5CaFo9rKa4706HHJk\",\n    authDomain: \"casetebook.firebaseapp.com\",\n    databaseURL: \"https://casetebook.firebaseio.com\",\n    projectId: \"casetebook\",\n    storageBucket: \"casetebook.appspot.com\",\n    messagingSenderId: \"863352106334\",\n    appId: \"1:863352106334:web:1a3de357b2edff427ef3cf\",\n    measurementId: \"G-0BQB2PPQBE\"\n};\n"],"sourceRoot":""}